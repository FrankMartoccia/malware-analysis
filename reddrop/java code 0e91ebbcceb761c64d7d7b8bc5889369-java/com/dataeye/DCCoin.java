package com.dataeye;

import android.text.TextUtils;
import com.dataeye.c.a;
import com.dataeye.c.af;
import com.dataeye.c.c;
import com.dataeye.c.w;
import com.dataeye.c.x;
import java.util.HashMap;
/* loaded from: classes.dex */
public class DCCoin {
    private static void a(String str, String str2, long j, long j2, String str3) {
        if (!c.c) {
            x.c("Invoke DCCoin.lost() fail , DataEye SDK need init first!");
            return;
        }
        HashMap hashMap = new HashMap();
        hashMap.put("id", str);
        hashMap.put("num", new StringBuilder(String.valueOf(j)).toString());
        if (!TextUtils.isEmpty(str2)) {
            hashMap.put("coinType", str2);
        }
        if (!TextUtils.isEmpty(str3)) {
            hashMap.put("levelsId", str3);
        }
        if (a.g().g != 0) {
            hashMap.put("accountLevel", new StringBuilder(String.valueOf(a.g().g)).toString());
        }
        DCEvent.onEvent("_DESelf_Coin_Lost", hashMap);
        setCoinNum(j2, str2);
    }

    private static void b(String str, String str2, long j, long j2, String str3) {
        if (!c.c) {
            x.c("Invoke DCCoin.gain() fail , DataEye SDK need init first!");
            return;
        }
        HashMap hashMap = new HashMap();
        hashMap.put("id", str);
        hashMap.put("num", new StringBuilder(String.valueOf(j)).toString());
        if (!TextUtils.isEmpty(str3)) {
            hashMap.put("levelsId", str3);
        }
        if (a.g().g != 0) {
            hashMap.put("accountLevel", new StringBuilder(String.valueOf(a.g().g)).toString());
        }
        if (!TextUtils.isEmpty(str2)) {
            hashMap.put("coinType", str2);
        }
        DCEvent.onEvent("_DESelf_Coin_Gain", hashMap);
        setCoinNum(j2, str2);
    }

    public static void gain(String id, String coinType, long gain, long left) {
        b(id, coinType, gain, left, null);
        if (c.c) {
            w.a("DCCoin_gain");
        }
    }

    public static void gainInLevel(String id, String coinType, long gain, long left, String levelId) {
        b(id, coinType, gain, left, levelId);
        if (c.c) {
            w.a("DCCoin_gainInLevel");
        }
    }

    public static void lost(String id, String coinType, long lost, long left) {
        a(id, coinType, lost, left, null);
        if (c.c) {
            w.a("DCCoin_lost");
        }
    }

    public static void lostInLevel(String id, String coinType, long lost, long left, String levelId) {
        a(id, coinType, lost, left, levelId);
        if (c.c) {
            w.a("DCCoin_lostInLevel");
        }
    }

    public static void setCoinNum(long coinNum, String coinType) {
        HashMap hashMap = new HashMap();
        hashMap.put("total", new StringBuilder(String.valueOf(coinNum)).toString());
        hashMap.put("seq", new StringBuilder(String.valueOf(af.b())).toString());
        if (!TextUtils.isEmpty(coinType)) {
            hashMap.put("coinType", coinType);
        }
        DCEvent.onEvent("_DESelf_Coin_Num", hashMap);
        if (c.c) {
            w.a("DCCoin_setCoinNum");
        }
    }
}
