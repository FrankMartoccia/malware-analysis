package com.dataeye;

import android.text.TextUtils;
import com.dataeye.c.a;
import com.dataeye.c.af;
import com.dataeye.c.c;
import com.dataeye.c.w;
import com.dataeye.c.x;
import java.util.HashMap;
/* loaded from: classes.dex */
public class DCItem {
    private static void a(String str, String str2, int i, long j, String str3, String str4, String str5) {
        if (!c.c) {
            x.c("Invoke DCItem.buy() fail , DataEye SDK need init first!");
            return;
        }
        String d = TextUtils.isEmpty(str) ? "-" : af.d(str);
        String d2 = TextUtils.isEmpty(str2) ? "-" : af.d(str2);
        String d3 = TextUtils.isEmpty(str3) ? "-" : af.d(str3);
        String d4 = TextUtils.isEmpty(str4) ? "-" : af.d(str4);
        HashMap hashMap = new HashMap();
        hashMap.put("itemId", d);
        hashMap.put("itemType", d2);
        hashMap.put("itemCnt", new StringBuilder(String.valueOf(i)).toString());
        hashMap.put("virtualCurrency", new StringBuilder(String.valueOf(j)).toString());
        hashMap.put("currencyType", new StringBuilder(String.valueOf(d3)).toString());
        hashMap.put("consumePoint", d4);
        if (!TextUtils.isEmpty(str5)) {
            hashMap.put("levelsId", str5);
        }
        if (!(a.g() == null || a.g().g == 0)) {
            hashMap.put("accountLevel", new StringBuilder(String.valueOf(a.g().g)).toString());
        }
        DCEvent.onEvent("_DESelf_ItemBuy", hashMap);
    }

    private static void a(String str, String str2, int i, String str3, String str4) {
        if (!c.c) {
            x.c("Invoke DCItem.get() fail , DataEye SDK need init first!");
            return;
        }
        String d = TextUtils.isEmpty(str) ? "-" : af.d(str);
        String d2 = TextUtils.isEmpty(str2) ? "-" : af.d(str2);
        String d3 = TextUtils.isEmpty(str3) ? "-" : af.d(str3);
        HashMap hashMap = new HashMap();
        hashMap.put("itemId", d);
        hashMap.put("itemType", d2);
        hashMap.put("itemCnt", new StringBuilder(String.valueOf(i)).toString());
        hashMap.put("reason", d3);
        if (!TextUtils.isEmpty(str4)) {
            hashMap.put("levelsId", str4);
        }
        if (!(a.g() == null || a.g().g == 0)) {
            hashMap.put("accountLevel", new StringBuilder(String.valueOf(a.g().g)).toString());
        }
        DCEvent.onEvent("_DESelf_ItemGet", hashMap);
    }

    private static void b(String str, String str2, int i, String str3, String str4) {
        if (!c.c) {
            x.c("Invoke DCItem.consume() fail , DataEye SDK need init first!");
            return;
        }
        String d = TextUtils.isEmpty(str) ? "-" : af.d(str);
        String d2 = TextUtils.isEmpty(str2) ? "-" : af.d(str2);
        String d3 = TextUtils.isEmpty(str3) ? "-" : af.d(str3);
        HashMap hashMap = new HashMap();
        hashMap.put("itemId", d);
        hashMap.put("itemType", d2);
        hashMap.put("itemCnt", new StringBuilder(String.valueOf(i)).toString());
        hashMap.put("reason", d3);
        if (!TextUtils.isEmpty(str4)) {
            hashMap.put("levelsId", str4);
        }
        if (!(a.g() == null || a.g().g == 0)) {
            hashMap.put("accountLevel", new StringBuilder(String.valueOf(a.g().g)).toString());
        }
        DCEvent.onEvent("_DESelf_ItemUse", hashMap);
    }

    public static void buy(String itemId, String itemType, int itemCnt, long vituralCurrency, String currencyType, String consumePoint) {
        a(itemId, itemType, itemCnt, vituralCurrency, currencyType, consumePoint, null);
        if (c.c) {
            w.a("DCItem_buy ");
        }
    }

    public static void buyInLevel(String itemId, String itemType, int itemCnt, long vituralCurrency, String currencyType, String consumePoint, String levelId) {
        a(itemId, itemType, itemCnt, vituralCurrency, currencyType, consumePoint, levelId);
        if (c.c) {
            w.a("DCItem_buyInLevel ");
        }
    }

    public static void consume(String itemId, String itemType, int itemCnt, String reason) {
        b(itemId, itemType, itemCnt, reason, null);
        if (c.c) {
            w.a("DCItem_consume ");
        }
    }

    public static void consumeInLevel(String itemId, String itemType, int itemCnt, String reason, String levelId) {
        b(itemId, itemType, itemCnt, reason, levelId);
        if (c.c) {
            w.a("DCItem_consumeInLevel ");
        }
    }

    public static void get(String itemId, String itemType, int itemCnt, String reason) {
        a(itemId, itemType, itemCnt, reason, null);
        if (c.c) {
            w.a("DCItem_get ");
        }
    }

    public static void getInLevel(String itemId, String itemType, int itemCnt, String reason, String levelId) {
        a(itemId, itemType, itemCnt, reason, levelId);
        if (c.c) {
            w.a("DCItem_getInLevel ");
        }
    }
}
