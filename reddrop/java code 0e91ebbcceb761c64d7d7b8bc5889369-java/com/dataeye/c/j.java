package com.dataeye.c;

import android.os.Handler;
import android.os.HandlerThread;
import java.util.concurrent.atomic.AtomicInteger;
/* loaded from: classes.dex */
public class j {

    /* renamed from: a  reason: collision with root package name */
    private static HandlerThread f814a = null;
    private static Handler b = null;
    private static AtomicInteger c = new AtomicInteger(0);
    private static int d = 100;

    public static HandlerThread a() {
        try {
            if (f814a == null) {
                f814a = new HandlerThread("DBAsyncUtil_handler");
            }
            if (f814a != null && !f814a.isAlive()) {
                f814a.start();
            }
            return f814a;
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public static void a(m mVar) {
        if (!d()) {
            b().post(new o(mVar));
        }
    }

    public static void a(String str, String str2) {
        b().post(new k(str2, str));
    }

    public static void a(String str, Object[] objArr) {
        if (!d()) {
            b().post(new p(str, objArr));
        }
    }

    public static Handler b() {
        if (b == null) {
            b = new Handler(a().getLooper());
        }
        return b;
    }

    public static void b(m mVar) {
        if (!d()) {
            b().post(new o(mVar));
        }
    }

    private static boolean d() {
        if (c.intValue() >= d) {
            return true;
        }
        c.incrementAndGet();
        return false;
    }
}
