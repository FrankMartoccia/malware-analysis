package com.dataeye.c;

import android.content.Context;
import android.text.TextUtils;
import com.umeng.analytics.pro.x;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import org.xmlpull.v1.XmlPullParser;
import org.xmlpull.v1.XmlPullParserFactory;
/* loaded from: classes.dex */
public class q {
    public static String a(Context context) {
        String str = "";
        try {
            String a2 = a(context.getClass().getClassLoader().getResourceAsStream("mmiap.xml"));
            XmlPullParser newPullParser = XmlPullParserFactory.newInstance().newPullParser();
            newPullParser.setInput(new ByteArrayInputStream(a2.getBytes()), "utf-8");
            for (int eventType = newPullParser.getEventType(); eventType != 1; eventType = newPullParser.next()) {
                if (eventType == 2 && x.b.equals(newPullParser.getName())) {
                    str = newPullParser.nextText();
                    return str;
                }
            }
            return str;
        } catch (Exception e) {
            e.printStackTrace();
            x.a("Invoke DCChannelUtils.getChannelFromMM fail , reason : " + e.getMessage(), e);
            return str;
        }
    }

    private static String a(InputStream inputStream) {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        while (true) {
            int read = inputStream.read();
            if (read == -1) {
                return byteArrayOutputStream.toString();
            }
            byteArrayOutputStream.write(read);
        }
    }

    public static String b(Context context) {
        String str;
        try {
            str = "";
            BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(context.getResources().getAssets().open("premessable.txt")));
            while (true) {
                String readLine = bufferedReader.readLine();
                if (readLine == null) {
                    break;
                }
                str = String.valueOf(str) + readLine;
            }
        } catch (Exception e) {
            x.a("Invoke DCChannelUtils.getChannelFromWo fail , reason : " + e.getMessage(), e);
            e.printStackTrace();
        }
        return !TextUtils.isEmpty(str) ? str : "";
    }
}
