package com.dataeye.c;

import android.app.Activity;
import android.app.Application;
import android.content.Context;
import android.text.TextUtils;
import com.dataeye.a.g;
import java.io.IOException;
import java.io.PrintWriter;
import java.io.StringWriter;
import java.lang.Thread;
import java.util.HashMap;
import java.util.Map;
/* loaded from: classes.dex */
public class aj implements Thread.UncaughtExceptionHandler {
    private static aj d;

    /* renamed from: a  reason: collision with root package name */
    private final Thread.UncaughtExceptionHandler f806a = Thread.getDefaultUncaughtExceptionHandler();
    private Thread b;
    private Throwable c;

    public aj(Application application) {
        Thread.setDefaultUncaughtExceptionHandler(this);
    }

    public static g a(Throwable th) {
        g gVar = new g();
        gVar.f787a = af.b();
        StringWriter stringWriter = new StringWriter();
        th.printStackTrace(new PrintWriter(stringWriter));
        StringBuffer buffer = stringWriter.getBuffer();
        int indexOf = buffer.toString().indexOf("\n");
        if (indexOf > 0) {
            gVar.b = buffer.toString().substring(0, indexOf);
        } else {
            gVar.b = th.getMessage();
        }
        try {
            gVar.c = af.e(buffer.toString());
        } catch (IOException e) {
            gVar.c = new byte[0];
        }
        return gVar;
    }

    public static Map a(String str, Throwable th) {
        HashMap hashMap = new HashMap();
        hashMap.put("errorTime", new StringBuilder().append(af.b()).toString());
        StringWriter stringWriter = new StringWriter();
        th.printStackTrace(new PrintWriter(stringWriter));
        StringBuffer buffer = stringWriter.getBuffer();
        if (!TextUtils.isEmpty(str)) {
            hashMap.put("title", str);
        } else {
            int indexOf = buffer.toString().indexOf("\n");
            if (indexOf > 0) {
                hashMap.put("title", af.i(buffer.substring(0, indexOf).toString()));
            } else {
                hashMap.put("title", af.i(th.getMessage()));
            }
        }
        hashMap.put("content", af.i(buffer.toString()));
        return hashMap;
    }

    public static void a(Context context) {
        if (d == null && (context instanceof Activity)) {
            d = new aj(((Activity) context).getApplication());
        }
    }

    @Override // java.lang.Thread.UncaughtExceptionHandler
    public void uncaughtException(Thread thread, Throwable throwable) {
        this.b = thread;
        this.c = throwable;
        try {
            c.a(a(throwable));
            c.a(false);
            Thread.sleep(3000L);
        } catch (Throwable th) {
            x.a("Invoke UnCaughtException errorï¼Œreason:" + th.getMessage(), th);
        }
        if (this.f806a != null) {
            this.f806a.uncaughtException(this.b, this.c);
        }
    }
}
