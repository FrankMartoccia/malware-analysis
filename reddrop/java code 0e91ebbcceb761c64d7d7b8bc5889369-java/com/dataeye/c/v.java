package com.dataeye.c;

import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.text.TextUtils;
import com.dataeye.a.e;
import com.dataeye.a.g;
import com.dataeye.a.h;
import com.dataeye.a.i;
import com.dataeye.a.k;
import com.dataeye.b.a;
import com.dataeye.b.c;
import com.dataeye.b.f;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
/* loaded from: classes.dex */
public class v {

    /* renamed from: a  reason: collision with root package name */
    public static ArrayList f821a = new ArrayList();
    private static v b;
    private static u c;

    private v(Context context, String str) {
        c = new u(context, str);
    }

    public static v a() {
        return b;
    }

    public static void a(Context context, String str) {
        if (b == null) {
            b = new v(context, str);
        }
    }

    public static void b() {
        f821a.clear();
    }

    public static u c() {
        return c;
    }

    public ArrayList a(SQLiteDatabase sQLiteDatabase) {
        Cursor query = sQLiteDatabase.query("dataeye_agenda_log", null, "type=? ", new String[]{"before_login_event"}, null, null, " _id desc ", null);
        ArrayList arrayList = new ArrayList();
        try {
        } catch (Throwable th) {
            query.close();
        }
        if (query.getCount() != 0) {
            query.moveToFirst();
            do {
                f821a.add(Integer.valueOf(query.getInt(query.getColumnIndex("_id"))));
                String string = query.getString(query.getColumnIndex("agenda_data"));
                h hVar = new h();
                hVar.a(new c(a.a(string)));
                arrayList.add(hVar);
            } while (query.moveToNext());
            query.close();
            return arrayList;
        }
        query.close();
        return arrayList;
    }

    public ArrayList a(String str, SQLiteDatabase sQLiteDatabase) {
        Cursor query = c.k == 2 ? sQLiteDatabase.query("dataeye_agenda_log", null, "( account_id=? or  account_id=? ) and type=? ", new String[]{str, "_DESelf_DEFAULT_ACCOUNTID", "payment"}, null, null, " _id desc ", null) : sQLiteDatabase.query("dataeye_agenda_log", null, "account_id=? and type=? ", new String[]{str, "payment"}, null, null, " _id desc ", null);
        ArrayList arrayList = new ArrayList();
        try {
        } catch (Throwable th) {
            query.close();
        }
        if (query.getCount() != 0) {
            query.moveToFirst();
            do {
                f821a.add(Integer.valueOf(query.getInt(query.getColumnIndex("_id"))));
                String string = query.getString(query.getColumnIndex("agenda_data"));
                k kVar = new k();
                kVar.a(new c(a.a(string)));
                arrayList.add(kVar);
            } while (query.moveToNext());
            query.close();
            return arrayList;
        }
        query.close();
        return arrayList;
    }

    public void a(SQLiteDatabase sQLiteDatabase, Integer num) {
        sQLiteDatabase.execSQL(String.format("DELETE FROM dataeye_history_log WHERE _id = %s", new StringBuilder().append(num).toString()));
    }

    public void a(SQLiteDatabase sQLiteDatabase, List list) {
        sQLiteDatabase.execSQL(String.format("DELETE FROM dataeye_agenda_log WHERE _id IN (%s)", TextUtils.join(",", list.toArray())));
    }

    public void a(f fVar, SQLiteDatabase sQLiteDatabase) {
        sQLiteDatabase.execSQL("insert  or replace into dataeye_history_log( history_data )  values( ? )", new Object[]{a.a(fVar.a())});
    }

    public void a(String str, g gVar) {
        a("errorreport", str, gVar);
    }

    public void a(String str, h hVar) {
        a("event", str, hVar);
    }

    public void a(String str, i iVar) {
        a("oss", str, iVar);
    }

    public void a(String str, k kVar) {
        a("payment", str, kVar);
    }

    public void a(String str, String str2, f fVar) {
        j.a("insert  or replace into dataeye_agenda_log(type,account_id ,agenda_data)  values(?,?,?)", new Object[]{str, str2, a.a(fVar.a())});
    }

    public ArrayList b(SQLiteDatabase sQLiteDatabase) {
        Cursor query = sQLiteDatabase.query("dataeye_agenda_log", null, " type=?", new String[]{"errorreport"}, null, null, "_id desc", null);
        ArrayList arrayList = new ArrayList();
        try {
        } catch (Throwable th) {
            query.close();
        }
        if (query.getCount() != 0) {
            query.moveToFirst();
            do {
                f821a.add(Integer.valueOf(query.getInt(query.getColumnIndex("_id"))));
                String string = query.getString(query.getColumnIndex("agenda_data"));
                g gVar = new g();
                gVar.a(new c(a.a(string)));
                arrayList.add(gVar);
            } while (query.moveToNext());
            query.close();
            return arrayList;
        }
        query.close();
        return arrayList;
    }

    public ArrayList b(String str, SQLiteDatabase sQLiteDatabase) {
        Cursor query = c.k == 2 ? sQLiteDatabase.query("dataeye_agenda_log", null, "( account_id=? or account_id=? ) and type=? ", new String[]{str, "_DESelf_DEFAULT_ACCOUNTID", "event"}, null, null, " _id desc ", null) : sQLiteDatabase.query("dataeye_agenda_log", null, " account_id=? and type=? ", new String[]{str, "event"}, null, null, " _id desc ", null);
        ArrayList arrayList = new ArrayList();
        try {
        } catch (Throwable th) {
            query.close();
        }
        if (query.getCount() != 0) {
            query.moveToFirst();
            do {
                f821a.add(Integer.valueOf(query.getInt(query.getColumnIndex("_id"))));
                String string = query.getString(query.getColumnIndex("agenda_data"));
                h hVar = new h();
                hVar.a(new c(a.a(string)));
                arrayList.add(hVar);
            } while (query.moveToNext());
            query.close();
            return arrayList;
        }
        query.close();
        return arrayList;
    }

    public void b(String str, h hVar) {
        a("before_login_event", str, hVar);
    }

    public ArrayList c(String str, SQLiteDatabase sQLiteDatabase) {
        Cursor query = c.k == 2 ? sQLiteDatabase.query("dataeye_agenda_log", null, "( account_id=? or account_id=? ) and type=?", new String[]{str, "_DESelf_DEFAULT_ACCOUNTID", "oss"}, null, null, "_id desc", null) : sQLiteDatabase.query("dataeye_agenda_log", null, " account_id=?  and type=?", new String[]{str, "oss"}, null, null, "_id desc", null);
        ArrayList arrayList = new ArrayList();
        try {
        } catch (Throwable th) {
            query.close();
        }
        if (query.getCount() != 0) {
            query.moveToFirst();
            do {
                f821a.add(Integer.valueOf(query.getInt(query.getColumnIndex("_id"))));
                String string = query.getString(query.getColumnIndex("agenda_data"));
                i iVar = new i();
                iVar.a(new c(a.a(string)));
                arrayList.add(iVar);
            } while (query.moveToNext());
            query.close();
            return arrayList;
        }
        query.close();
        return arrayList;
    }

    public HashMap c(SQLiteDatabase sQLiteDatabase) {
        Cursor query = sQLiteDatabase.query("dataeye_history_log", new String[]{"*"}, null, null, null, null, " _id desc ", null);
        HashMap hashMap = new HashMap();
        try {
        } catch (Throwable th) {
            query.close();
        }
        if (query.getCount() != 0) {
            query.moveToFirst();
            do {
                int i = query.getInt(query.getColumnIndex("_id"));
                String string = query.getString(query.getColumnIndex("history_data"));
                e eVar = new e();
                eVar.a(new c(a.a(string)));
                hashMap.put(Integer.valueOf(i), eVar);
            } while (query.moveToNext());
            query.close();
            return hashMap;
        }
        query.close();
        return hashMap;
    }
}
