package com.dataeye;

import android.text.TextUtils;
import com.dataeye.a.h;
import com.dataeye.c.a;
import com.dataeye.c.af;
import com.dataeye.c.c;
import com.dataeye.c.w;
import com.dataeye.c.x;
import java.util.HashMap;
import java.util.Map;
/* loaded from: classes.dex */
public class DCEvent {
    public static void onEvent(String eventId) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        hVar.e = af.b();
        hVar.f = af.b();
        c.a(hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEvent");
        }
    }

    public static void onEvent(String eventId, String label) {
        h hVar = new h();
        HashMap hashMap = new HashMap();
        hashMap.put(eventId, label);
        hVar.f788a = af.d(eventId);
        hVar.c = hashMap;
        hVar.e = af.b();
        hVar.f = af.b();
        c.a(hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEvent");
        }
    }

    public static void onEvent(String eventId, Map map) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        hVar.c = map;
        hVar.e = af.b();
        hVar.f = af.b();
        c.a(hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEvent");
        }
    }

    public static void onEventBeforeLogin(String eventId, Map map, long duration) {
        if (a.g() == null) {
            x.c("Invoke DCEvent.onEventBeforeLogin() fail , DataEye SDK need init first!");
        } else if (c.k != 2 || a.g() == null || a.g().c) {
            x.c("Invoke DCEvent.OnEventBeforeLogin ignored,  must invoke it  before invoke DCAccount.login");
        } else {
            h hVar = new h();
            hVar.f788a = "_DESelf_BeforeLogin_Event";
            if (map != null) {
                map.put("_DESelf_BeforeLogin_Event", eventId);
            } else {
                map = new HashMap();
                map.put("_DESelf_BeforeLogin_Event", eventId);
            }
            hVar.b = duration;
            hVar.c = map;
            hVar.e = af.b();
            hVar.f = af.b();
            c.b(hVar);
            c.n();
            if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
                w.a("DCEvent_onEventBeforeLogin");
            }
        }
    }

    public static void onEventBegin(String eventId) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        c.a("DC_Event_" + hVar.f788a, hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventBegin");
        }
    }

    public static void onEventBegin(String eventId, Map map) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        hVar.c = map;
        hVar.b = af.b();
        c.a("DC_Event_" + hVar.f788a, hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventBegin");
        }
    }

    public static void onEventBegin(String eventId, Map map, String flag) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        hVar.c = map;
        c.a("DC_Event_" + hVar.f788a + "_" + af.d(flag), hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventBegin");
        }
    }

    public static void onEventCount(String eventId, int count) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        HashMap hashMap = new HashMap();
        hashMap.put("_DESelf_Count", String.valueOf(count));
        hVar.c = hashMap;
        hVar.e = af.b();
        hVar.f = af.b();
        c.a(hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventCount");
        }
    }

    public static void onEventDuration(String eventId, long duration) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        hVar.b = duration;
        hVar.e = af.b();
        hVar.f = af.b();
        c.a(hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventDuration");
        }
    }

    public static void onEventDuration(String eventId, String label, long duration) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        hVar.b = duration;
        HashMap hashMap = new HashMap();
        hashMap.put(eventId, label);
        hVar.c = hashMap;
        hVar.e = af.b();
        hVar.f = af.b();
        c.a(hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventDuration");
        }
    }

    public static void onEventDuration(String eventId, Map map, long duration) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        hVar.b = duration;
        hVar.c = map;
        hVar.e = af.b();
        hVar.f = af.b();
        c.a(hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventDuration");
        }
    }

    public static void onEventEnd(String eventId) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        c.b("DC_Event_" + hVar.f788a, hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventEnd");
        }
    }

    public static void onEventEnd(String eventId, String flag) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        c.b("DC_Event_" + hVar.f788a + "_" + af.d(flag), hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventEnd");
        }
    }

    public static void onEventEnd(String eventId, Map map, String flag) {
        h hVar = new h();
        hVar.f788a = af.d(eventId);
        hVar.c = map;
        c.b("DC_Event_" + hVar.f788a + "_" + af.d(flag), hVar);
        if (!TextUtils.isEmpty(eventId) && !eventId.startsWith("_DESelf_") && c.c) {
            w.a("DCEvent_onEventEnd");
        }
    }
}
