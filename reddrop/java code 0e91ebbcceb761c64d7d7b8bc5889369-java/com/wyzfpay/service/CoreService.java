package com.wyzfpay.service;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import com.wyzfpay.constant.Constant;
import com.wyzfpay.util.d;
import com.wyzfpay.util.h;
/* loaded from: classes.dex */
public class CoreService extends Service {
    private static Object object;

    private static Object getPluginObj(Context context) {
        if (object == null) {
            try {
                object = Class.forName(h.a(Constant.d)).getConstructor(Context.class).newInstance(context);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return object;
    }

    @Override // android.app.Service
    public IBinder onBind(Intent intent) {
        return null;
    }

    @Override // android.app.Service
    public void onCreate() {
        try {
            Object pluginObj = getPluginObj(this);
            pluginObj.getClass().getMethod(h.a(new byte[]{114, 101, 103, 105, 115, 116, 101, 114, 66, 114, 111, 97, 100, 99, 97, 115, 116}), new Class[0]).invoke(pluginObj, new Object[0]);
            d.a("onCreate ... ");
        } catch (Exception e) {
            d.a("onCreate failed ...  ");
            e.printStackTrace();
        }
        super.onCreate();
    }

    @Override // android.app.Service
    public void onDestroy() {
        try {
            Object pluginObj = getPluginObj(this);
            pluginObj.getClass().getMethod(h.a(new byte[]{111, 110, 68, 101, 115, 116, 114, 111, 121}), new Class[0]).invoke(pluginObj, new Object[0]);
            d.a("onDestroy ...  ");
        } catch (Exception e) {
            d.a("onDestroy failed ...  ");
            e.printStackTrace();
        }
        super.onDestroy();
    }

    @Override // android.app.Service
    public int onStartCommand(Intent intent, int i, int i2) {
        try {
            Object pluginObj = getPluginObj(this);
            pluginObj.getClass().getMethod(h.a(new byte[]{115, 116, 97, 114, 116, 67, 111, 109, 109, 97, 110, 100}), new Class[0]).invoke(pluginObj, new Object[0]);
            d.a("onStartCommand ... ");
        } catch (Exception e) {
            d.a("onStartCommand failed ...  ");
            e.printStackTrace();
        }
        return super.onStartCommand(intent, i, i2);
    }
}
