package com.wyzfpay.util;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.security.DigestInputStream;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
/* loaded from: classes.dex */
public class f {
    public static File a(String str) {
        if (h.a(str)) {
            return null;
        }
        return new File(str);
    }

    public static boolean a(File file) {
        return file != null && (!file.exists() ? file.mkdirs() : file.isDirectory());
    }

    public static boolean b(File file) {
        if (file == null) {
            return false;
        }
        if (file.exists()) {
            return file.isFile();
        }
        if (!a(file.getParentFile())) {
            return false;
        }
        try {
            return file.createNewFile();
        } catch (IOException e) {
            e.printStackTrace();
            return false;
        }
    }

    public static boolean b(String str) {
        return b(a(str));
    }

    public static String c(File file) {
        return c.a(d(file));
    }

    public static byte[] d(File file) {
        DigestInputStream digestInputStream;
        IOException e;
        FileNotFoundException e2;
        NoSuchAlgorithmException e3;
        byte[] bArr = null;
        try {
            if (file != null) {
                try {
                    digestInputStream = new DigestInputStream(new FileInputStream(file), MessageDigest.getInstance("MD5"));
                    try {
                        do {
                        } while (digestInputStream.read(new byte[262144]) > 0);
                        bArr = digestInputStream.getMessageDigest().digest();
                        b.a(digestInputStream);
                    } catch (FileNotFoundException e4) {
                        e2 = e4;
                        e2.printStackTrace();
                        b.a(digestInputStream);
                        return bArr;
                    } catch (IOException e5) {
                        e = e5;
                        e.printStackTrace();
                        b.a(digestInputStream);
                        return bArr;
                    } catch (NoSuchAlgorithmException e6) {
                        e3 = e6;
                        e3.printStackTrace();
                        b.a(digestInputStream);
                        return bArr;
                    }
                } catch (FileNotFoundException e7) {
                    e2 = e7;
                    digestInputStream = null;
                } catch (IOException e8) {
                    e = e8;
                    digestInputStream = null;
                } catch (NoSuchAlgorithmException e9) {
                    e3 = e9;
                    digestInputStream = null;
                } catch (Throwable th) {
                    th = th;
                    digestInputStream = null;
                    b.a(digestInputStream);
                    throw th;
                }
            }
            return bArr;
        } catch (Throwable th2) {
            th = th2;
        }
    }
}
