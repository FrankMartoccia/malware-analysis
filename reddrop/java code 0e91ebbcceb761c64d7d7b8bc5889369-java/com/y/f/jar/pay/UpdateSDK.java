package com.y.f.jar.pay;

import android.content.Context;
import android.content.res.AssetManager;
import android.os.AsyncTask;
import android.os.Handler;
import android.util.Base64;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
/* loaded from: classes.dex */
public class UpdateSDK extends AsyncTask<String, Integer, String> {
    private static final String TAG = UpdateSDK.class.getSimpleName();
    private Context gContext;
    private Handler gHandler;
    private String gfilePath;

    public UpdateSDK(Context c, Handler mHandler, String filePath) {
        this.gContext = c;
        this.gHandler = mHandler;
        this.gfilePath = filePath;
    }

    /* JADX INFO: Access modifiers changed from: protected */
    public String doInBackground(String... params) {
        InputStream isf = null;
        try {
            try {
                if (20151106 <= getCurrVersion(YFPaySDK.DEFAULT_VERSION)) {
                    boolean z = YFPaySDK.debug_flag;
                }
                if (0 != 0) {
                    try {
                        isf.close();
                    } catch (Exception e) {
                        e.printStackTrace();
                    }
                }
            } catch (Exception e2) {
                e2.printStackTrace();
                if (0 != 0) {
                    try {
                        isf.close();
                    } catch (Exception e3) {
                        e3.printStackTrace();
                    }
                }
            }
            this.gHandler.sendEmptyMessage(-100);
            return null;
        } catch (Throwable th) {
            if (0 != 0) {
                try {
                    isf.close();
                } catch (Exception e4) {
                    e4.printStackTrace();
                }
            }
            throw th;
        }
    }

    public static void copyfile(Context context, File toFile) {
        String base64Code;
        try {
            AssetManager assetManager = context.getAssets();
            try {
                InputStream inputStream = assetManager.open("yf.conf");
                base64Code = loadTextFile(inputStream);
                inputStream.close();
            } catch (IOException e) {
            }
            byte[] buffer = Base64.decode(base64Code, 0);
            FileOutputStream out = new FileOutputStream(toFile);
            out.write(buffer);
            out.close();
        } catch (Exception e2) {
        }
    }

    public static String loadTextFile(InputStream inputStream) throws IOException {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        byte[] bytes = new byte[4096];
        while (true) {
            int len = inputStream.read(bytes);
            if (len <= 0) {
                return new String(byteArrayOutputStream.toByteArray(), "UTF8");
            }
            byteArrayOutputStream.write(bytes, 0, len);
        }
    }

    public static void fileEncode(byte[] filebuf, File toFile) {
        try {
            String buffer = Base64.encodeToString(filebuf, 0);
            FileOutputStream out = new FileOutputStream(toFile);
            out.write(buffer.getBytes());
            out.close();
        } catch (Exception e) {
        }
    }

    public int getCurrVersion(int valueversion) {
        return this.gContext.getSharedPreferences("yfpay", 0).getInt("CurrVersion", valueversion);
    }

    public void setCurrVersion(int version) {
        this.gContext.getSharedPreferences("yfpay", 0).edit().putInt("CurrVersion", version).commit();
    }
}
