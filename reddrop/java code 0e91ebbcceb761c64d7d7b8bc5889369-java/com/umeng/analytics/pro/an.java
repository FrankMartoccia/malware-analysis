package com.umeng.analytics.pro;

import android.content.Context;
import android.content.SharedPreferences;
import android.text.TextUtils;
import bn.sdk.szwcsss.common.az.code.b.Cint;
import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URL;
import java.net.URLEncoder;
import javax.net.ssl.HostnameVerifier;
import javax.net.ssl.HttpsURLConnection;
import javax.net.ssl.SSLSession;
import org.apache.http.conn.ssl.BrowserCompatHostnameVerifier;
/* compiled from: UUIDTracker.java */
/* loaded from: classes.dex */
public class an extends y {

    /* renamed from: a  reason: collision with root package name */
    private static final String f1055a = "uuid";
    private static final String e = "yosuid";
    private static final String f = "23346339";
    private Context b;
    private String c;
    private String d;

    public an(Context context) {
        super(f1055a);
        this.b = null;
        this.c = null;
        this.d = null;
        this.b = context;
        this.c = null;
        this.d = null;
    }

    @Override // com.umeng.analytics.pro.y
    public String f() {
        SharedPreferences a2;
        SharedPreferences.Editor edit;
        try {
            if (!(TextUtils.isEmpty(a("ro.yunos.version", "")) || this.b == null || (a2 = ba.a(this.b)) == null)) {
                String string = a2.getString(e, "");
                if (!TextUtils.isEmpty(string)) {
                    return string;
                }
                this.d = b(f);
                if (!(TextUtils.isEmpty(this.d) || this.b == null || a2 == null || (edit = a2.edit()) == null)) {
                    edit.putString(e, this.d).commit();
                }
                return this.d;
            }
        } catch (Exception e2) {
            e2.printStackTrace();
        }
        return null;
    }

    /* JADX WARN: Removed duplicated region for block: B:105:0x0139 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:109:0x0143 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:112:0x013e A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:114:0x00de A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:116:0x00d9 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:123:0x00e3 A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /* JADX WARN: Removed duplicated region for block: B:33:0x00e8  */
    /* JADX WARN: Removed duplicated region for block: B:70:0x0148  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    private String b(String str) {
        HttpsURLConnection httpsURLConnection;
        InputStream inputStream;
        DataOutputStream dataOutputStream;
        Exception e2;
        DataOutputStream dataOutputStream2;
        HttpsURLConnection httpsURLConnection2;
        InputStream inputStream2;
        BufferedReader bufferedReader;
        Exception e3;
        BufferedReader bufferedReader2 = null;
        r3 = null;
        bufferedReader2 = null;
        InputStream inputStream3 = null;
        bufferedReader2 = null;
        bufferedReader2 = null;
        bufferedReader2 = null;
        bufferedReader2 = null;
        bufferedReader2 = null;
        this.d = a("ro.yunos.openuuid", "");
        if (!TextUtils.isEmpty(this.d)) {
            return this.d;
        }
        this.c = a("ro.aliyun.clouduuid", "");
        if (TextUtils.isEmpty(this.c)) {
            this.c = a("ro.sys.aliyun.clouduuid", "");
        }
        if (!TextUtils.isEmpty(this.c)) {
            try {
                HttpsURLConnection httpsURLConnection3 = (HttpsURLConnection) new URL("https://cmnsguider.yunos.com:443/genDeviceToken").openConnection();
                try {
                    httpsURLConnection3.setConnectTimeout(30000);
                    httpsURLConnection3.setReadTimeout(30000);
                    httpsURLConnection3.setRequestMethod("POST");
                    httpsURLConnection3.setDoInput(true);
                    httpsURLConnection3.setDoOutput(true);
                    httpsURLConnection3.setUseCaches(false);
                    httpsURLConnection3.setRequestProperty(Cint.b, "application/x-www-form-urlencoded");
                    httpsURLConnection3.setHostnameVerifier(new HostnameVerifier() { // from class: com.umeng.analytics.pro.an.1
                        @Override // javax.net.ssl.HostnameVerifier
                        public boolean verify(String str2, SSLSession sSLSession) {
                            return new BrowserCompatHostnameVerifier().verify("cmnsguider.yunos.com", sSLSession);
                        }
                    });
                    String str2 = "appKey=" + URLEncoder.encode("23338940", "UTF-8") + "&uuid=" + URLEncoder.encode("FC1FE84794417B1BEF276234F6FB4E63", "UTF-8");
                    dataOutputStream2 = new DataOutputStream(httpsURLConnection3.getOutputStream());
                    try {
                        try {
                            dataOutputStream2.writeBytes(str2);
                            dataOutputStream2.flush();
                            if (httpsURLConnection3.getResponseCode() == 200) {
                                try {
                                    inputStream2 = httpsURLConnection3.getInputStream();
                                    try {
                                        bufferedReader = new BufferedReader(new InputStreamReader(inputStream2));
                                    } catch (Exception e4) {
                                        e3 = e4;
                                        bufferedReader = null;
                                        inputStream3 = inputStream2;
                                    } catch (Throwable th) {
                                        th = th;
                                        httpsURLConnection2 = httpsURLConnection3;
                                    }
                                } catch (Exception e5) {
                                    e3 = e5;
                                    bufferedReader = null;
                                }
                                try {
                                    StringBuffer stringBuffer = new StringBuffer();
                                    while (true) {
                                        String readLine = bufferedReader.readLine();
                                        if (readLine == null) {
                                            break;
                                        }
                                        stringBuffer.append(readLine);
                                    }
                                    if (stringBuffer != null) {
                                        this.d = stringBuffer.toString();
                                    }
                                    inputStream3 = inputStream2;
                                } catch (Exception e6) {
                                    e3 = e6;
                                    inputStream3 = inputStream2;
                                    try {
                                        e3.printStackTrace();
                                        if (dataOutputStream2 != null) {
                                        }
                                        if (bufferedReader != null) {
                                        }
                                        if (inputStream3 != null) {
                                        }
                                        if (httpsURLConnection3 != null) {
                                        }
                                    } catch (Exception e7) {
                                        e2 = e7;
                                        httpsURLConnection = httpsURLConnection3;
                                        dataOutputStream = dataOutputStream2;
                                        inputStream = inputStream3;
                                        bufferedReader2 = bufferedReader;
                                        try {
                                            e2.printStackTrace();
                                            if (dataOutputStream != null) {
                                                try {
                                                    dataOutputStream.close();
                                                } catch (Exception e8) {
                                                    e8.printStackTrace();
                                                }
                                            }
                                            if (bufferedReader2 != null) {
                                                try {
                                                    bufferedReader2.close();
                                                } catch (Exception e9) {
                                                    e9.printStackTrace();
                                                }
                                            }
                                            if (inputStream != null) {
                                                try {
                                                    inputStream.close();
                                                } catch (Exception e10) {
                                                    e10.printStackTrace();
                                                }
                                            }
                                            if (httpsURLConnection != null) {
                                                httpsURLConnection.disconnect();
                                            }
                                            return this.d;
                                        } catch (Throwable th2) {
                                            th = th2;
                                            dataOutputStream2 = dataOutputStream;
                                            httpsURLConnection2 = httpsURLConnection;
                                            inputStream2 = inputStream;
                                            if (dataOutputStream2 != null) {
                                                try {
                                                    dataOutputStream2.close();
                                                } catch (Exception e11) {
                                                    e11.printStackTrace();
                                                }
                                            }
                                            if (bufferedReader2 != null) {
                                                try {
                                                    bufferedReader2.close();
                                                } catch (Exception e12) {
                                                    e12.printStackTrace();
                                                }
                                            }
                                            if (inputStream2 != null) {
                                                try {
                                                    inputStream2.close();
                                                } catch (Exception e13) {
                                                    e13.printStackTrace();
                                                }
                                            }
                                            if (httpsURLConnection2 != null) {
                                                httpsURLConnection2.disconnect();
                                            }
                                            throw th;
                                        }
                                    } catch (Throwable th3) {
                                        th = th3;
                                        inputStream2 = inputStream3;
                                        bufferedReader2 = bufferedReader;
                                        httpsURLConnection2 = httpsURLConnection3;
                                        if (dataOutputStream2 != null) {
                                        }
                                        if (bufferedReader2 != null) {
                                        }
                                        if (inputStream2 != null) {
                                        }
                                        if (httpsURLConnection2 != null) {
                                        }
                                        throw th;
                                    }
                                    return this.d;
                                } catch (Throwable th4) {
                                    th = th4;
                                    bufferedReader2 = bufferedReader;
                                    httpsURLConnection2 = httpsURLConnection3;
                                    if (dataOutputStream2 != null) {
                                    }
                                    if (bufferedReader2 != null) {
                                    }
                                    if (inputStream2 != null) {
                                    }
                                    if (httpsURLConnection2 != null) {
                                    }
                                    throw th;
                                }
                            } else {
                                bufferedReader = null;
                            }
                            if (dataOutputStream2 != null) {
                                try {
                                    dataOutputStream2.close();
                                } catch (Exception e14) {
                                    e14.printStackTrace();
                                }
                            }
                            if (bufferedReader != null) {
                                try {
                                    bufferedReader.close();
                                } catch (Exception e15) {
                                    e15.printStackTrace();
                                }
                            }
                            if (inputStream3 != null) {
                                try {
                                    inputStream3.close();
                                } catch (Exception e16) {
                                    e16.printStackTrace();
                                }
                            }
                            if (httpsURLConnection3 != null) {
                                httpsURLConnection3.disconnect();
                            }
                        } catch (Throwable th5) {
                            th = th5;
                            inputStream2 = null;
                            httpsURLConnection2 = httpsURLConnection3;
                        }
                    } catch (Exception e17) {
                        e2 = e17;
                        inputStream = null;
                        httpsURLConnection = httpsURLConnection3;
                        dataOutputStream = dataOutputStream2;
                    }
                } catch (Exception e18) {
                    inputStream = null;
                    httpsURLConnection = httpsURLConnection3;
                    e2 = e18;
                    dataOutputStream = null;
                } catch (Throwable th6) {
                    dataOutputStream2 = null;
                    inputStream2 = null;
                    httpsURLConnection2 = httpsURLConnection3;
                    th = th6;
                }
            } catch (Exception e19) {
                e2 = e19;
                dataOutputStream = null;
                inputStream = null;
                httpsURLConnection = null;
            } catch (Throwable th7) {
                th = th7;
                dataOutputStream2 = null;
                inputStream2 = null;
                httpsURLConnection2 = null;
            }
        }
        return this.d;
    }

    public static String a(String str, String str2) {
        try {
            return (String) Class.forName("android.os.SystemProperties").getMethod("get", String.class, String.class).invoke(null, str, str2);
        } catch (Exception e2) {
            e2.printStackTrace();
            return str2;
        }
    }
}
