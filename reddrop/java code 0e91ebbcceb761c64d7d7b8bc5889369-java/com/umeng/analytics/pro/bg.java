package com.umeng.analytics.pro;

import android.content.Context;
import android.text.TextUtils;
import com.umeng.analytics.pro.af;
/* compiled from: ABTest.java */
/* loaded from: classes.dex */
public class bg implements az {
    private static bg i = null;

    /* renamed from: a  reason: collision with root package name */
    private boolean f1080a = false;
    private int b = -1;
    private int c = -1;
    private int d = -1;
    private float e = 0.0f;
    private float f = 0.0f;
    private String g = null;
    private Context h;

    public static synchronized bg a(Context context) {
        bg bgVar;
        synchronized (bg.class) {
            if (i == null) {
                af.a b = af.a(context).b();
                i = new bg(context, b.f(null), b.d(0));
            }
            bgVar = i;
        }
        return bgVar;
    }

    private bg(Context context, String str, int i2) {
        this.h = null;
        this.h = context;
        a(str, i2);
    }

    private float b(String str, int i2) {
        int i3 = i2 * 2;
        if (str == null) {
            return 0.0f;
        }
        return Integer.valueOf(str.substring(i3, i3 + 5), 16).intValue() / 1048576.0f;
    }

    public void a(String str, int i2) {
        this.c = i2;
        String a2 = aa.a(this.h);
        if (TextUtils.isEmpty(a2) || TextUtils.isEmpty(str)) {
            this.f1080a = false;
            return;
        }
        try {
            this.e = b(a2, 12);
            this.f = b(a2, 6);
            if (str.startsWith("SIG7")) {
                b(str);
            } else if (str.startsWith("FIXED")) {
                c(str);
            }
        } catch (Exception e) {
            this.f1080a = false;
            by.e("v:" + str, e);
        }
    }

    public static boolean a(String str) {
        if (TextUtils.isEmpty(str)) {
            return false;
        }
        String[] split = str.split("\\|");
        if (split.length != 6) {
            return false;
        }
        if (split[0].startsWith("SIG7") && split[1].split(",").length == split[5].split(",").length) {
            return true;
        }
        if (!split[0].startsWith("FIXED")) {
            return false;
        }
        int length = split[5].split(",").length;
        int parseInt = Integer.parseInt(split[1]);
        return length >= parseInt && parseInt >= 1;
    }

    private void b(String str) {
        if (str != null) {
            String[] split = str.split("\\|");
            if (this.e > (split[2].equals("SIG13") ? Float.valueOf(split[3]).floatValue() : 0.0f)) {
                this.f1080a = false;
                return;
            }
            float[] fArr = null;
            if (split[0].equals("SIG7")) {
                String[] split2 = split[1].split(",");
                float[] fArr2 = new float[split2.length];
                for (int i2 = 0; i2 < split2.length; i2++) {
                    fArr2[i2] = Float.valueOf(split2[i2]).floatValue();
                }
                fArr = fArr2;
            }
            int[] iArr = null;
            if (split[4].equals("RPT")) {
                this.g = "RPT";
                String[] split3 = split[5].split(",");
                int[] iArr2 = new int[split3.length];
                for (int i3 = 0; i3 < split3.length; i3++) {
                    iArr2[i3] = Integer.valueOf(split3[i3]).intValue();
                }
                iArr = iArr2;
            } else if (split[4].equals("DOM")) {
                this.f1080a = true;
                this.g = "DOM";
                try {
                    String[] split4 = split[5].split(",");
                    iArr = new int[split4.length];
                    for (int i4 = 0; i4 < split4.length; i4++) {
                        iArr[i4] = Integer.valueOf(split4[i4]).intValue();
                    }
                } catch (Exception e) {
                }
            }
            float f = 0.0f;
            int i5 = 0;
            while (true) {
                if (i5 >= fArr.length) {
                    i5 = -1;
                    break;
                }
                f += fArr[i5];
                if (this.f < f) {
                    break;
                }
                i5++;
            }
            if (i5 != -1) {
                this.f1080a = true;
                this.d = i5 + 1;
                if (iArr != null) {
                    this.b = iArr[i5];
                    return;
                }
                return;
            }
            this.f1080a = false;
        }
    }

    private void c(String str) {
        if (str != null) {
            String[] split = str.split("\\|");
            float f = 0.0f;
            if (split[2].equals("SIG13")) {
                f = Float.valueOf(split[3]).floatValue();
            }
            if (this.e > f) {
                this.f1080a = false;
                return;
            }
            int intValue = split[0].equals("FIXED") ? Integer.valueOf(split[1]).intValue() : -1;
            int[] iArr = null;
            if (split[4].equals("RPT")) {
                this.g = "RPT";
                String[] split2 = split[5].split(",");
                int[] iArr2 = new int[split2.length];
                for (int i2 = 0; i2 < split2.length; i2++) {
                    iArr2[i2] = Integer.valueOf(split2[i2]).intValue();
                }
                iArr = iArr2;
            } else if (split[4].equals("DOM")) {
                this.g = "DOM";
                this.f1080a = true;
                try {
                    String[] split3 = split[5].split(",");
                    iArr = new int[split3.length];
                    for (int i3 = 0; i3 < split3.length; i3++) {
                        iArr[i3] = Integer.valueOf(split3[i3]).intValue();
                    }
                } catch (Exception e) {
                }
            }
            if (intValue != -1) {
                this.f1080a = true;
                this.d = intValue;
                if (iArr != null) {
                    this.b = iArr[intValue - 1];
                    return;
                }
                return;
            }
            this.f1080a = false;
        }
    }

    public boolean a() {
        return this.f1080a;
    }

    public int b() {
        return this.b;
    }

    public int c() {
        return this.c;
    }

    public int d() {
        return this.d;
    }

    public String e() {
        return !this.f1080a ? x.aF : String.valueOf(this.d);
    }

    public String f() {
        return this.g;
    }

    @Override // com.umeng.analytics.pro.az
    public void a(af.a aVar) {
        a(aVar.f(null), aVar.d(0));
    }

    public String toString() {
        return " p13:" + this.e + " p07:" + this.f + " policy:" + this.b + " interval:" + this.c;
    }
}
