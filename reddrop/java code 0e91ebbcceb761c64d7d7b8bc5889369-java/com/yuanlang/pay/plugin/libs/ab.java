package com.yuanlang.pay.plugin.libs;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import com.umeng.analytics.pro.dm;
import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import org.json.JSONException;
import org.json.JSONObject;
/* loaded from: classes.dex */
public final class ab extends w {
    public static String b = "";
    public static String c = "";
    private static final String d = "ProtocolThread";
    private static final boolean e = false;
    private static final boolean f = false;
    private Context g;
    private Object h;
    private Object i;
    private String j;
    private z k;
    private int l;

    public ab(Context context, z zVar, String str, int i, Object obj, Object obj2) {
        this.h = null;
        this.g = context;
        this.h = obj;
        this.i = obj2;
        this.j = str;
        this.k = zVar;
        this.l = i;
    }

    private static String a(String str) {
        byte[] bArr;
        try {
            if (str.length() <= 0) {
                bArr = null;
            } else {
                bArr = new byte[str.length() / 2];
                for (int i = 0; i < str.length() / 2; i++) {
                    bArr[i] = (byte) ((Integer.parseInt(str.substring(i * 2, (i * 2) + 1), 16) * 16) + Integer.parseInt(str.substring((i * 2) + 1, (i * 2) + 2), 16));
                }
            }
            SecretKeySpec secretKeySpec = new SecretKeySpec(b.getBytes(), c);
            Cipher cipher = Cipher.getInstance(c);
            cipher.init(2, secretKeySpec);
            return new String(cipher.doFinal(bArr));
        } catch (Exception e2) {
            return "";
        }
    }

    private static String a(byte[] bArr) {
        StringBuffer stringBuffer = new StringBuffer(bArr.length * 2);
        for (int i = 0; i < bArr.length; i++) {
            stringBuffer.append(Integer.toString((bArr[i] >> 4) & 15, 16) + Integer.toString(bArr[i] & dm.m, 16));
        }
        return stringBuffer.toString();
    }

    private static byte[] b(String str) {
        if (str.length() <= 0) {
            return null;
        }
        byte[] bArr = new byte[str.length() / 2];
        for (int i = 0; i < str.length() / 2; i++) {
            bArr[i] = (byte) ((Integer.parseInt(str.substring(i * 2, (i * 2) + 1), 16) * 16) + Integer.parseInt(str.substring((i * 2) + 1, (i * 2) + 2), 16));
        }
        return bArr;
    }

    @Override // java.lang.Thread, java.lang.Runnable
    public final void run() {
        boolean z;
        NetworkInfo[] allNetworkInfo;
        ConnectivityManager connectivityManager = (ConnectivityManager) this.g.getSystemService("connectivity");
        if (!(connectivityManager == null || (allNetworkInfo = connectivityManager.getAllNetworkInfo()) == null)) {
            for (NetworkInfo networkInfo : allNetworkInfo) {
                if (networkInfo.getState() == NetworkInfo.State.CONNECTED) {
                    z = true;
                    break;
                }
            }
        }
        z = false;
        if (!z) {
            this.k.a(this.l);
        } else if (!this.f1269a) {
            String a2 = y.a(this.j, aa.a(this.h));
            if (a2 == null) {
                this.k.a(this.l);
                return;
            }
            try {
                try {
                    aa.a(new JSONObject(a2), this.i);
                    if (!(this.f1269a || this.k == null)) {
                        new StringBuilder("mRequestType: ").append(this.l);
                        this.k.a(this.l, this.i);
                    }
                } catch (IllegalAccessException e2) {
                    this.k.a(this.l);
                } catch (IllegalArgumentException e3) {
                    this.k.a(this.l);
                }
            } catch (JSONException e4) {
                this.k.a(this.l);
            }
        }
    }
}
