package com.yuanlang.pay.plugin.libs;

import android.content.Context;
import android.telephony.TelephonyManager;
import com.yuanlang.pay.AppTache;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import org.ct.jni.BsdiffJNI;
/* JADX INFO: Access modifiers changed from: package-private */
/* loaded from: classes.dex */
public final class l {

    /* renamed from: a  reason: collision with root package name */
    static final String f1260a = "VersionManager";
    private static l h = new l();
    Context c;
    int e;
    n f;
    boolean b = false;
    private boolean i = false;
    String d = null;
    z g = new m(this);

    private l() {
    }

    public static l a() {
        return h;
    }

    private static String a(String str, String str2, String str3) {
        return BsdiffJNI.bspatch(str, str3, str2);
    }

    private void a(int i) {
        this.e = i;
    }

    private void a(p pVar) {
        String str = c.A + "/yl_plugin.apk_" + pVar.c;
        if (pVar.f == 1) {
            if (y.a(pVar.e, str)) {
                this.g.a(1001, str);
                return;
            }
        } else if (pVar.f == 2) {
            if (AppTache.isExistbsjni(this.c)) {
                String str2 = c.A + "/yl_plugin.apk_" + pVar.b + "_" + pVar.c;
                if (y.a(pVar.e, str2)) {
                    if (this.d == null) {
                        a(false);
                        return;
                    } else if (BsdiffJNI.bspatch(this.d, str, str2) != null) {
                        this.g.a(1001, str);
                        return;
                    }
                }
            } else {
                return;
            }
        }
        a(false);
    }

    public static boolean a(long j, String str) {
        if (!new File(str).exists()) {
            return false;
        }
        long j2 = 0;
        try {
            j2 = k.a(str);
        } catch (IOException e) {
        }
        new StringBuilder("crc32:").append(j).append(" crc32Local:").append(j2);
        return j2 == j;
    }

    public static boolean a(Context context) {
        return !context.getApplicationContext().getSharedPreferences("qin_config", 0).getString("date", "").equals(k.a());
    }

    private int b() {
        return this.e;
    }

    private static String b(Context context) {
        try {
            return ((TelephonyManager) context.getSystemService("phone")).getSubscriberId();
        } catch (Exception e) {
            new StringBuilder("ImsiImeiUtilï¼š001:").append(e.toString());
            return "";
        }
    }

    private boolean c() {
        return this.b;
    }

    public final synchronized void a(Context context, int i, long j, String str, String str2) {
        if (!this.i) {
            this.d = str;
            this.i = true;
            this.c = context;
            if (this.f == null) {
                this.f = new n(this.g);
            }
            o oVar = new o();
            if (str == null) {
                oVar.b = 0;
            } else {
                oVar.b = i;
            }
            oVar.d = j;
            oVar.e = b(context);
            oVar.f = str2;
            this.f.a(context, oVar);
        }
    }

    public final void a(boolean z) {
        this.b = z;
        this.i = false;
    }

    public final boolean a(String str) {
        FileInputStream fileInputStream;
        Throwable th;
        FileInputStream fileInputStream2 = null;
        try {
            File file = new File(this.c.getFilesDir(), c.w);
            if (file.exists()) {
                file.delete();
            }
            if (!file.exists()) {
                fileInputStream = new FileInputStream(str);
                try {
                    k.a(fileInputStream, file);
                } catch (IOException e) {
                    fileInputStream2 = fileInputStream;
                    if (fileInputStream2 != null) {
                        try {
                            fileInputStream2.close();
                        } catch (IOException e2) {
                        }
                    }
                    return false;
                } catch (Throwable th2) {
                    th = th2;
                    if (fileInputStream != null) {
                        try {
                            fileInputStream.close();
                        } catch (IOException e3) {
                        }
                    }
                    throw th;
                }
            } else {
                fileInputStream = null;
            }
            if (fileInputStream != null) {
                try {
                    fileInputStream.close();
                } catch (IOException e4) {
                }
            }
            return true;
        } catch (IOException e5) {
        } catch (Throwable th3) {
            th = th3;
            fileInputStream = null;
        }
    }
}
