package com.yf.y.f.init.http;

import android.util.Log;
import bn.sdk.szwcsss.common.az.code.b.Cint;
import com.yf.y.f.init.constant.Constant;
import com.yf.y.f.init.util.CustomLog;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
/* loaded from: classes.dex */
public class HttpUtil {
    private static final int TIMEOUT = 5000;
    private static String content;
    private static String url;

    public HttpUtil(String url2, String content2) {
        url = url2;
        content = content2;
    }

    public static String postRequest() {
        HttpURLConnection conn = null;
        CustomLog.i("requestURL:" + url);
        try {
            try {
                URL requestURL = new URL(url);
                conn = (HttpURLConnection) requestURL.openConnection();
                conn.setRequestMethod("POST");
                conn.setDoInput(true);
                conn.setDoOutput(true);
                conn.setConnectTimeout(TIMEOUT);
                conn.setRequestProperty(Cint.b, "application/json;charset=UTF-8");
                conn.connect();
                OutputStreamWriter writer = new OutputStreamWriter(conn.getOutputStream());
                writer.write(content);
                writer.flush();
                writer.close();
                int responseCode = conn.getResponseCode();
                if (responseCode == 200) {
                    BufferedReader reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                    StringBuffer stringBuffer = new StringBuffer();
                    while (true) {
                        String lines = reader.readLine();
                        if (lines == null) {
                            break;
                        }
                        stringBuffer.append(lines);
                    }
                    reader.close();
                    String result = stringBuffer.toString();
                    if (conn != null) {
                        conn.disconnect();
                    }
                    return result;
                }
                if (conn != null) {
                    conn.disconnect();
                }
                return "";
            } catch (MalformedURLException e) {
                e.printStackTrace();
                Log.e(Constant.TAG, "url error");
                if (conn != null) {
                    conn.disconnect();
                }
                return "";
            } catch (Exception e2) {
                e2.printStackTrace();
                Log.e(Constant.TAG, "net error");
                if (conn != null) {
                    conn.disconnect();
                }
                return "";
            }
        } catch (Throwable th) {
            if (conn != null) {
                conn.disconnect();
            }
            throw th;
        }
    }
}
