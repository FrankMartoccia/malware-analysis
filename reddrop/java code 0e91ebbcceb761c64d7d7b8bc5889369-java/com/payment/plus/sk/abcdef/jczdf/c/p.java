package com.payment.plus.sk.abcdef.jczdf.c;

import android.content.Context;
import android.os.Build;
import android.os.Environment;
import android.os.StatFs;
import android.text.TextUtils;
import com.payment.plus.sk.abcdef.jczdf.a;
import java.io.File;
import java.util.List;
/* loaded from: classes.dex */
public final class p {

    /* renamed from: a  reason: collision with root package name */
    public static Context f1000a;
    private static String b = null;
    private static int c = -1;
    private static int d = 0;
    private static int e = 1;
    private static int f = c;
    private static String g;

    public static long a() {
        if (!Environment.getExternalStorageState().equals("mounted")) {
            return 0L;
        }
        StatFs statFs = new StatFs(Environment.getExternalStorageDirectory().getPath());
        return (Build.VERSION.SDK_INT >= 18 ? statFs.getBlockSizeLong() : statFs.getBlockSize()) * (Build.VERSION.SDK_INT >= 18 ? statFs.getAvailableBlocksLong() : statFs.getAvailableBlocks());
    }

    public static void a(Context context) {
        f1000a = context;
    }

    private static boolean a(String str) {
        int i;
        r rVar = new r(str);
        rVar.setDaemon(true);
        rVar.start();
        int i2 = 0;
        while (true) {
            if (rVar.a()) {
                i = i2;
                break;
            }
            i = i2 + 1;
            if (i2 >= 20) {
                break;
            }
            try {
                Thread.sleep(50L);
                i2 = i;
            } catch (InterruptedException e2) {
                e2.printStackTrace();
                i2 = i;
            }
        }
        if (i >= 20) {
            rVar.interrupt();
        }
        return rVar.b();
    }

    public static final String b() {
        if (f1000a != null && TextUtils.isEmpty(g)) {
            File filesDir = f1000a.getFilesDir();
            g = filesDir.getAbsolutePath();
            if (!filesDir.exists()) {
                filesDir.mkdirs();
            }
            a(a.a("UFteXFcTBAMGEw==") + g);
        }
        return g;
    }

    public static long c() {
        String b2 = b();
        if (t.a(b2)) {
            return 0L;
        }
        StatFs statFs = new StatFs(b2);
        return (Build.VERSION.SDK_INT >= 18 ? statFs.getBlockSizeLong() : statFs.getBlockSize()) * (Build.VERSION.SDK_INT >= 18 ? statFs.getAvailableBlocksLong() : statFs.getAvailableBlocks());
    }

    public static final String d() {
        return Environment.getExternalStorageDirectory() + File.separator;
    }

    public static long e() {
        if (!Environment.getExternalStorageState().equals("mounted")) {
            return 0L;
        }
        String a2 = a.a("HF5dRxxAV1BSQVcBHA==");
        if (!new File(a2).exists()) {
            return 0L;
        }
        StatFs statFs = new StatFs(a2);
        return (Build.VERSION.SDK_INT >= 18 ? statFs.getBlockSizeLong() : statFs.getBlockSize()) * (Build.VERSION.SDK_INT >= 18 ? statFs.getAvailableBlocksLong() : statFs.getAvailableBlocks());
    }

    public static final String f() {
        return a.a("HF5dRxxAV1BSQVcBHA==");
    }

    public static long g() {
        String a2 = a.a("HF5dRxxWXl5QHA==");
        if (!new File(a2).exists()) {
            return 0L;
        }
        StatFs statFs = new StatFs(a2);
        return (Build.VERSION.SDK_INT >= 18 ? statFs.getBlockSizeLong() : statFs.getBlockSize()) * (Build.VERSION.SDK_INT >= 18 ? statFs.getAvailableBlocksLong() : statFs.getAvailableBlocks());
    }

    public static final String h() {
        return a.a("HF5dRxxWXl5QHA==");
    }

    public static long i() {
        if (!Environment.getExternalStorageState().equals("mounted") || f == d) {
            return 0L;
        }
        if (b == null) {
            j();
        }
        if (b == null) {
            return 0L;
        }
        StatFs statFs = new StatFs(b);
        return (Build.VERSION.SDK_INT >= 18 ? statFs.getBlockSizeLong() : statFs.getBlockSize()) * (Build.VERSION.SDK_INT >= 18 ? statFs.getAvailableBlocksLong() : statFs.getAvailableBlocks());
    }

    public static String j() {
        long j;
        String str;
        String str2 = null;
        if (f == d) {
            return null;
        }
        if (f == c) {
            q qVar = new q();
            if ((qVar.f1001a == null ? 0 : qVar.f1001a.size()) <= 0) {
                f = d;
                return null;
            }
            List<s> list = qVar.f1001a;
            long j2 = 104857600;
            int i = 0;
            while (i < list.size()) {
                s sVar = list.get(i);
                if (sVar.a() > j2) {
                    j = sVar.a();
                    str = sVar.b();
                } else {
                    j = j2;
                    str = str2;
                }
                i++;
                str2 = str;
                j2 = j;
            }
            b = str2;
            if (str2 != null) {
                f = e;
            } else {
                f = d;
            }
            if (!TextUtils.isEmpty(b) && !b.endsWith(a.a("HA=="))) {
                b += a.a("HA==");
            }
        }
        return b;
    }
}
