package com.cocos.game.pay;

import android.app.Activity;
import android.os.Handler;
import android.os.Message;
import android.os.SystemClock;
import android.text.TextUtils;
import com.cocos.game.iface.IPayHelper;
import com.cocos.util.Tools;
import com.mobile.bumptech.ordinary.miniSDK.SDK.intf.StatService;
import com.mobile.bumptech.ordinary.miniSDK.SDK.intf.util.SignerInfo;
import java.util.HashMap;
import java.util.Map;
import org.cocos2dx.cpp.AppActivity;
/* loaded from: classes.dex */
public class SK_Pay implements IPayHelper {
    private static final String ORDER_INFO_ACCOUNT = "appUserAccount";
    private static final String ORDER_INFO_APP_ID = "appId";
    private static final String ORDER_INFO_APP_NAME = "appName";
    private static final String ORDER_INFO_APP_VER = "appVersion";
    private static final String ORDER_INFO_CHANNEL_ID = "channelId";
    private static final String ORDER_INFO_GAME_TYPE = "gameType";
    private static final String ORDER_INFO_MERCHANT_ID = "merchantId";
    private static final String ORDER_INFO_ORDER_DESC = "orderDesc";
    private static final String ORDER_INFO_PAY_METHOD = "payMethod";
    private static final String ORDER_INFO_PAY_POINT_NUM = "payPointNum";
    private static final String ORDER_INFO_PAY_TYPE = "payType";
    private static final String ORDER_INFO_PRICENOTIFYADDRESS = "priceNotifyAddress";
    private static final String ORDER_INFO_SYSTEM_ID = "systemId";
    private static final String SKIP_CONFIRM_RESULT = "order_skipResult";
    private static final String SKIP_CONFIRM_TIP = "order_skipTip";
    private static final String STRING_ERROR_CODE = "error_code";
    private static final String STRING_MSG_CODE = "msg_code";
    private static final String STRING_PAY_PRICE = "pay_price";
    private static final String STRING_PAY_STATUS = "pay_status";
    private Activity mActivity;
    private StatService mStatService = null;
    private Handler mPayHandler = new Handler() { // from class: com.cocos.game.pay.SK_Pay.1
        @Override // android.os.Handler
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            if (msg.what == 1000) {
                String retInfo = (String) msg.obj;
                Map<String, String> map = new HashMap<>();
                String[] keyValues = retInfo.split("&|=");
                for (int i = 0; i < keyValues.length; i += 2) {
                    map.put(keyValues[i], keyValues[i + 1]);
                }
                int msgCode = Integer.parseInt(map.get(SK_Pay.STRING_MSG_CODE));
                if (msgCode != 100) {
                    Integer.parseInt(map.get(SK_Pay.STRING_ERROR_CODE));
                } else if (map.get(SK_Pay.STRING_PAY_STATUS) != null) {
                    int payStatus = Integer.parseInt(map.get(SK_Pay.STRING_PAY_STATUS));
                    int payPrice = Integer.parseInt(map.get(SK_Pay.STRING_PAY_PRICE));
                    if (map.get(SK_Pay.STRING_ERROR_CODE) != null) {
                        Integer.parseInt(map.get(SK_Pay.STRING_ERROR_CODE));
                    }
                    switch (payStatus) {
                        case 102:
                            double d = payPrice / 100.0d;
                            return;
                        default:
                            return;
                    }
                }
            }
        }
    };

    public SK_Pay(Activity activity) {
        this.mActivity = null;
        this.mActivity = activity;
        initPay();
    }

    @Override // com.cocos.game.iface.IPayHelper
    public void initPay() {
    }

    @Override // com.cocos.game.iface.IPayHelper
    public void usePay(int payId) {
        String orderInfo = getOrderInfo("1", "2000", false, null, false, false, "1");
        if (!TextUtils.isEmpty(orderInfo)) {
            this.mStatService = StatService.getInstance(this.mActivity.getApplicationContext());
            int payRet = this.mStatService.startPay(this.mActivity.getApplicationContext(), orderInfo, this.mPayHandler);
            if (payRet == 0) {
            }
        }
    }

    private String getOrderInfo(String payPoint, String payPrice, boolean useAppUi, String userAccount, boolean isUi, boolean isResult, String payType) {
        if ("21956" == 0 || "hzjy20171027" == 0) {
            return null;
        }
        String orderId = new StringBuilder(String.valueOf(SystemClock.elapsedRealtime())).toString();
        String channelId = AppActivity.MY_CHANNEL_ID;
        SignerInfo signerInfo = new SignerInfo();
        signerInfo.setMerchantPasswd("hzjy20171027");
        signerInfo.setMerchantId("21956");
        signerInfo.setAppId("7013030");
        signerInfo.setNotifyAddress("http://pay.5ayg.cn:30002/sg-pay/zhimengzhifu/notify?channelId=" + AppActivity.MY_CHANNEL_ID + "&appId=465");
        signerInfo.setAppName("欢乐竞猜");
        signerInfo.setAppVersion("1001");
        signerInfo.setPayType(payType);
        signerInfo.setPrice(payPrice);
        signerInfo.setOrderId(orderId);
        signerInfo.setReserved1("reserved1", false);
        signerInfo.setReserved2("reserved2", false);
        signerInfo.setReserved3("reserved3|=2/3", true);
        String signOrderInfo = signerInfo.getOrderString();
        String orderInfo = "payMethod=sms&" + ORDER_INFO_SYSTEM_ID + "=300024&" + ORDER_INFO_CHANNEL_ID + "=" + channelId + "&" + ORDER_INFO_PAY_POINT_NUM + "=" + payPoint + "&" + ORDER_INFO_GAME_TYPE + "=0&testEnvironment=" + Tools.isTestEnvironment() + "&useAppUI=" + useAppUi + "&appUserAccount=" + userAccount + "&" + SKIP_CONFIRM_TIP + "=" + isUi + "&" + SKIP_CONFIRM_RESULT + "=" + isResult + "&" + signOrderInfo;
        return String.valueOf(String.valueOf(orderInfo) + "&orderDesc=流畅的操作体验，劲爆的超控性能，无与伦比的超级必杀，化身斩妖除魔的英雄，开启你不平凡的游戏人生！！需花费N.NN元。") + "&closePayDialog=true";
    }

    @Override // com.cocos.game.iface.IPayHelper
    public void exit() {
    }
}
