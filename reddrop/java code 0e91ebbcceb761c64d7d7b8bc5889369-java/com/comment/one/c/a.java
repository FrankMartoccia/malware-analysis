package com.comment.one.c;

import java.io.UnsupportedEncodingException;
import java.math.BigInteger;
/* loaded from: classes.dex */
public final class a {

    /* renamed from: a  reason: collision with root package name */
    public static a f755a;
    private String b = "=";
    private String c = "UTF-8";
    private final String d = "1357924680aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ+/";

    public static a a() {
        if (f755a == null) {
            f755a = new a();
        }
        return f755a;
    }

    private static String a(int i, String str, long j) {
        int length = str.length();
        int i2 = 0;
        for (int i3 = 0; i3 < length; i3++) {
            int charAt = (byte) str.charAt(i3);
            if (charAt > 47 && charAt < 58) {
                charAt = Integer.valueOf(str.substring(i3, i3 + 1)).intValue();
            }
            i2 += charAt;
        }
        long intValue = Integer.valueOf(i2).intValue() + i + j;
        if (intValue <= 0) {
            return "1357924680aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ+/";
        }
        String substring = "1357924680aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ+/".substring(new Long(intValue % 64).intValue());
        return substring.length() < 64 ? String.valueOf(substring) + "1357924680aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ+/".substring(0, 64 - substring.length()) : substring;
    }

    private String a(String str, String str2) {
        StringBuilder sb = new StringBuilder();
        try {
            String a2 = a(str.getBytes(this.c));
            int i = 0;
            while (a2.length() % 24 != 0) {
                a2 = String.valueOf(a2) + "0";
                i++;
            }
            for (int i2 = 0; i2 <= a2.length() - 6; i2 += 6) {
                int parseInt = Integer.parseInt(a2.substring(i2, i2 + 6), 2);
                if (parseInt != 0 || i2 < a2.length() - i) {
                    sb.append(str2.charAt(parseInt));
                } else {
                    sb.append(this.b);
                }
            }
            return sb.toString();
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(e);
        }
    }

    private static String a(byte[] bArr) {
        String bigInteger = new BigInteger(1, bArr).toString(2);
        while (bigInteger.length() % 8 != 0) {
            bigInteger = "0" + bigInteger;
        }
        return bigInteger;
    }

    private String b(String str, String str2) {
        String str3 = "";
        for (int i = 0; i < str.length(); i++) {
            char charAt = str.charAt(i);
            if (charAt != '=') {
                String binaryString = Integer.toBinaryString(str2.indexOf(charAt));
                while (binaryString.length() != 6) {
                    binaryString = "0" + binaryString;
                }
                str3 = String.valueOf(str3) + binaryString;
            }
        }
        String substring = str3.substring(0, str3.length() - (str3.length() % 8));
        byte[] bArr = new byte[substring.length() / 8];
        for (int i2 = 0; i2 < substring.length() / 8; i2++) {
            bArr[i2] = (byte) Integer.parseInt(substring.substring(i2 * 8, (i2 * 8) + 8), 2);
        }
        try {
            return new String(bArr, this.c);
        } catch (UnsupportedEncodingException e) {
            throw new RuntimeException(e);
        }
    }

    public final String a(int i, String str, long j, String str2) {
        return a(str2.trim(), a(i, str.trim(), j));
    }

    public final String b(int i, String str, long j, String str2) {
        return b(str2.trim(), a(i, str.trim(), j));
    }
}
