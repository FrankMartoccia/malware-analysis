package com.comment.one.g.a;

import com.comment.one.g.c;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
/* loaded from: classes.dex */
public final class d extends f {
    private int e = 1;

    /* renamed from: a  reason: collision with root package name */
    protected ScheduledExecutorService f769a = null;

    @Override // com.comment.one.g.a.f
    protected final /* synthetic */ ExecutorService a() {
        return Executors.newScheduledThreadPool(this.e);
    }

    @Override // com.comment.one.g.a.f
    protected final c b() {
        return c.SCHEDULED;
    }

    @Override // com.comment.one.g.a.f
    public final /* synthetic */ ExecutorService c() {
        if (b.get(c.SCHEDULED + "_" + this.d) != null) {
            this.f769a = (ScheduledExecutorService) b.get(c.SCHEDULED + "_" + this.d);
        } else {
            this.f769a = Executors.newScheduledThreadPool(this.e);
            b.put(c.SCHEDULED + "_" + this.d, this.f769a);
        }
        return this.f769a;
    }
}
