package com.mobile.bumptech.ordinary.miniSDK.SDK.c;

import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.Proxy;
import android.os.Build;
import com.mobile.bumptech.ordinary.miniSDK.SDK.a;
import com.payment.plus.sk.abcdef.jczdf.intf.StatService;
import com.yf.y.f.init.util.ConstUtils;
import java.io.ByteArrayOutputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.InetSocketAddress;
import java.net.Proxy;
import java.net.URL;
/* loaded from: classes.dex */
public final class j {

    /* renamed from: a  reason: collision with root package name */
    private static final String f926a = a.a("KjY2MnhtbQ==");
    private static j c = null;
    private Context b = null;

    public static j a() {
        if (c == null) {
            c = new j();
        }
        return c;
    }

    private static byte[] a(InputStream inputStream) {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
        byte[] bArr = new byte[ConstUtils.KB];
        while (true) {
            int read = inputStream.read(bArr);
            if (read != -1) {
                byteArrayOutputStream.write(bArr, 0, read);
            } else {
                byte[] byteArray = byteArrayOutputStream.toByteArray();
                byteArrayOutputStream.close();
                inputStream.close();
                return byteArray;
            }
        }
    }

    public final HttpURLConnection a(URL url) {
        if (Build.VERSION.SDK_INT < 19 && this.b != null) {
            NetworkInfo activeNetworkInfo = ((ConnectivityManager) this.b.getApplicationContext().getSystemService("connectivity")).getActiveNetworkInfo();
            if ((activeNetworkInfo != null ? activeNetworkInfo.getType() : -1) == 0) {
                try {
                    String defaultHost = Proxy.getDefaultHost();
                    int defaultPort = Proxy.getDefaultPort();
                    if (defaultHost != null) {
                        String str = a.a("quz8pf/spvnhpdLEKi0xNmJ/Yg==") + defaultHost + a.a("Ym5iMjAtNmJ/Yg==") + defaultPort;
                        return (HttpURLConnection) url.openConnection(new java.net.Proxy(Proxy.Type.HTTP, new InetSocketAddress(defaultHost, defaultPort)));
                    }
                } catch (Exception e) {
                    a.a("quz8pf/sNSMypf/Tp8fxq9bbqu3t");
                }
            }
        }
        if (url != null) {
            try {
                return (HttpURLConnection) url.openConnection();
            } catch (IOException e2) {
                a.a("LTInLAEtLCwnITYrLSyr1tuq7e0=");
            }
        }
        return null;
    }

    /* JADX WARN: Removed duplicated region for block: B:47:0x013a A[EXC_TOP_SPLITTER, SYNTHETIC] */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public final byte[] a(String str, String str2, String str3) {
        DataOutputStream dataOutputStream;
        HttpURLConnection a2;
        DataOutputStream dataOutputStream2;
        DataOutputStream dataOutputStream3 = null;
        try {
            String str4 = a.a("MCcjJgEtLDYnLDYAOxItMTZiNzAuYn9i") + str + a.a("bmIhLSw2Jyw2FjsyJ38=") + str3;
            String str5 = a.a("MCcjJgEtLDYnLDYAOxItMTZiJiM2I2IuJyxif2I=") + str2.length();
            byte[] bytes = str2.getBytes(a.a("FxYEb3o="));
            if (!str.startsWith(f926a)) {
                str = f926a + str;
            }
            a2 = a(new URL(str));
            a2.setConnectTimeout(StatService.SDKVersion);
            a2.setReadTimeout(StatService.SDKVersion);
            a2.setDoOutput(true);
            a2.setUseCaches(false);
            a2.setRequestMethod(a.a("Eg0RFg=="));
            a2.setRequestProperty(a.a("AS0sLCchNistLA=="), a.a("CScnMm8DLis0Jw=="));
            a2.setRequestProperty(a.a("ASojMDEnNg=="), a.a("FxYEb3o="));
            if (bytes != null) {
                a2.setRequestProperty(a.a("AS0sNicsNm8OJywlNio="), new StringBuilder().append(bytes.length).toString());
            }
            a2.setRequestProperty(a.a("AS0sNicsNm8WOzIn"), str3);
            dataOutputStream2 = new DataOutputStream(a2.getOutputStream());
            if (bytes != null) {
                try {
                    dataOutputStream2.write(bytes);
                } catch (Exception e) {
                    dataOutputStream = dataOutputStream2;
                    try {
                        a.a("MCcjJgEtLDYnLDYEMC0vEi0xNmInMDAtMHg=");
                        if (dataOutputStream != null) {
                            try {
                                dataOutputStream.flush();
                                dataOutputStream.close();
                            } catch (Exception e2) {
                            }
                        }
                        return null;
                    } catch (Throwable th) {
                        th = th;
                        dataOutputStream3 = dataOutputStream;
                        if (dataOutputStream3 != null) {
                            try {
                                dataOutputStream3.flush();
                                dataOutputStream3.close();
                            } catch (Exception e3) {
                            }
                        }
                        throw th;
                    }
                } catch (Throwable th2) {
                    th = th2;
                    dataOutputStream3 = dataOutputStream2;
                    if (dataOutputStream3 != null) {
                    }
                    throw th;
                }
            }
        } catch (Exception e4) {
            dataOutputStream = null;
        } catch (Throwable th3) {
            th = th3;
        }
        if (a2.getResponseCode() == 200) {
            byte[] a3 = a(a2.getInputStream());
            String str6 = a.a("MCcjJgEtLDYnLDYEMC0vEi0xNmIwJzE3LjZif2I=") + a3;
            try {
                dataOutputStream2.flush();
                dataOutputStream2.close();
                return a3;
            } catch (Exception e5) {
                return a3;
            }
        } else {
            String str7 = a.a("MCcjJgEtLDYnLDYEMC0vEi0xNmInMDAtMHg=") + a2.getResponseCode();
            try {
                dataOutputStream2.flush();
                dataOutputStream2.close();
            } catch (Exception e6) {
            }
            return null;
        }
    }
}
