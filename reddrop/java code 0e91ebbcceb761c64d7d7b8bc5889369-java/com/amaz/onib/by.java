package com.amaz.onib;

import android.content.Context;
import android.telephony.TelephonyManager;
import com.umeng.analytics.pro.dm;
import java.lang.reflect.Method;
import java.security.MessageDigest;
import java.text.SimpleDateFormat;
import java.util.Date;
/* loaded from: classes.dex */
public class by {
    public static String a() {
        return new SimpleDateFormat("yyyyMMddHHmmss").format(new Date(System.currentTimeMillis()));
    }

    public static String a(Context context) {
        Exception e;
        String subscriberId;
        String str;
        String str2 = null;
        try {
            subscriberId = ((TelephonyManager) context.getSystemService("phone")).getSubscriberId();
        } catch (Exception e2) {
            e = e2;
        }
        try {
            if (!a(subscriberId)) {
                return subscriberId;
            }
            bs.b("----IMSI-----GT------");
            Class<?> cls = Class.forName("android.telephony.MSimTelephonyManager");
            Object systemService = context.getSystemService("phone_msim");
            Method method = cls.getMethod("getSubscriberId", Integer.TYPE);
            String str3 = (String) method.invoke(systemService, 0);
            return a(str3) ? (String) method.invoke(systemService, 1) : str3;
        } catch (Exception e3) {
            e = e3;
            str2 = str;
            e.printStackTrace();
            return str2;
        }
    }

    public static String a(byte[] bArr) {
        char[] cArr = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'};
        try {
            MessageDigest messageDigest = MessageDigest.getInstance("MD5");
            messageDigest.update(bArr);
            byte[] digest = messageDigest.digest();
            char[] cArr2 = new char[32];
            int i = 0;
            for (int i2 = 0; i2 < 16; i2++) {
                byte b = digest[i2];
                int i3 = i + 1;
                cArr2[i] = cArr[(b >>> 4) & 15];
                i = i3 + 1;
                cArr2[i3] = cArr[b & dm.m];
            }
            return new String(cArr2);
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }
    }

    public static boolean a(String str) {
        return str == null || str.trim().length() == 0;
    }

    public static boolean a(String str, String[] strArr) {
        if (strArr == null || str == null) {
            return false;
        }
        for (String str2 : strArr) {
            if (str.startsWith(str2.toString())) {
                return true;
            }
        }
        return false;
    }

    public static String b(String str) {
        int i = 0;
        str = "";
        if (str != null) {
            i = str.length();
        }
        StringBuilder sb = new StringBuilder();
        while (sb.length() < 16 - i) {
            sb.append("0");
        }
        sb.append(str);
        return sb.toString();
    }
}
