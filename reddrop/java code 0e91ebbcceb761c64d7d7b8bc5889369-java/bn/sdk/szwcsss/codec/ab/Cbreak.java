package bn.sdk.szwcsss.codec.ab;

import bn.sdk.szwcsss.codec.ac.Cfor;
import bn.sdk.szwcsss.codec.ac.Cnew;
import org.json.JSONException;
import org.json.JSONObject;
/* renamed from: bn.sdk.szwcsss.codec.ab.break  reason: invalid class name */
/* loaded from: classes.dex */
public class Cbreak implements Cfor {

    /* renamed from: do  reason: not valid java name */
    public static int f56do = 1;

    /* renamed from: byte  reason: not valid java name */
    private String f57byte;

    /* renamed from: for  reason: not valid java name */
    private String f61for;

    /* renamed from: if  reason: not valid java name */
    private String f62if;

    /* renamed from: new  reason: not valid java name */
    private int f64new;

    /* renamed from: try  reason: not valid java name */
    private String f65try;

    /* renamed from: case  reason: not valid java name */
    private String f58case = "";

    /* renamed from: char  reason: not valid java name */
    private int f59char = -100;

    /* renamed from: else  reason: not valid java name */
    private String f60else = "0";

    /* renamed from: int  reason: not valid java name */
    private String f63int = "";

    public Cbreak(int i, String str, String str2, String str3) {
        f56do++;
        this.f62if = str3;
        this.f57byte = str2;
        this.f64new = i;
        this.f65try = str;
        if (i != 0) {
            this.f61for = this.f62if + "_" + m32do();
            if (this.f61for.length() > 64) {
                this.f61for = this.f61for.substring(0, 64);
            }
            Cnew.m144for("PayOrder new :" + this.f61for);
        }
    }

    /* renamed from: do  reason: not valid java name */
    public String m32do() {
        StringBuilder sb = new StringBuilder();
        String str = "" + (System.currentTimeMillis() / 100);
        if (str.length() > 8) {
            str = str.substring(str.length() - 9, str.length() - 1);
        }
        sb.append(str);
        sb.append("_").append(f56do);
        return sb.length() > 16 ? sb.substring(0, 16) : sb.toString();
    }

    /* renamed from: do  reason: not valid java name */
    public void m33do(int i, String str) {
        this.f59char = i;
        this.f63int = str;
    }

    /* renamed from: do  reason: not valid java name */
    public void m34do(String str) {
        this.f58case = str;
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: do */
    public void mo1do(JSONObject jSONObject) {
    }

    /* renamed from: for  reason: not valid java name */
    public String m35for() {
        return this.f61for;
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: if */
    public String mo2if() {
        return "e";
    }

    /* renamed from: if  reason: not valid java name */
    public void m36if(String str) {
        this.f60else = str;
    }

    /* renamed from: int  reason: not valid java name */
    public int m37int() {
        return this.f59char;
    }

    /* renamed from: new  reason: not valid java name */
    public String m38new() {
        return this.f65try;
    }

    /* renamed from: try  reason: not valid java name */
    public JSONObject m39try() {
        try {
            JSONObject jSONObject = new JSONObject();
            int i = 0;
            try {
                i = Integer.parseInt(this.f60else);
            } catch (Exception e) {
            }
            jSONObject.put("a", this.f61for);
            jSONObject.put("b", this.f64new);
            jSONObject.put("c", this.f57byte);
            jSONObject.put("d", this.f58case);
            jSONObject.put("e", i);
            jSONObject.put("f", this.f59char);
            jSONObject.put("g", this.f63int);
            Cnew.m144for("buildJson :" + jSONObject.toString());
            return jSONObject;
        } catch (JSONException e2) {
            e2.printStackTrace();
            return null;
        }
    }
}
