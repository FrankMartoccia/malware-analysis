package bn.sdk.szwcsss.codec.am;

import java.security.SecureRandom;
import javax.crypto.Cipher;
import javax.crypto.SecretKey;
import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.DESKeySpec;
/* renamed from: bn.sdk.szwcsss.codec.am.do  reason: invalid class name */
/* loaded from: classes.dex */
public class Cdo {
    /* renamed from: do  reason: not valid java name */
    public static String m304do(String str, String str2) {
        try {
            return new String(m306do(m305do(str.getBytes()), str2.getBytes()));
        } catch (Exception e) {
            return null;
        }
    }

    /* renamed from: do  reason: not valid java name */
    public static byte[] m305do(byte[] bArr) {
        if (bArr.length % 2 != 0) {
            throw new IllegalArgumentException("长度不是偶数");
        }
        byte[] bArr2 = new byte[bArr.length / 2];
        for (int i = 0; i < bArr.length; i += 2) {
            bArr2[i / 2] = (byte) Integer.parseInt(new String(bArr, i, 2), 16);
        }
        return bArr2;
    }

    /* renamed from: do  reason: not valid java name */
    public static byte[] m306do(byte[] bArr, byte[] bArr2) {
        SecureRandom secureRandom = new SecureRandom();
        SecretKey generateSecret = SecretKeyFactory.getInstance("DES").generateSecret(new DESKeySpec(bArr2));
        Cipher cipher = Cipher.getInstance("DES");
        cipher.init(2, generateSecret, secureRandom);
        return cipher.doFinal(bArr);
    }
}
