package bn.sdk.szwcsss.codec.z;

import bn.sdk.szwcsss.codec.ac.Cfor;
import bn.sdk.szwcsss.codec.ac.Cnew;
import java.util.HashMap;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
/* renamed from: bn.sdk.szwcsss.codec.z.if  reason: invalid class name */
/* loaded from: classes.dex */
public class Cif implements Cfor {

    /* renamed from: do  reason: not valid java name */
    private final String f402do = "ver";

    /* renamed from: if  reason: not valid java name */
    private final String f406if = "pid";

    /* renamed from: for  reason: not valid java name */
    private final String f404for = "pname";

    /* renamed from: int  reason: not valid java name */
    private final String f407int = "appid";

    /* renamed from: new  reason: not valid java name */
    private final String f409new = "appver";

    /* renamed from: try  reason: not valid java name */
    private final String f411try = "appname";

    /* renamed from: byte  reason: not valid java name */
    private final String f399byte = "data";

    /* renamed from: case  reason: not valid java name */
    private String f400case = "0";

    /* renamed from: char  reason: not valid java name */
    private String f401char = "0";

    /* renamed from: else  reason: not valid java name */
    private String f403else = "0";

    /* renamed from: goto  reason: not valid java name */
    private String f405goto = "0";

    /* renamed from: long  reason: not valid java name */
    private String f408long = "0";

    /* renamed from: this  reason: not valid java name */
    private String f410this = "0";

    /* renamed from: void  reason: not valid java name */
    private HashMap f412void = new HashMap();

    /* renamed from: do  reason: not valid java name */
    public void m494do(String str) {
        m495do(str, false);
    }

    /* renamed from: do  reason: not valid java name */
    public void m495do(String str, boolean z) {
        JSONArray jSONArray;
        if (str != null) {
            try {
                JSONObject jSONObject = new JSONObject(str);
                if (jSONObject != null) {
                    Cnew.m140do("PayData parseJson: \n" + jSONObject.toString());
                    this.f400case = jSONObject.isNull("ver") ? "" : jSONObject.getString("ver");
                    this.f401char = jSONObject.isNull("pid") ? "" : jSONObject.getString("pid");
                    this.f403else = jSONObject.isNull("pname") ? "" : jSONObject.getString("pname");
                    this.f405goto = jSONObject.isNull("appid") ? "" : jSONObject.getString("appid");
                    this.f408long = jSONObject.isNull("appver") ? "" : jSONObject.getString("appver");
                    this.f410this = jSONObject.isNull("appname") ? "" : jSONObject.getString("appname");
                    if (!(z || (jSONArray = jSONObject.getJSONArray("data")) == null)) {
                        int length = jSONArray.length();
                        for (int i = 0; i < length; i++) {
                            JSONObject jSONObject2 = jSONArray.getJSONObject(i);
                            if (jSONObject2 != null) {
                                Cfor forVar = new Cfor();
                                forVar.m491do(jSONObject2);
                                if (forVar.m492do()) {
                                    this.f412void.put(forVar.m493if(), forVar);
                                }
                            }
                        }
                    }
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: do */
    public void mo1do(JSONObject jSONObject) {
    }

    /* renamed from: do  reason: not valid java name */
    public boolean m496do() {
        return this.f412void.size() > 0;
    }

    /* renamed from: for  reason: not valid java name */
    public JSONObject m497for(String str) {
        try {
            JSONObject jSONObject = new JSONObject();
            jSONObject.put("a", this.f400case);
            jSONObject.put("b", this.f401char);
            jSONObject.put("c", this.f405goto);
            jSONObject.put("d", this.f408long);
            jSONObject.put("e", this.f410this);
            jSONObject.put("f", str);
            jSONObject.put("g", 100);
            return jSONObject;
        } catch (JSONException e) {
            e.printStackTrace();
            return null;
        }
    }

    /* renamed from: if  reason: not valid java name */
    public Cfor m498if(String str) {
        return (Cfor) this.f412void.get(str);
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: if */
    public String mo2if() {
        return "e";
    }
}
