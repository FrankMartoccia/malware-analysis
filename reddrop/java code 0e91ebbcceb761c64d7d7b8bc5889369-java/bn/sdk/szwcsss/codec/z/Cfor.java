package bn.sdk.szwcsss.codec.z;

import com.umeng.analytics.pro.x;
import java.util.HashMap;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;
/* renamed from: bn.sdk.szwcsss.codec.z.for  reason: invalid class name */
/* loaded from: classes.dex */
public class Cfor {

    /* renamed from: do  reason: not valid java name */
    private String f388do = "";

    /* renamed from: if  reason: not valid java name */
    private String f392if = "";

    /* renamed from: for  reason: not valid java name */
    private String f390for = "";

    /* renamed from: int  reason: not valid java name */
    private String f393int = "";

    /* renamed from: new  reason: not valid java name */
    private String f395new = "";

    /* renamed from: try  reason: not valid java name */
    private String f397try = "";

    /* renamed from: char  reason: not valid java name */
    private String f387char = "";

    /* renamed from: catch  reason: not valid java name */
    private HashMap f386catch = new HashMap();

    /* renamed from: else  reason: not valid java name */
    private String f389else = "";

    /* renamed from: byte  reason: not valid java name */
    private String f384byte = "";

    /* renamed from: case  reason: not valid java name */
    private String f385case = "";

    /* renamed from: goto  reason: not valid java name */
    private String f391goto = "";

    /* renamed from: long  reason: not valid java name */
    private String f394long = "";

    /* renamed from: this  reason: not valid java name */
    private String f396this = "";

    /* renamed from: void  reason: not valid java name */
    private String f398void = "";

    /* renamed from: break  reason: not valid java name */
    private String f383break = "";

    /* renamed from: do  reason: not valid java name */
    public Cdo m490do(String str) {
        return (Cdo) this.f386catch.get(str);
    }

    /* renamed from: do  reason: not valid java name */
    public void m491do(JSONObject jSONObject) {
        if (jSONObject != null) {
            try {
                this.f388do = jSONObject.isNull("pid") ? "" : jSONObject.getString("pid");
                this.f392if = jSONObject.isNull("appid") ? "" : jSONObject.getString("appid");
                this.f390for = jSONObject.isNull(x.f1213a) ? "" : jSONObject.getString(x.f1213a);
                this.f393int = jSONObject.isNull("appname") ? "" : jSONObject.getString("appname");
                this.f395new = jSONObject.isNull("appver") ? "" : jSONObject.getString("appver");
                this.f397try = jSONObject.isNull("needtip") ? "" : jSONObject.getString("needtip");
                this.f389else = jSONObject.isNull("lttipkey") ? "" : jSONObject.getString("lttipkey");
                this.f384byte = jSONObject.isNull("cmid") ? "" : jSONObject.getString("cmid");
                this.f385case = jSONObject.isNull("cmpwd") ? "" : jSONObject.getString("cmpwd");
                this.f391goto = jSONObject.isNull("zzfqd") ? "" : jSONObject.getString("zzfqd");
                this.f394long = jSONObject.isNull("zzfcid") ? "" : jSONObject.getString("zzfcid");
                this.f396this = jSONObject.isNull("lscid") ? "" : jSONObject.getString("lscid");
                this.f398void = jSONObject.isNull("partnerid") ? "" : jSONObject.getString("partnerid");
                this.f383break = jSONObject.isNull("epayqd") ? "" : jSONObject.getString("epayqd");
                JSONArray jSONArray = jSONObject.getJSONArray("codes");
                if (jSONArray != null) {
                    int length = jSONArray.length();
                    for (int i = 0; i < length; i++) {
                        JSONObject jSONObject2 = jSONArray.getJSONObject(i);
                        if (jSONObject2 != null) {
                            Cdo doVar = new Cdo();
                            doVar.m485do(jSONObject2);
                            if (doVar.m486do()) {
                                this.f386catch.put(doVar.m488if(), doVar);
                            }
                        }
                    }
                }
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }

    /* renamed from: do  reason: not valid java name */
    public boolean m492do() {
        return this.f388do.length() > 0 && this.f386catch.size() > 0;
    }

    /* renamed from: if  reason: not valid java name */
    public String m493if() {
        return this.f388do;
    }
}
