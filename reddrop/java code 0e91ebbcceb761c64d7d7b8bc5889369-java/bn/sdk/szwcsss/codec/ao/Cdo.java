package bn.sdk.szwcsss.codec.ao;

import bn.sdk.szwcsss.codec.ac.Cfor;
import org.json.JSONException;
import org.json.JSONObject;
/* renamed from: bn.sdk.szwcsss.codec.ao.do  reason: invalid class name */
/* loaded from: classes.dex */
public class Cdo implements Cfor {

    /* renamed from: do  reason: not valid java name */
    public static final Cdo f319do = new Cdo(-10, "Server Response Null");

    /* renamed from: if  reason: not valid java name */
    public static final Cdo f320if = new Cdo(-11, "Listener Handler Error");

    /* renamed from: byte  reason: not valid java name */
    public String f321byte;

    /* renamed from: case  reason: not valid java name */
    public String f322case;

    /* renamed from: for  reason: not valid java name */
    public int f323for;

    /* renamed from: int  reason: not valid java name */
    public String f324int;

    /* renamed from: new  reason: not valid java name */
    public String f325new;

    /* renamed from: try  reason: not valid java name */
    public String f326try;

    public Cdo() {
        this.f323for = -1;
    }

    public Cdo(int i, String str) {
        this.f323for = -1;
        this.f323for = i;
        this.f324int = str;
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: do */
    public void mo1do(JSONObject jSONObject) {
        String str = null;
        if (jSONObject != null) {
            try {
                this.f323for = jSONObject.isNull("a") ? -1 : jSONObject.getInt("a");
                this.f324int = jSONObject.isNull("b") ? null : jSONObject.getString("b");
                this.f325new = jSONObject.isNull("c") ? null : jSONObject.getString("c");
                this.f326try = jSONObject.isNull("d") ? null : jSONObject.getString("d");
                this.f321byte = jSONObject.isNull("e") ? null : jSONObject.getString("e");
                if (!jSONObject.isNull("f")) {
                    str = jSONObject.getString("f");
                }
                this.f322case = str;
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }

    /* renamed from: do  reason: not valid java name */
    public boolean m352do() {
        return this.f323for == 0;
    }

    /* renamed from: for  reason: not valid java name */
    public String m353for() {
        return this.f326try;
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: if */
    public String mo2if() {
        return "c";
    }

    public String toString() {
        return "Result [resultCode=" + this.f323for + ", desc=" + this.f324int + ", orderId=" + this.f325new + ", signMsg=" + this.f326try + ", bargainorId=" + this.f321byte + ", helpMsg=" + this.f322case + "]";
    }
}
