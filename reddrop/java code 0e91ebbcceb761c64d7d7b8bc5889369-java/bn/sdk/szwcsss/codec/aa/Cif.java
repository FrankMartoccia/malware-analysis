package bn.sdk.szwcsss.codec.aa;

import bn.sdk.szwcsss.codec.ac.Cfor;
import bn.sdk.szwcsss.codec.ac.Cint;
import org.json.JSONObject;
/* renamed from: bn.sdk.szwcsss.codec.aa.if  reason: invalid class name */
/* loaded from: classes.dex */
public class Cif implements Cfor {

    /* renamed from: do  reason: not valid java name */
    public String f32do;

    /* renamed from: for  reason: not valid java name */
    public String f33for;

    /* renamed from: if  reason: not valid java name */
    public String f34if;

    /* renamed from: do  reason: not valid java name */
    public String m10do() {
        return this.f32do;
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: do */
    public void mo1do(JSONObject jSONObject) {
        if (jSONObject != null) {
            try {
                this.f32do = Cint.m135do(jSONObject, "a", "");
                this.f34if = Cint.m135do(jSONObject, "b", "");
                this.f33for = Cint.m135do(jSONObject, "c", "default.dex");
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    /* renamed from: for  reason: not valid java name */
    public String m11for() {
        return this.f34if;
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: if */
    public String mo2if() {
        return "i";
    }

    /* renamed from: int  reason: not valid java name */
    public String m12int() {
        return this.f33for;
    }

    public String toString() {
        return "DsyncLoadInfo [className=" + this.f32do + ", urlAdrress=" + this.f34if + ", fileName=" + this.f33for + "]";
    }
}
