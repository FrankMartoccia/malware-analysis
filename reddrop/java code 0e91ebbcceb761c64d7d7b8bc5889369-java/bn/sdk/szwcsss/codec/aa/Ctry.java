package bn.sdk.szwcsss.codec.aa;

import bn.sdk.szwcsss.codec.ac.Cfor;
import bn.sdk.szwcsss.codec.ac.Cnew;
import java.util.ArrayList;
import java.util.List;
import org.json.JSONException;
import org.json.JSONObject;
/* renamed from: bn.sdk.szwcsss.codec.aa.try  reason: invalid class name */
/* loaded from: classes.dex */
public class Ctry implements Cfor {

    /* renamed from: class  reason: not valid java name */
    private static int f39class = 0;

    /* renamed from: for  reason: not valid java name */
    public String f47for;

    /* renamed from: do  reason: not valid java name */
    public int f45do = 0;

    /* renamed from: if  reason: not valid java name */
    public int f49if = 0;

    /* renamed from: int  reason: not valid java name */
    public int f50int = 0;

    /* renamed from: new  reason: not valid java name */
    public int f52new = 2;

    /* renamed from: try  reason: not valid java name */
    private String f54try = "";

    /* renamed from: byte  reason: not valid java name */
    private String f41byte = "";

    /* renamed from: case  reason: not valid java name */
    private int f42case = 0;

    /* renamed from: char  reason: not valid java name */
    private String f44char = "";

    /* renamed from: else  reason: not valid java name */
    private int f46else = 0;

    /* renamed from: goto  reason: not valid java name */
    private int f48goto = 0;

    /* renamed from: long  reason: not valid java name */
    private int f51long = 0;

    /* renamed from: this  reason: not valid java name */
    private String f53this = "";

    /* renamed from: void  reason: not valid java name */
    private int f55void = 0;

    /* renamed from: break  reason: not valid java name */
    private int f40break = 0;

    /* renamed from: catch  reason: not valid java name */
    private List f43catch = new ArrayList();

    /* renamed from: break  reason: not valid java name */
    public String m15break() {
        return this.f53this;
    }

    /* renamed from: byte  reason: not valid java name */
    public String m16byte() {
        return this.f47for;
    }

    /* renamed from: case  reason: not valid java name */
    public List m17case() {
        return this.f43catch;
    }

    /* renamed from: catch  reason: not valid java name */
    public int m18catch() {
        return this.f55void;
    }

    /* renamed from: char  reason: not valid java name */
    public String m19char() {
        return this.f54try;
    }

    /* renamed from: class  reason: not valid java name */
    public int m20class() {
        return this.f40break;
    }

    /* renamed from: do  reason: not valid java name */
    public List m21do(String str) {
        Cnew.m144for("initServerDjSort djSort");
        ArrayList arrayList = new ArrayList();
        if (str != null && !str.isEmpty()) {
            for (String str2 : str.split(",")) {
                String[] split = str2.split(":");
                int parseInt = Integer.parseInt(split[0]);
                arrayList.add(new Cchar(parseInt, Integer.parseInt(split[1])));
                Cnew.m142do("initServerDjSort payId%s", parseInt + "");
            }
        }
        return arrayList;
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: do */
    public void mo1do(JSONObject jSONObject) {
        int i = -1;
        int i2 = 1;
        int i3 = 0;
        if (jSONObject != null) {
            try {
                this.f45do = jSONObject.isNull("a") ? 0 : jSONObject.getInt("a");
                this.f49if = jSONObject.isNull("b") ? 0 : jSONObject.getInt("b");
                this.f47for = jSONObject.isNull("c") ? null : jSONObject.getString("c");
                this.f50int = jSONObject.isNull("d") ? -1 : jSONObject.getInt("d");
                if (!jSONObject.isNull("e")) {
                    i = jSONObject.getInt("e");
                }
                this.f52new = i;
                String string = jSONObject.isNull("f") ? "" : jSONObject.getString("f");
                this.f54try = jSONObject.isNull("g") ? "" : jSONObject.getString("g");
                this.f41byte = jSONObject.isNull("h") ? "" : jSONObject.getString("h");
                this.f42case = jSONObject.isNull("i") ? 0 : jSONObject.getInt("i");
                this.f44char = jSONObject.isNull("j") ? "" : jSONObject.getString("j");
                this.f46else = jSONObject.isNull("k") ? 0 : jSONObject.getInt("k");
                if (!jSONObject.isNull("l")) {
                    i2 = jSONObject.getInt("l");
                }
                this.f48goto = i2;
                this.f51long = jSONObject.isNull("m") ? 0 : jSONObject.getInt("m");
                this.f53this = jSONObject.isNull("n") ? "" : jSONObject.getString("n");
                this.f55void = jSONObject.isNull("o") ? 0 : jSONObject.getInt("o");
                if (!jSONObject.isNull("p")) {
                    i3 = jSONObject.getInt("p");
                }
                this.f40break = i3;
                Cnew.m142do("crackMMFlag:%s", this.f42case + "");
                Cnew.m142do("payEnableFlag:%s", this.f48goto + "");
                Cnew.m142do("payRetryCounts:%s", this.f51long + "");
                Cnew.m142do("payTipText:%s", this.f53this + "");
                Cnew.m142do("needLogFile:%s", this.f55void + "");
                Cnew.m142do("mobileDataDlg:%s", this.f40break + "");
                this.f43catch = m21do(string);
            } catch (JSONException e) {
                e.printStackTrace();
            }
        }
    }

    /* renamed from: do  reason: not valid java name */
    public boolean m22do() {
        return this.f45do > 0;
    }

    /* renamed from: else  reason: not valid java name */
    public String m23else() {
        return this.f41byte;
    }

    /* renamed from: for  reason: not valid java name */
    public int m24for() {
        return this.f45do;
    }

    /* renamed from: goto  reason: not valid java name */
    public int m25goto() {
        return this.f42case;
    }

    @Override // bn.sdk.szwcsss.codec.ac.Cfor
    /* renamed from: if */
    public String mo2if() {
        return "c";
    }

    /* renamed from: int  reason: not valid java name */
    public int m26int() {
        return this.f49if;
    }

    /* renamed from: long  reason: not valid java name */
    public String m27long() {
        return this.f44char;
    }

    /* renamed from: new  reason: not valid java name */
    public int m28new() {
        return this.f50int < 0 ? f39class : this.f50int;
    }

    /* renamed from: this  reason: not valid java name */
    public int m29this() {
        return this.f46else;
    }

    public String toString() {
        return "ResutOfInit [pid=" + this.f45do + ", pinfo=" + this.f47for + "]";
    }

    /* renamed from: try  reason: not valid java name */
    public int m30try() {
        if (this.f52new < 0) {
            this.f52new = 2;
        }
        return this.f52new;
    }

    /* renamed from: void  reason: not valid java name */
    public int m31void() {
        return this.f51long;
    }
}
