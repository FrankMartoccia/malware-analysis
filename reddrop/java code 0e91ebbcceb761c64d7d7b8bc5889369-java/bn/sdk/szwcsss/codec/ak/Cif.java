package bn.sdk.szwcsss.codec.ak;

import android.content.Context;
import android.text.TextUtils;
import android.util.Log;
import bn.sdk.szwcsss.codec.ah.Cfor;
import bn.sdk.szwcsss.codec.am.Cdo;
import dalvik.system.DexClassLoader;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
/* renamed from: bn.sdk.szwcsss.codec.ak.if  reason: invalid class name */
/* loaded from: classes.dex */
public class Cif {

    /* renamed from: byte  reason: not valid java name */
    private static Class f274byte;

    /* renamed from: case  reason: not valid java name */
    private static Class f275case;

    /* renamed from: char  reason: not valid java name */
    private static Class f276char;

    /* renamed from: else  reason: not valid java name */
    private static DexClassLoader f278else;

    /* renamed from: if  reason: not valid java name */
    public static String f280if;

    /* renamed from: new  reason: not valid java name */
    private static Class f282new;

    /* renamed from: try  reason: not valid java name */
    private static Class f283try;

    /* renamed from: for  reason: not valid java name */
    private static String f279for = null;

    /* renamed from: int  reason: not valid java name */
    private static String f281int = null;

    /* renamed from: do  reason: not valid java name */
    public static int f277do = 0;

    /* renamed from: do  reason: not valid java name */
    private static Cfor m285do(String str) {
        if (str != null) {
            int indexOf = str.indexOf(".");
            if (indexOf > 0) {
                str = str.substring(0, indexOf);
            }
            String[] split = str.split("_");
            if (split != null && split.length >= 3) {
                Cfor forVar = new Cfor(null);
                forVar.f273if = split[1];
                try {
                    forVar.f272do = Integer.valueOf(split[2]).intValue();
                } catch (Exception e) {
                }
                Log.d("DJInit2", "jarNameInfo.v=" + forVar.f272do + ";jarNameInfo.id=" + forVar.f273if);
                return forVar;
            }
        }
        return null;
    }

    /* renamed from: do  reason: not valid java name */
    private static File m286do(File file) {
        File file2;
        Cfor forVar;
        int i;
        int i2 = 0;
        File[] listFiles = file.listFiles();
        if (listFiles == null || listFiles.length < 1) {
            file2 = null;
        } else {
            int length = listFiles.length;
            int i3 = 0;
            File file3 = null;
            while (i3 < length) {
                File file4 = listFiles[i3];
                Cfor forVar2 = m285do(file4.getName());
                if (forVar2 == null || !forVar2.f273if.equals(m290for())) {
                    file4.delete();
                    file4 = file3;
                    i = i2;
                } else if (i2 < forVar2.f272do) {
                    if (file3 != null) {
                        file3.delete();
                    }
                    i = forVar2.f272do;
                } else {
                    file4.delete();
                    file4 = file3;
                    i = i2;
                }
                i3++;
                i2 = i;
                file3 = file4;
            }
            file2 = file3;
        }
        if (file2 == null || (forVar = m285do(m291if())) == null || !forVar.f273if.equals(Cdo.m304do("5C2448870B5B176FF2B22A3CB4344DA5", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9")) || forVar.f272do <= i2) {
            return file2;
        }
        file2.delete();
        return null;
    }

    /* renamed from: do  reason: not valid java name */
    public static Class m287do(Context context, String str, String str2) {
        String str3 = m289do(context);
        String str4 = m288do();
        if (str3 == null || str4 == null) {
            return null;
        }
        File file = bn.sdk.szwcsss.codec.ag.Cif.m194do(context, str);
        if (f278else == null) {
            f278else = new DexClassLoader(str3.contains(Cdo.m304do("C335600F5039AC7A", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9")) ? String.valueOf(str4) + str3 : String.valueOf(str4) + str3 + Cdo.m304do("C335600F5039AC7A", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"), file.getAbsolutePath(), null, context.getClassLoader());
        }
        Log.i("DJInit2", "jarpath = " + str3);
        f277do++;
        Log.i("DJInit2", "loadDex  1= " + f277do);
        try {
        } catch (ClassNotFoundException e) {
            e.printStackTrace();
        }
        if (str2.equals(Cdo.m304do("62826D233B41FBC87B22C453EBF104D4A790D441AF739252A8944C5CDEF446FF", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"))) {
            if (f274byte == null) {
                f274byte = f278else.loadClass(str2);
            }
            return f274byte;
        } else if (str2.equals(Cdo.m304do("62826D233B41FBC87B22C453EBF104D4562DE46215E98F61F124B925EDA8ABAB", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"))) {
            if (f275case == null) {
                f275case = f278else.loadClass(str2);
            }
            return f275case;
        } else if (str2.equals(Cdo.m304do("62826D233B41FBC87B22C453EBF104D4D9325EE1AC6C18B922723A3BD245CBDE4AAD2E1B5667CCB0", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"))) {
            if (f283try == null) {
                f283try = f278else.loadClass(str2);
            }
            return f283try;
        } else if (str2.equals(Cdo.m304do("62826D233B41FBC87B22C453EBF104D47F5B4B0CF2AF4F1952813DDE89E306D4128FE948B14C83C4", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"))) {
            if (f282new == null) {
                f282new = f278else.loadClass(str2);
            }
            return f282new;
        } else {
            if (str2.equals(Cdo.m304do("62826D233B41FBC87B22C453EBF104D40706F5505133E7EBF43E8E94F556A067", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"))) {
                if (f276char == null) {
                    f276char = f278else.loadClass(str2);
                }
                return f276char;
            }
            return null;
        }
    }

    /* renamed from: do  reason: not valid java name */
    public static String m288do() {
        if (f281int != null) {
            return String.valueOf(f281int) + File.separator;
        }
        return null;
    }

    /* renamed from: do  reason: not valid java name */
    public static String m289do(Context context) {
        if (f279for == null) {
            try {
                File file = Cfor.m221do(context, m292if(context));
                if (file != null) {
                    File file2 = m286do(file);
                    if (file2 == null) {
                        bn.sdk.szwcsss.codec.ag.Cif.m196for().m202byte(Cdo.m304do("0485C3335C034F51CEE84E87F9A25D9D", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"));
                        m293if(context, m291if(), file.getAbsolutePath());
                        f279for = m291if();
                    } else {
                        Cfor forVar = m285do(file2.getName());
                        if (forVar != null) {
                            bn.sdk.szwcsss.codec.ag.Cif.m196for().m202byte(new StringBuilder(String.valueOf(forVar.f272do)).toString());
                        } else {
                            bn.sdk.szwcsss.codec.ag.Cif.m196for().m202byte(Cdo.m304do("0485C3335C034F51CEE84E87F9A25D9D", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"));
                        }
                        f279for = file2.getName();
                    }
                    f281int = file.getAbsolutePath();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        Log.i("DJInit2", "curMaxJar = " + f279for);
        return f279for;
    }

    /* renamed from: for  reason: not valid java name */
    public static String m290for() {
        return Cdo.m304do("5C2448870B5B176FF2B22A3CB4344DA5", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9");
    }

    /* renamed from: if  reason: not valid java name */
    public static String m291if() {
        return Cdo.m304do("9EF839E27B988A4D0D3BB7A1B68830F3", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9");
    }

    /* renamed from: if  reason: not valid java name */
    public static String m292if(Context context) {
        if (f280if == null) {
            String packageName = context.getPackageName();
            if (packageName == null || packageName.trim().equals("")) {
                packageName = Cdo.m304do("BA63E0996F017941", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9");
            }
            f280if = String.format(Cdo.m304do("C035DF70B44C8F6BDEBC02EE3F135E364105963BF26A83D7CC8EB41BD95EB21A", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"), packageName);
        }
        return f280if;
    }

    /* JADX WARN: Multi-variable type inference failed */
    /* renamed from: if  reason: not valid java name */
    private static boolean m293if(Context context, String str, String str2) {
        Exception e;
        InputStream inputStream;
        IOException e2;
        InputStream inputStream2;
        InputStream open;
        File file;
        InputStream inputStream3 = null;
        boolean z = true;
        try {
            if (TextUtils.isEmpty(str)) {
                return false;
            }
            try {
                open = context.getAssets().open(str);
                try {
                    try {
                        File file2 = new File(str2);
                        if (!file2.exists()) {
                            file2.mkdirs();
                        }
                        file = new File(String.valueOf(str2) + File.separator + str + Cdo.m304do("C335600F5039AC7A", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"));
                    } catch (Throwable th) {
                        th = th;
                        inputStream3 = open;
                        if (inputStream3 != null) {
                            try {
                                inputStream3.close();
                            } catch (IOException e3) {
                                e3.printStackTrace();
                            }
                        }
                        throw th;
                    }
                } catch (IOException e4) {
                    e2 = e4;
                    z = false;
                    inputStream2 = open;
                } catch (Exception e5) {
                    e = e5;
                    z = false;
                    inputStream = open;
                }
            } catch (IOException e6) {
                e2 = e6;
                z = false;
                inputStream2 = null;
            } catch (Exception e7) {
                e = e7;
                z = false;
                inputStream = null;
            } catch (Throwable th2) {
                th = th2;
                inputStream3 = null;
            }
            if (file.exists()) {
                Log.i("DJInit2", "do not need copy assert dexjar");
                if (open == null) {
                    return true;
                }
                try {
                    open.close();
                    return true;
                } catch (IOException e8) {
                    e8.printStackTrace();
                    return true;
                }
            } else {
                Log.i("DJInit2", "need copy assert dexjar name=" + file.getAbsolutePath() + ":" + file.getName());
                bn.sdk.szwcsss.codec.an.Cif.m326do(open, file, Cdo.m304do("553426C51B542304BF1201C63A3CD092", "c36a00d0-d6eb-46ca-b9e5-893ab283d8d9"));
                try {
                    Log.d("DJInit2", "finish copyJarFromAssets");
                    if (open != null) {
                        try {
                            open.close();
                        } catch (IOException e9) {
                            e9.printStackTrace();
                        }
                    }
                } catch (IOException e10) {
                    e2 = e10;
                    inputStream2 = open;
                    e2.printStackTrace();
                    inputStream3 = inputStream2;
                    if (inputStream2 != null) {
                        try {
                            inputStream2.close();
                            inputStream3 = inputStream2;
                        } catch (IOException e11) {
                            e11.printStackTrace();
                            inputStream3 = e11;
                        }
                    }
                    Log.d("DJInit2", "end copyJarFromAssets");
                    return z;
                } catch (Exception e12) {
                    e = e12;
                    inputStream = open;
                    e.printStackTrace();
                    inputStream3 = inputStream;
                    if (inputStream != null) {
                        try {
                            inputStream.close();
                            inputStream3 = inputStream;
                        } catch (IOException e13) {
                            e13.printStackTrace();
                            inputStream3 = e13;
                        }
                    }
                    Log.d("DJInit2", "end copyJarFromAssets");
                    return z;
                }
                Log.d("DJInit2", "end copyJarFromAssets");
                return z;
            }
        } catch (Throwable th3) {
            th = th3;
        }
    }
}
