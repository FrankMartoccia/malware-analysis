package bn.sdk.szwcsss.codec.b;

import com.umeng.analytics.pro.dm;
import com.umeng.analytics.pro.j;
/* renamed from: bn.sdk.szwcsss.codec.b.do  reason: invalid class name */
/* loaded from: classes.dex */
public class Cdo extends Cif {

    /* renamed from: break  reason: not valid java name */
    private final int f331break;

    /* renamed from: catch  reason: not valid java name */
    private final int f332catch;

    /* renamed from: class  reason: not valid java name */
    private int f333class;

    /* renamed from: long  reason: not valid java name */
    private final byte[] f334long;

    /* renamed from: this  reason: not valid java name */
    private final byte[] f335this;

    /* renamed from: void  reason: not valid java name */
    private final byte[] f336void;

    /* renamed from: do  reason: not valid java name */
    static final byte[] f328do = {dm.k, 10};

    /* renamed from: char  reason: not valid java name */
    private static final byte[] f327char = {65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47};

    /* renamed from: else  reason: not valid java name */
    private static final byte[] f329else = {65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95};

    /* renamed from: goto  reason: not valid java name */
    private static final byte[] f330goto = {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, 62, -1, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, dm.k, dm.l, dm.m, dm.n, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, 63, -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51};

    public Cdo() {
        this(0);
    }

    public Cdo(int i) {
        this(i, f328do);
    }

    public Cdo(int i, byte[] bArr) {
        this(i, bArr, false);
    }

    public Cdo(int i, byte[] bArr, boolean z) {
        super(3, 4, i, bArr == null ? 0 : bArr.length);
        this.f335this = f330goto;
        if (bArr == null) {
            this.f332catch = 4;
            this.f336void = null;
        } else if (m373int(bArr)) {
            throw new IllegalArgumentException("lineSeparator must not contain base64 characters: [" + Cint.m376do(bArr) + "]");
        } else if (i > 0) {
            this.f332catch = bArr.length + 4;
            this.f336void = new byte[bArr.length];
            System.arraycopy(bArr, 0, this.f336void, 0, bArr.length);
        } else {
            this.f332catch = 4;
            this.f336void = null;
        }
        this.f331break = this.f332catch - 1;
        this.f334long = z ? f329else : f327char;
    }

    public Cdo(boolean z) {
        this(76, f328do, z);
    }

    /* renamed from: do  reason: not valid java name */
    public static byte[] m354do(String str) {
        return new Cdo().m371if(str);
    }

    /* renamed from: do  reason: not valid java name */
    public static byte[] m355do(byte[] bArr) {
        return m356do(bArr, false);
    }

    /* renamed from: do  reason: not valid java name */
    public static byte[] m356do(byte[] bArr, boolean z) {
        return m357do(bArr, z, false);
    }

    /* renamed from: do  reason: not valid java name */
    public static byte[] m357do(byte[] bArr, boolean z, boolean z2) {
        return m358do(bArr, z, z2, Integer.MAX_VALUE);
    }

    /* renamed from: do  reason: not valid java name */
    public static byte[] m358do(byte[] bArr, boolean z, boolean z2, int i) {
        if (bArr == null || bArr.length == 0) {
            return bArr;
        }
        Cdo doVar = z ? new Cdo(z2) : new Cdo(0, f328do, z2);
        long j = doVar.m374new(bArr);
        if (j <= i) {
            return doVar.m369for(bArr);
        }
        throw new IllegalArgumentException("Input array too big, the output array would be bigger (" + j + ") than the specified maximum size of " + i);
    }

    @Override // bn.sdk.szwcsss.codec.b.Cif
    /* renamed from: do  reason: not valid java name */
    void mo359do(byte[] bArr, int i, int i2) {
        if (!this.f350try) {
            if (i2 < 0) {
                this.f350try = true;
                if (!(this.f341case == 0 && this.f345for == 0)) {
                    m367do(this.f332catch);
                    int i3 = this.f349new;
                    switch (this.f341case) {
                        case 1:
                            byte[] bArr2 = this.f348int;
                            int i4 = this.f349new;
                            this.f349new = i4 + 1;
                            bArr2[i4] = this.f334long[(this.f333class >> 2) & 63];
                            byte[] bArr3 = this.f348int;
                            int i5 = this.f349new;
                            this.f349new = i5 + 1;
                            bArr3[i5] = this.f334long[(this.f333class << 4) & 63];
                            if (this.f334long == f327char) {
                                byte[] bArr4 = this.f348int;
                                int i6 = this.f349new;
                                this.f349new = i6 + 1;
                                bArr4[i6] = 61;
                                byte[] bArr5 = this.f348int;
                                int i7 = this.f349new;
                                this.f349new = i7 + 1;
                                bArr5[i7] = 61;
                                break;
                            }
                            break;
                        case 2:
                            byte[] bArr6 = this.f348int;
                            int i8 = this.f349new;
                            this.f349new = i8 + 1;
                            bArr6[i8] = this.f334long[(this.f333class >> 10) & 63];
                            byte[] bArr7 = this.f348int;
                            int i9 = this.f349new;
                            this.f349new = i9 + 1;
                            bArr7[i9] = this.f334long[(this.f333class >> 4) & 63];
                            byte[] bArr8 = this.f348int;
                            int i10 = this.f349new;
                            this.f349new = i10 + 1;
                            bArr8[i10] = this.f334long[(this.f333class << 2) & 63];
                            if (this.f334long == f327char) {
                                byte[] bArr9 = this.f348int;
                                int i11 = this.f349new;
                                this.f349new = i11 + 1;
                                bArr9[i11] = 61;
                                break;
                            }
                            break;
                    }
                    this.f340byte = (this.f349new - i3) + this.f340byte;
                    if (this.f345for > 0 && this.f340byte > 0) {
                        System.arraycopy(this.f336void, 0, this.f348int, this.f349new, this.f336void.length);
                        this.f349new += this.f336void.length;
                        return;
                    }
                    return;
                }
                return;
            }
            for (int i12 = 0; i12 < i2; i12++) {
                m367do(this.f332catch);
                this.f341case = (this.f341case + 1) % 3;
                i++;
                int i13 = bArr[i];
                if (i13 < 0) {
                    i13 += j.e;
                }
                this.f333class = i13 + (this.f333class << 8);
                if (this.f341case == 0) {
                    byte[] bArr10 = this.f348int;
                    int i14 = this.f349new;
                    this.f349new = i14 + 1;
                    bArr10[i14] = this.f334long[(this.f333class >> 18) & 63];
                    byte[] bArr11 = this.f348int;
                    int i15 = this.f349new;
                    this.f349new = i15 + 1;
                    bArr11[i15] = this.f334long[(this.f333class >> 12) & 63];
                    byte[] bArr12 = this.f348int;
                    int i16 = this.f349new;
                    this.f349new = i16 + 1;
                    bArr12[i16] = this.f334long[(this.f333class >> 6) & 63];
                    byte[] bArr13 = this.f348int;
                    int i17 = this.f349new;
                    this.f349new = i17 + 1;
                    bArr13[i17] = this.f334long[this.f333class & 63];
                    this.f340byte += 4;
                    if (this.f345for > 0 && this.f345for <= this.f340byte) {
                        System.arraycopy(this.f336void, 0, this.f348int, this.f349new, this.f336void.length);
                        this.f349new += this.f336void.length;
                        this.f340byte = 0;
                    }
                }
            }
        }
    }

    @Override // bn.sdk.szwcsss.codec.b.Cif
    /* renamed from: do  reason: not valid java name */
    protected boolean mo360do(byte b) {
        return b >= 0 && b < this.f335this.length && this.f335this[b] != -1;
    }

    @Override // bn.sdk.szwcsss.codec.b.Cif
    /* renamed from: if  reason: not valid java name */
    void mo361if(byte[] bArr, int i, int i2) {
        byte b;
        if (!this.f350try) {
            if (i2 < 0) {
                this.f350try = true;
            }
            int i3 = 0;
            while (true) {
                if (i3 >= i2) {
                    break;
                }
                m367do(this.f331break);
                i++;
                byte b2 = bArr[i];
                if (b2 == 61) {
                    this.f350try = true;
                    break;
                }
                if (b2 >= 0 && b2 < f330goto.length && (b = f330goto[b2]) >= 0) {
                    this.f341case = (this.f341case + 1) % 4;
                    this.f333class = b + (this.f333class << 6);
                    if (this.f341case == 0) {
                        byte[] bArr2 = this.f348int;
                        int i4 = this.f349new;
                        this.f349new = i4 + 1;
                        bArr2[i4] = (byte) ((this.f333class >> 16) & 255);
                        byte[] bArr3 = this.f348int;
                        int i5 = this.f349new;
                        this.f349new = i5 + 1;
                        bArr3[i5] = (byte) ((this.f333class >> 8) & 255);
                        byte[] bArr4 = this.f348int;
                        int i6 = this.f349new;
                        this.f349new = i6 + 1;
                        bArr4[i6] = (byte) (this.f333class & 255);
                    }
                }
                i3++;
            }
            if (this.f350try && this.f341case != 0) {
                m367do(this.f331break);
                switch (this.f341case) {
                    case 2:
                        this.f333class >>= 4;
                        byte[] bArr5 = this.f348int;
                        int i7 = this.f349new;
                        this.f349new = i7 + 1;
                        bArr5[i7] = (byte) (this.f333class & 255);
                        return;
                    case 3:
                        this.f333class >>= 2;
                        byte[] bArr6 = this.f348int;
                        int i8 = this.f349new;
                        this.f349new = i8 + 1;
                        bArr6[i8] = (byte) ((this.f333class >> 8) & 255);
                        byte[] bArr7 = this.f348int;
                        int i9 = this.f349new;
                        this.f349new = i9 + 1;
                        bArr7[i9] = (byte) (this.f333class & 255);
                        return;
                    default:
                        return;
                }
            }
        }
    }
}
