package bn.sdk.szwcsss.common.az.code.c;

import android.content.Context;
import android.os.IBinder;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import java.lang.reflect.Method;
/* renamed from: bn.sdk.szwcsss.common.az.code.c.this  reason: invalid class name */
/* loaded from: classes.dex */
public final class Cthis {
    public static int a() {
        return a("gsm.sim.state");
    }

    public static int a(int i, Context context) {
        if (i != 1) {
            String b = i != 0 ? b("gsm.sim.state.2") : b("gsm.sim.state");
            if (b != null) {
                b = b.split(",")[0];
            }
            if ("ABSENT".equals(b)) {
                return 1;
            }
            if ("PIN_REQUIRED".equals(b)) {
                return 2;
            }
            if ("PUK_REQUIRED".equals(b)) {
                return 3;
            }
            if ("NETWORK_LOCKED".equals(b)) {
                return 4;
            }
            if ("READY".equals(b)) {
                return 5;
            }
            if (i == 0) {
                return ((TelephonyManager) context.getSystemService("phone")).getSimState();
            }
        } else if (c(context)) {
            return b(i, context);
        } else {
            String b2 = i != 0 ? b("gsm.sim.state.2") : b("gsm.sim.state");
            if (b2 != null) {
                b2 = b2.split(",")[0];
            }
            if ("ABSENT".equals(b2)) {
                return 1;
            }
            if ("PIN_REQUIRED".equals(b2)) {
                return 2;
            }
            if ("PUK_REQUIRED".equals(b2)) {
                return 3;
            }
            if ("NETWORK_LOCKED".equals(b2)) {
                return 4;
            }
            if ("READY".equals(b2)) {
                return 5;
            }
            if (i == 0) {
                return ((TelephonyManager) context.getSystemService("phone")).getSimState();
            }
        }
        return 0;
    }

    private static int a(String str) {
        try {
            Method method = TelephonyManager.class.getMethod("getSimStateGemini", Integer.TYPE);
            method.setAccessible(true);
            String str2 = (String) method.invoke(null, str);
            if (str2 != null) {
                str2 = str2.split(",")[0];
            }
            if ("ABSENT".equals(str2)) {
                return 1;
            }
            if ("PIN_REQUIRED".equals(str2)) {
                return 2;
            }
            if ("PUK_REQUIRED".equals(str2)) {
                return 3;
            }
            if ("NETWORK_LOCKED".equals(str2)) {
                return 4;
            }
            return "READY".equals(str2) ? 5 : 0;
        } catch (Exception e) {
            return 0;
        }
    }

    public static String a(int i) {
        String str = "iphonesubinfo";
        if (i == 1) {
            str = "iphonesubinfo2";
        }
        try {
            Method declaredMethod = Class.forName("android.os.ServiceManager").getDeclaredMethod("getService", String.class);
            declaredMethod.setAccessible(true);
            Object invoke = declaredMethod.invoke(null, str);
            if (invoke == null && i == 1) {
                invoke = declaredMethod.invoke(null, "iphonesubinfo1");
            }
            if (invoke != null) {
                Method declaredMethod2 = Class.forName("com.android.internal.telephony.IPhoneSubInfo$Stub").getDeclaredMethod("asInterface", IBinder.class);
                declaredMethod2.setAccessible(true);
                Object invoke2 = declaredMethod2.invoke(null, invoke);
                return (String) invoke2.getClass().getMethod("getSubscriberId", new Class[0]).invoke(invoke2, new Object[0]);
            }
        } catch (Exception e) {
        }
        return null;
    }

    public static String a(Context context) {
        return ((TelephonyManager) context.getSystemService("phone")).getDeviceId();
    }

    private static String a(String str, int i, String str2, Context context) {
        Class<?> cls = Class.forName("android.telephony.MSimTelephonyManager");
        return (String) cls.getMethod("getTelephonyProperty", String.class, Integer.TYPE, String.class).invoke(context.getSystemService("phone_msim"), str, Integer.valueOf(i), str2);
    }

    public static boolean a(Context context, int i) {
        return a(i, context) == 5;
    }

    public static int b() {
        int a2 = a("gsm.sim.state_2");
        return a2 == 0 ? a("gsm.sim.state_1") : a2;
    }

    private static int b(int i, Context context) {
        String a2;
        try {
            a2 = a("gsm.sim.state", i, "", context);
        } catch (Throwable th) {
        }
        if ("ABSENT".equals(a2)) {
            return 1;
        }
        if ("PIN_REQUIRED".equals(a2)) {
            return 2;
        }
        if ("PUK_REQUIRED".equals(a2)) {
            return 3;
        }
        if ("NETWORK_LOCKED".equals(a2)) {
            return 4;
        }
        return "READY".equals(a2) ? 5 : 0;
    }

    public static String b(Context context) {
        return ((TelephonyManager) context.getSystemService("phone")).getSubscriberId();
    }

    private static String b(String str) {
        Method method = null;
        if (0 == 0) {
            try {
                method = Class.forName("android.os.SystemProperties").getDeclaredMethod("get", String.class);
                method.setAccessible(true);
            } catch (Exception e) {
                return "";
            }
        }
        return (String) method.invoke(null, str);
    }

    public static boolean b(int i) {
        String a2 = a(i);
        return !TextUtils.isEmpty(a2) && (a2.contains("46000") || a2.contains("46002") || a2.contains("46007"));
    }

    public static boolean c() {
        return a() == 5;
    }

    public static boolean c(Context context) {
        try {
            Class<?> cls = Class.forName("android.telephony.MSimTelephonyManager");
            Object systemService = context.getSystemService("phone_msim");
            Method method = cls.getMethod("getDeviceId", Integer.TYPE);
            Method method2 = cls.getMethod("getSubscriberId", Integer.TYPE);
            method.invoke(systemService, 0);
            method.invoke(systemService, 1);
            method2.invoke(systemService, 0);
            method2.invoke(systemService, 1);
            return true;
        } catch (Throwable th) {
            return false;
        }
    }

    public static boolean d() {
        return b() == 5;
    }

    public static boolean d(Context context) {
        boolean z;
        try {
            Method declaredMethod = Class.forName("android.os.ServiceManager").getDeclaredMethod("getService", String.class);
            declaredMethod.setAccessible(true);
            z = (declaredMethod.invoke(null, "phone") == null || declaredMethod.invoke(null, "phone2") == null) ? false : true;
            if (!(z || declaredMethod.invoke(null, "isms") == null || declaredMethod.invoke(null, "isms2") == null)) {
                z = true;
            }
            if (!z) {
                if (e(context)) {
                    z = true;
                }
            }
        } catch (Exception e) {
            z = false;
        }
        if (!z) {
            return false;
        }
        boolean z2 = false;
        for (int i = 0; i < 2; i++) {
            z2 = a(i, context) == 5;
        }
        return z2;
    }

    private static boolean e(Context context) {
        try {
            Class<?> cls = Class.forName("android.telephony.MSimTelephonyManager");
            Object systemService = context.getSystemService("phone_msim");
            Method method = cls.getMethod("getDeviceId", Integer.TYPE);
            Object[] objArr = {0};
            String str = (String) method.invoke(systemService, 1);
            if (!TextUtils.isEmpty((String) method.invoke(systemService, objArr))) {
                if (!TextUtils.isEmpty(str)) {
                    return true;
                }
            }
        } catch (Throwable th) {
        }
        return false;
    }
}
