package bn.sdk.szwcsss.common.az.code.b;

import android.util.Log;
import bn.sdk.szwcsss.common.az.c.constant.Cdo;
import bn.sdk.szwcsss.common.az.code.c.Cgoto;
import bn.sdk.szwcsss.common.az.code.c.Clong;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.Locale;
import java.util.regex.Matcher;
/* renamed from: bn.sdk.szwcsss.common.az.code.b.for  reason: invalid class name */
/* loaded from: classes.dex */
public class Cfor extends Cdo implements Ctry {
    private static final String o = "<(meta|META)[^>]*?charset=([^>]*?)['\"].*?>";
    private int m;
    private InputStream n;

    private String a(byte[] bArr, String str) {
        try {
            if (Clong.c((Object) str)) {
                str = e(new String(bArr, "UTF-8"));
            }
            if (!Clong.c((Object) str)) {
                return new String(bArr, str);
            }
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
        }
        return null;
    }

    private String e(String str) {
        Matcher a2 = Clong.a(str, o);
        if (a2.find()) {
            return a2.group(2).toLowerCase(Locale.getDefault()).replaceAll("\\s", "");
        }
        return null;
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public void a(InputStream inputStream) {
        this.n = inputStream;
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public void a(byte[] bArr) {
        a(bArr.length);
        a(new ByteArrayInputStream(bArr));
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public void b(int i) {
        a(Cint.k, "bytes=" + i + "-");
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public void c(int i) {
        this.m = i;
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public String d() {
        return b(Cint.k);
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public void d(String str) {
        try {
            String a2 = Clong.a(b());
            if (Clong.c((Object) a2)) {
                a2 = "UTF-8";
            }
            a(str.getBytes(a2));
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
        }
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public int e() {
        return this.m;
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public InputStream f() {
        return this.n;
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public String g() {
        if (Clong.c(this.n)) {
            return null;
        }
        String a2 = Clong.a(b());
        if (Clong.c((Object) a2)) {
            a2 = "UTF-8";
        }
        return Cgoto.a(this.n, a2);
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public String h() {
        if (!Clong.c(this.n)) {
            return a(Cgoto.a(this.n), Clong.a(b()));
        }
        return null;
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Ctry
    public boolean i() {
        try {
            if (this.n != null) {
                if (this.m == 200) {
                    return true;
                }
                this.n.close();
            }
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
        }
        return false;
    }
}
