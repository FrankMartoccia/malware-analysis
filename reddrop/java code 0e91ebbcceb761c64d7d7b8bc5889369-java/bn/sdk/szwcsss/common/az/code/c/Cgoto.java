package bn.sdk.szwcsss.common.az.code.c;

import android.util.Log;
import bn.sdk.szwcsss.common.az.c.constant.Cdo;
import com.yf.y.f.init.util.ConstUtils;
import java.io.ByteArrayOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
/* renamed from: bn.sdk.szwcsss.common.az.code.c.goto  reason: invalid class name */
/* loaded from: classes.dex */
public class Cgoto {
    public static final String a(InputStream inputStream, int i, String str) {
        try {
            byte[] a2 = a(inputStream, i);
            if (Clong.c(a2)) {
                return null;
            }
            return new String(a2, str);
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
            return null;
        }
    }

    public static final String a(InputStream inputStream, String str) {
        try {
            byte[] a2 = a(inputStream);
            if (Clong.c(a2)) {
                return null;
            }
            return new String(a2, str);
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
            return null;
        }
    }

    public static final void a(InputStream inputStream, OutputStream outputStream) {
        try {
            byte[] bArr = new byte[ConstUtils.KB];
            while (true) {
                int read = inputStream.read(bArr);
                if (read != -1) {
                    outputStream.write(bArr, 0, read);
                } else {
                    return;
                }
            }
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
        } finally {
            b(inputStream, outputStream);
        }
    }

    public static final byte[] a(InputStream inputStream) {
        try {
            ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream();
            a(inputStream, byteArrayOutputStream);
            return byteArrayOutputStream.toByteArray();
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
            return null;
        }
    }

    public static final byte[] a(InputStream inputStream, int i) {
        int i2 = 0;
        try {
            byte[] bArr = new byte[ConstUtils.KB];
            byte[] bArr2 = new byte[i];
            while (true) {
                int read = inputStream.read(bArr);
                if (read == -1) {
                    return bArr2;
                }
                System.arraycopy(bArr, 0, bArr2, i2, read);
                i2 += read;
            }
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
            return null;
        } finally {
            b(inputStream, null);
        }
    }

    public static final void b(InputStream inputStream, OutputStream outputStream) {
        if (inputStream != null) {
            try {
                inputStream.close();
            } catch (Exception e) {
                Log.e(Cdo.f525a, "", e);
                return;
            }
        }
        if (outputStream != null) {
            outputStream.flush();
            outputStream.close();
        }
    }
}
