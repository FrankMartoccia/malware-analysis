package bn.sdk.szwcsss.common.az.code.b;

import android.util.Log;
import bn.sdk.szwcsss.common.az.c.constant.Cdo;
import bn.sdk.szwcsss.common.az.code.b.Cdo;
import bn.sdk.szwcsss.common.az.code.b.Cif;
import bn.sdk.szwcsss.common.az.code.c.Clong;
import org.apache.http.Header;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.entity.UrlEncodedFormEntity;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.client.methods.HttpRequestBase;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.params.BasicHttpParams;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.params.HttpParams;
/* renamed from: bn.sdk.szwcsss.common.az.code.b.byte  reason: invalid class name */
/* loaded from: classes.dex */
public class Cbyte {

    /* renamed from: a  reason: collision with root package name */
    private static final int f567a = 30000;
    private static final int b = 30000;
    private static HttpParams c = new BasicHttpParams();

    static {
        HttpConnectionParams.setSoTimeout(c, 30000);
        HttpConnectionParams.setConnectionTimeout(c, 30000);
    }

    public static final Ctry a(Cnew newVar) {
        HttpResponse httpResponse = null;
        try {
            HttpRequestBase b2 = b(newVar);
            a(b2, newVar);
            httpResponse = a().execute(b2);
        } catch (Exception e) {
            Log.e(Cdo.f525a, "", e);
        }
        return a(httpResponse);
    }

    private static final Ctry a(HttpResponse httpResponse) {
        Exception e;
        Cfor forVar = null;
        try {
            forVar = new Cfor();
        } catch (Exception e2) {
            e = e2;
        }
        try {
            b(httpResponse, forVar);
            c(httpResponse, forVar);
            a(httpResponse, forVar);
        } catch (Exception e3) {
            e = e3;
            Log.e(Cdo.f525a, "", e);
            return forVar;
        }
        return forVar;
    }

    public static final HttpClient a() {
        return new DefaultHttpClient(c);
    }

    private static final HttpPost a(HttpPost httpPost, Cnew newVar) {
        if (!Clong.c(newVar.h())) {
            httpPost.setEntity(new ByteArrayEntity(newVar.h()));
        } else if (!Clong.c((Object) newVar.g())) {
            httpPost.setEntity(new StringEntity(newVar.g(), c(newVar)));
        } else if (!Clong.c(newVar.i())) {
            httpPost.setEntity(new UrlEncodedFormEntity(newVar.i(), c(newVar)));
        }
        return httpPost;
    }

    private static final void a(HttpResponse httpResponse, Ctry tryVar) {
        if (httpResponse != null && httpResponse.getEntity() != null) {
            tryVar.a(httpResponse.getEntity().getContent());
        }
    }

    private static final void a(HttpRequestBase httpRequestBase, Cnew newVar) {
        Cdo.C0003do[] a2;
        for (Cdo.C0003do doVar : newVar.a()) {
            httpRequestBase.setHeader(doVar.f568a, doVar.b);
        }
    }

    private static final HttpRequestBase b(Cnew newVar) {
        return newVar.f() == Cif.Cdo.GET ? new HttpGet(newVar.e()) : a(new HttpPost(newVar.e()), newVar);
    }

    private static final void b(HttpResponse httpResponse, Ctry tryVar) {
        if (httpResponse != null) {
            tryVar.c(httpResponse.getStatusLine().getStatusCode());
        } else {
            tryVar.c(504);
        }
    }

    private static String c(Cnew newVar) {
        String a2 = Clong.a(newVar.b());
        return Clong.c((Object) a2) ? a2 : "UTF-8";
    }

    private static final void c(HttpResponse httpResponse, Ctry tryVar) {
        Header[] allHeaders = httpResponse.getAllHeaders();
        if (!Clong.c(allHeaders)) {
            for (Header header : allHeaders) {
                tryVar.a(header.getName(), header.getValue());
            }
        }
    }
}
