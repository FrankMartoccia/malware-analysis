package bn.sdk.szwcsss.common.az.code.b;

import java.util.Iterator;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;
/* renamed from: bn.sdk.szwcsss.common.az.code.b.do  reason: invalid class name */
/* loaded from: classes.dex */
public abstract class Cdo implements Cint {
    private ConcurrentMap m = new ConcurrentHashMap();

    /* renamed from: bn.sdk.szwcsss.common.az.code.b.do$do  reason: invalid class name and collision with other inner class name */
    /* loaded from: classes.dex */
    class C0003do {

        /* renamed from: a  reason: collision with root package name */
        String f568a;
        String b;

        public C0003do(String str, String str2) {
            this.f568a = str;
            this.b = str2;
        }
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public C0003do a(String str) {
        if (this.m.containsKey(str)) {
            return new C0003do(str, (String) this.m.get(str));
        }
        return null;
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public void a(int i) {
        a(Cint.c, i + "");
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public void a(C0003do doVar) {
        a(doVar.f568a, doVar.b);
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public void a(String str, String str2) {
        this.m.put(str, str2);
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public C0003do[] a() {
        C0003do[] doVarArr = new C0003do[this.m.size()];
        Iterator it = this.m.keySet().iterator();
        int i = 0;
        while (true) {
            int i2 = i;
            if (i2 >= this.m.size()) {
                return doVarArr;
            }
            String str = (String) it.next();
            doVarArr[i2] = new C0003do(str, b(str));
            i = i2 + 1;
        }
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public String b() {
        return b(Cint.b);
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public String b(String str) {
        return (String) this.m.get(str);
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public int c() {
        if (this.m.containsKey(Cint.c)) {
            return Integer.parseInt(b(Cint.c));
        }
        return 0;
    }

    @Override // bn.sdk.szwcsss.common.az.code.b.Cint
    public void c(String str) {
        a(Cint.b, str);
    }
}
