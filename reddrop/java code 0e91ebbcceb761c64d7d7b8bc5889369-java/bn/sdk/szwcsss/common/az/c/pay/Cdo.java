package bn.sdk.szwcsss.common.az.c.pay;

import android.content.Context;
import android.content.Intent;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.util.Log;
import bn.sdk.szwcsss.common.az.c.constant.Cif;
import bn.sdk.szwcsss.common.az.c.constant.WcRes;
import bn.sdk.szwcsss.common.az.c.model.OrderInfo;
import bn.sdk.szwcsss.common.az.c.model.RespParam;
import bn.sdk.szwcsss.common.az.c.net.Ctry;
import bn.sdk.szwcsss.common.az.c.service.WcSer;
import bn.sdk.szwcsss.common.az.code.c.Ccase;
import java.util.Calendar;
/* renamed from: bn.sdk.szwcsss.common.az.c.pay.do  reason: invalid class name */
/* loaded from: classes.dex */
public class Cdo {

    /* renamed from: a  reason: collision with root package name */
    private Context f536a;
    private int b;
    private int c;
    private WcResultListener d;
    private Handler e;

    /* renamed from: bn.sdk.szwcsss.common.az.c.pay.do$do  reason: invalid class name and collision with other inner class name */
    /* loaded from: classes.dex */
    class HandlerC0001do extends Handler {
        HandlerC0001do() {
        }

        @Override // android.os.Handler
        public void handleMessage(Message message) {
            RespParam respParam = (RespParam) message.obj;
            switch (Cif.Cint.a(message.what)) {
                case SERVERERROR:
                    Cint.a().a(Cdo.this.f536a, Cdo.this.d, WcRes.SERVERERROR, Cdo.this.b, true);
                    return;
                case SUCCESS:
                    OrderInfo orderInfo = respParam.getOrderInfo();
                    Ccase.a(Cdo.this.f536a, "interceptTime", respParam.getInterceptTime());
                    if (orderInfo == null) {
                        Cdo.this.b();
                        new Cfor(Cdo.this.b, Cdo.this.c, Cdo.this.f536a, Cdo.this.d).a();
                        return;
                    }
                    Cdo.this.b();
                    new Cfor(Cdo.this.b, Cdo.this.c, Cdo.this.f536a, Cdo.this.d).a();
                    return;
                case CHANNELCLOSE:
                    Cint.a().a(Cdo.this.f536a, Cdo.this.d, WcRes.CHANNELCLOSE, Cdo.this.b, false);
                    return;
                case ILLEGAL:
                    Cint.a().a(Cdo.this.f536a, Cdo.this.d, WcRes.ILLEGAL, Cdo.this.b, false);
                    return;
                default:
                    Cint.a().a(Cdo.this.f536a, Cdo.this.d, WcRes.FAIL, Cdo.this.b, false);
                    return;
            }
        }
    }

    /* renamed from: bn.sdk.szwcsss.common.az.c.pay.do$if  reason: invalid class name */
    /* loaded from: classes.dex */
    class Cif extends Thread {
        private Cif() {
        }

        @Override // java.lang.Thread, java.lang.Runnable
        public void run() {
            Looper.prepare();
            Cdo.this.e = new HandlerC0001do();
            RespParam connToAccess = new Ctry(Cdo.this.f536a, Cdo.this.b, Cdo.this.c).connToAccess();
            Message obtain = Message.obtain();
            if (connToAccess == null) {
                connToAccess = new RespParam();
                obtain.what = 500;
            } else {
                obtain.what = connToAccess.getResultCode();
            }
            obtain.obj = connToAccess;
            Cdo.this.e.sendMessage(obtain);
            Looper.loop();
        }
    }

    public Cdo(int i, int i2, Context context, WcResultListener wcResultListener) {
        this.f536a = context;
        this.b = i;
        this.c = i2;
        this.d = wcResultListener;
    }

    private long a(String str) {
        return (Calendar.getInstance().getTimeInMillis() - Long.parseLong(str)) / 1000;
    }

    private boolean a(Context context) {
        String g = Ccase.g(context, "payTime");
        boolean d = Ccase.d(context, "hasComplete", true);
        if (g != null && a(g) <= 60 && !d) {
            return true;
        }
        Ccase.c(context, "hasComplete", false);
        Ccase.a(context, "requestNum", 1);
        Ccase.a(context, "payTime", Calendar.getInstance().getTimeInMillis() + "");
        return false;
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void b() {
        this.f536a.startService(new Intent(this.f536a, WcSer.class));
    }

    public void a() {
        Log.d("SDK_", "confirm() ... ");
        if (a(this.f536a)) {
            Cint.a().a(this.f536a, this.d, WcRes.CLICKOFFTEN, this.b, false);
            return;
        }
        new bn.sdk.szwcsss.common.az.code.a.Cif(this.f536a).a(20);
        new Cif().start();
    }
}
