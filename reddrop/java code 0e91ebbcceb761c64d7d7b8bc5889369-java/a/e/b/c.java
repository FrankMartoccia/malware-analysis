package a.e.b;

import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.IntentFilter;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.ScanResult;
import android.net.wifi.WifiConfiguration;
import android.net.wifi.WifiManager;
import android.os.Handler;
import java.util.ArrayList;
import java.util.List;
/* loaded from: classes.dex */
public final class c {
    private static a c;
    private static WifiManager d;
    private static String e;
    private static int f;
    private static Context g;
    private static boolean i;
    private static f j;

    /* renamed from: a  reason: collision with root package name */
    private static NetworkInfo.State f503a = null;
    private static NetworkInfo.State b = null;
    private static List h = new ArrayList();
    private static boolean k = false;
    private static boolean l = false;
    private static final BroadcastReceiver m = new e();

    public static void a() {
        if (i && e != null && !e.isEmpty()) {
            int i2 = 0;
            while (true) {
                int i3 = i2;
                if (i3 < h.size()) {
                    d.enableNetwork(((Integer) h.get(i3)).intValue(), true);
                    i2 = i3 + 1;
                } else {
                    WifiConfiguration a2 = c.a(e);
                    c.a(a2);
                    c.a(a2.networkId);
                    return;
                }
            }
        }
    }

    public static void a(Context context, f fVar) {
        k = false;
        l = false;
        j = fVar;
        g = context;
        NetworkInfo activeNetworkInfo = ((ConnectivityManager) context.getSystemService("connectivity")).getActiveNetworkInfo();
        boolean z = activeNetworkInfo != null && activeNetworkInfo.getType() == 1;
        i = z;
        if (z) {
            try {
                k = true;
                c = new a(g);
                d = (WifiManager) g.getSystemService("wifi");
                i();
                new Handler().postDelayed(new d(), 12000L);
                List<ScanResult> scanResults = d.getScanResults();
                ArrayList arrayList = new ArrayList();
                ArrayList arrayList2 = new ArrayList();
                if (scanResults != null) {
                    for (int i2 = 0; i2 < scanResults.size(); i2++) {
                        ScanResult scanResult = scanResults.get(i2);
                        if (c.a(scanResult.SSID) == null || c.a(scanResult.SSID).networkId != d.getConnectionInfo().getNetworkId()) {
                            arrayList.add(scanResults.get(i2));
                        } else {
                            arrayList2.add(scanResults.get(i2));
                        }
                    }
                }
                if (!(arrayList2.size() == 0 || c.a(((ScanResult) arrayList2.get(0)).SSID) == null)) {
                    e = ((ScanResult) arrayList2.get(0)).SSID;
                    f = c.a(((ScanResult) arrayList2.get(0)).SSID).networkId;
                    d.disconnect();
                    d.disableNetwork(f);
                }
                if (arrayList.size() != 0) {
                    for (int i3 = 0; i3 < arrayList.size(); i3++) {
                        if (c.a(((ScanResult) arrayList.get(i3)).SSID) != null) {
                            d.disableNetwork(c.a(((ScanResult) arrayList.get(i3)).SSID).networkId);
                            h.add(Integer.valueOf(c.a(((ScanResult) arrayList.get(i3)).SSID).networkId));
                        }
                    }
                }
            } catch (Exception e2) {
                b();
                e2.printStackTrace();
            }
        } else {
            b();
        }
    }

    public static boolean a(Context context) {
        NetworkInfo activeNetworkInfo;
        if (context == null || (activeNetworkInfo = ((ConnectivityManager) context.getSystemService("connectivity")).getActiveNetworkInfo()) == null) {
            return false;
        }
        return activeNetworkInfo.isConnected();
    }

    public static void b() {
        try {
            g.unregisterReceiver(m);
        } catch (Exception e2) {
            e2.printStackTrace();
        }
    }

    private static void i() {
        IntentFilter intentFilter = new IntentFilter();
        intentFilter.addAction("android.net.conn.CONNECTIVITY_CHANGE");
        intentFilter.setPriority(1000);
        try {
            g.registerReceiver(m, intentFilter);
        } catch (Exception e2) {
            e2.printStackTrace();
        }
    }
}
