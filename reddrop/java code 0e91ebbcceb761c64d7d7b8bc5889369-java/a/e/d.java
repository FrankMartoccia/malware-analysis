package a.e;

import a.e.a.a;
import a.e.a.b;
import android.content.Context;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiManager;
import android.os.Build;
import android.telephony.TelephonyManager;
import android.text.TextUtils;
import cn.cuter.main.ResultCallback;
import java.math.BigInteger;
import java.net.InetAddress;
import java.net.NetworkInterface;
import java.security.MessageDigest;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Enumeration;
import java.util.Random;
/* loaded from: classes.dex */
public final class d {
    private static d K;
    public String A;
    public String C;
    public int D;
    public String E;
    public String[] F;
    public String G;
    public String H;
    public ResultCallback e;
    public String f;
    public String g;
    public String h;
    public String i;
    public String j;
    public String k;
    public String l;
    public String n;
    public String o;
    public String p;
    public String q;
    public long r;
    public String s;
    public String t;
    public String u;
    public String v;
    public String w;
    public String x;
    public String y;
    public String z;

    /* renamed from: a  reason: collision with root package name */
    public boolean f508a = false;
    public int b = 0;
    public int c = 0;
    public int d = 0;
    public String m = "";
    public String B = "60";
    public boolean I = false;
    public String J = "";

    public static d a() {
        if (K == null) {
            K = new d();
        }
        return K;
    }

    private static String a(String str) {
        String str2 = "";
        try {
            MessageDigest messageDigest = MessageDigest.getInstance("MD5");
            messageDigest.update(str.getBytes());
            str2 = new BigInteger(1, messageDigest.digest()).toString(16);
            return str2.toUpperCase();
        } catch (Exception e) {
            String str3 = str2;
            e.printStackTrace();
            return str3;
        }
    }

    private static String a(String str, int i) {
        while (str.length() < 3) {
            str = "0" + str;
        }
        return str;
    }

    private static String b() {
        try {
            Enumeration<NetworkInterface> networkInterfaces = NetworkInterface.getNetworkInterfaces();
            while (networkInterfaces.hasMoreElements()) {
                Enumeration<InetAddress> inetAddresses = networkInterfaces.nextElement().getInetAddresses();
                if (inetAddresses.hasMoreElements()) {
                    return inetAddresses.nextElement().getHostAddress();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return null;
    }

    public final void a(Context context) {
        String str;
        this.g = "1";
        String simSerialNumber = ((TelephonyManager) context.getSystemService("phone")).getSimSerialNumber();
        if (simSerialNumber == null) {
            simSerialNumber = "";
        }
        this.h = simSerialNumber;
        ConnectivityManager connectivityManager = (ConnectivityManager) context.getSystemService("connectivity");
        if (connectivityManager == null) {
            str = "1";
        } else {
            NetworkInfo networkInfo = connectivityManager.getNetworkInfo(1);
            str = networkInfo == null ? "1" : networkInfo.getState().equals(NetworkInfo.State.CONNECTED) ? "1" : "0";
        }
        this.i = str;
        this.j = b();
        String subscriberId = ((TelephonyManager) context.getSystemService("phone")).getSubscriberId();
        if (subscriberId == null) {
            subscriberId = "";
        }
        if (this.I) {
            subscriberId = this.J;
        }
        this.m = subscriberId;
        if (TextUtils.isEmpty(this.m)) {
            b bVar = new b(context);
            a d = bVar.d();
            if (d == null && (d = bVar.a()) == null && (d = bVar.b()) == null && (d = bVar.c()) == null && (d = bVar.e()) == null) {
                d = null;
            }
            if (d != null) {
                this.m = d.f498a == null ? "" : d.f498a;
            }
        }
        this.s = a.a.b.a(this.F[45], this.G);
        String str2 = Build.MODEL;
        if (TextUtils.isEmpty(str2)) {
            str2 = "";
        }
        this.w = str2;
        String deviceId = ((TelephonyManager) context.getSystemService("phone")).getDeviceId();
        if (deviceId == null) {
            deviceId = "";
        }
        this.x = deviceId;
        String macAddress = ((WifiManager) context.getSystemService("wifi")).getConnectionInfo().getMacAddress();
        if (!TextUtils.isEmpty(macAddress)) {
            macAddress = macAddress.replace(":", "");
        }
        this.y = macAddress;
        int ipAddress = ((WifiManager) context.getSystemService("wifi")).getConnectionInfo().getIpAddress();
        this.z = a(new StringBuilder().append(ipAddress & 255).toString(), 3) + a(new StringBuilder().append((ipAddress >> 8) & 255).toString(), 3) + a(new StringBuilder().append((ipAddress >> 16) & 255).toString(), 3) + a(new StringBuilder().append(ipAddress >>> 24).toString(), 3);
        this.q = new SimpleDateFormat("yyyyMMddhhmmss").format(new Date()) + new Random().nextInt(999999);
        this.u = new StringBuilder().append(Build.VERSION.SDK_INT).toString();
        this.v = Build.MODEL.trim();
        this.t = a(this.q + a.a.b.a(this.F[44], this.G));
    }
}
