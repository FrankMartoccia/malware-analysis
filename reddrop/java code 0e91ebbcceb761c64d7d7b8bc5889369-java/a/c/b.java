package a.c;

import a.e.d;
import android.os.Handler;
import android.os.Message;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.net.HttpURLConnection;
import java.net.URL;
/* JADX INFO: Access modifiers changed from: package-private */
/* loaded from: classes.dex */
public final class b implements Runnable {

    /* renamed from: a  reason: collision with root package name */
    final /* synthetic */ String f489a;
    final /* synthetic */ String b;
    final /* synthetic */ String c;

    /* JADX INFO: Access modifiers changed from: package-private */
    public b(String str, String str2, String str3) {
        this.f489a = str;
        this.b = str2;
        this.c = str3;
    }

    @Override // java.lang.Runnable
    public final void run() {
        InputStream inputStream;
        Handler handler;
        Handler handler2;
        Handler handler3;
        String unused;
        String unused2;
        String unused3;
        String unused4;
        FileOutputStream fileOutputStream = null;
        File file = new File(this.f489a, this.b);
        if (file.exists()) {
            file.delete();
        }
        if (d.a().f508a) {
            a.a();
            handler3 = a.c;
            handler3.sendEmptyMessage(1);
            return;
        }
        byte[] bArr = new byte[2048];
        try {
            inputStream = ((HttpURLConnection) new URL(this.c).openConnection()).getInputStream();
            try {
                try {
                    FileOutputStream fileOutputStream2 = new FileOutputStream(file);
                    while (true) {
                        try {
                            int read = inputStream.read(bArr);
                            if (read == -1) {
                                break;
                            }
                            fileOutputStream2.write(bArr, 0, read);
                        } catch (IOException e) {
                            e = e;
                            fileOutputStream = fileOutputStream2;
                            Message message = new Message();
                            message.what = 0;
                            message.obj = e.getMessage();
                            handler = a.c;
                            handler.sendMessage(message);
                            unused = a.f488a;
                            e.toString();
                            if (inputStream != null) {
                                try {
                                    inputStream.close();
                                } catch (IOException e2) {
                                    unused2 = a.f488a;
                                    e2.toString();
                                    return;
                                }
                            }
                            if (fileOutputStream != null) {
                                fileOutputStream.close();
                                return;
                            }
                            return;
                        } catch (Throwable th) {
                            th = th;
                            fileOutputStream = fileOutputStream2;
                            if (inputStream != null) {
                                try {
                                    inputStream.close();
                                } catch (IOException e3) {
                                    unused4 = a.f488a;
                                    e3.toString();
                                    throw th;
                                }
                            }
                            if (fileOutputStream != null) {
                                fileOutputStream.close();
                            }
                            throw th;
                        }
                    }
                    fileOutputStream2.flush();
                    handler2 = a.c;
                    handler2.sendEmptyMessage(1);
                    if (inputStream != null) {
                        try {
                            inputStream.close();
                        } catch (IOException e4) {
                            unused3 = a.f488a;
                            e4.toString();
                            return;
                        }
                    }
                    fileOutputStream2.close();
                } catch (IOException e5) {
                    e = e5;
                }
            } catch (Throwable th2) {
                th = th2;
            }
        } catch (IOException e6) {
            e = e6;
            inputStream = null;
        } catch (Throwable th3) {
            th = th3;
            inputStream = null;
        }
    }
}
