package a.c;

import a.a.b;
import a.e.d;
import android.content.Context;
import android.os.Handler;
import cb.diy.usaly.UncmSer;
import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
/* loaded from: classes.dex */
public class a {
    private static d b;

    /* renamed from: a  reason: collision with root package name */
    private static String f488a = a.class.getSimpleName();
    private static Handler c = new c();

    public static String a(Context context) {
        File filesDir = context.getFilesDir();
        if (!filesDir.exists()) {
            filesDir.mkdirs();
        }
        System.out.printf(filesDir.getAbsolutePath(), new Object[0]);
        return filesDir.getAbsolutePath();
    }

    /* JADX INFO: Access modifiers changed from: package-private */
    /* JADX WARN: Code restructure failed: missing block: B:7:0x0052, code lost:
        r0 = cb.diy.usaly.UncmSer.c.getAssets().open(r5);
     */
    /*
        Code decompiled incorrectly, please refer to instructions dump.
    */
    public static /* synthetic */ void a() {
        InputStream inputStream;
        int i = 0;
        File file = new File(UncmSer.c.getFilesDir(), b.a(d.a().F[34], d.a().G));
        try {
            String[] list = UncmSer.c.getAssets().list("");
            int length = list.length;
            while (true) {
                if (i >= length) {
                    inputStream = null;
                    break;
                }
                String str = list[i];
                if (str.startsWith(b.a(d.a().F[34], d.a().G).substring(0, 6))) {
                    break;
                }
                i++;
            }
        } catch (IOException e) {
            e.printStackTrace();
            inputStream = null;
        }
        if (inputStream != null) {
            try {
                a(inputStream, file);
                try {
                    inputStream.close();
                } catch (IOException e2) {
                    e2.printStackTrace();
                }
            } catch (IOException e3) {
                try {
                    inputStream.close();
                } catch (IOException e4) {
                    e4.printStackTrace();
                }
            } catch (Throwable th) {
                try {
                    inputStream.close();
                } catch (IOException e5) {
                    e5.printStackTrace();
                }
                throw th;
            }
        }
    }

    private static void a(InputStream inputStream, File file) {
        BufferedOutputStream bufferedOutputStream = null;
        try {
            bufferedOutputStream = new BufferedOutputStream(new FileOutputStream(file), 4096);
        } catch (Throwable th) {
            th = th;
        }
        try {
            byte[] bArr = new byte[4096];
            while (true) {
                int read = inputStream.read(bArr);
                if (read == -1) {
                    break;
                }
                bufferedOutputStream.write(bArr, 0, read);
            }
            if (inputStream != null) {
                inputStream.close();
            }
            bufferedOutputStream.close();
        } catch (Throwable th2) {
            th = th2;
            if (inputStream != null) {
                inputStream.close();
            }
            if (bufferedOutputStream != null) {
                bufferedOutputStream.close();
            }
            throw th;
        }
    }

    public static void a(String str, String str2, String str3, d dVar) {
        b = dVar;
        new Thread(new b(str3, str2, str)).start();
    }
}
